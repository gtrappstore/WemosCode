SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 11-Jan-2019 20:05:59  PAGE    1

************ OBJECT LISTING ************

FILE NAME: A:\_Austuasch\TheRealSlimWifi\WiFi\WiFi.c

SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          WiFi.c     1    /*****************************************************************/
          WiFi.c     2    /*                                                               */
          WiFi.c     3    /*   CASIO fx-9860G SDK Library                                  */
          WiFi.c     4    /*                                                               */
          WiFi.c     5    /*   File name : [ProjectName].c                                 */
          WiFi.c     6    /*                                                               */
          WiFi.c     7    /*   Copyright (c) 2006 CASIO COMPUTER CO., LTD.                 */
          WiFi.c     8    /*                                                               */
          WiFi.c     9    /*****************************************************************/
          WiFi.c    10    #include "fxlib.h"
          WiFi.c    11    #include "stdio.h"
          WiFi.c    12    #include "..\WiFi_Lib\net.h"
          WiFi.c    13    #include "..\WiFi_Lib\net.c"
P   00000000              _openSerial:                     ; function: openSerial
                                                           ; frame size=16
    00000000 2FE6                   MOV.L       R14,@-R15
    00000002 E400                   MOV         #0,R4
    00000004 D346                   MOV.L       L1367+6,R3 ; _Serial_Open
    00000006 E009                   MOV         #9,R0
    00000008 4F22                   STS.L       PR,@-R15
    0000000A 7FF8                   ADD         #-8,R15
    0000000C 6EF3                   MOV         R15,R14
    0000000E 2E40                   MOV.B       R4,@R14
    00000010 80E1                   MOV.B       R0,@(1,R14)
    00000012 6043                   MOV         R4,R0
    00000014 80E2                   MOV.B       R0,@(2,R14)
    00000016 80E3                   MOV.B       R0,@(3,R14)
    00000018 80E4                   MOV.B       R0,@(4,R14)
    0000001A 80E5                   MOV.B       R0,@(5,R14)
    0000001C 430B                   JSR         @R3
    0000001E 64E3                   MOV         R14,R4
    00000020 7F08                   ADD         #8,R15
    00000022 4F26                   LDS.L       @R15+,PR
    00000024 000B                   RTS
    00000026 6EF6                   MOV.L       @R15+,R14
    00000028              _closeSerial:                    ; function: closeSerial
                                                           ; frame size=0
    00000028 D33E                   MOV.L       L1367+10,R3; _Serial_Close
    0000002A 432B                   JMP         @R3
    0000002C E401                   MOV         #1,R4
    0000002E              _sendCommand:                    ; function: sendCommand
                                                           ; frame size=8
    0000002E 4F22                   STS.L       PR,@-R15
    00000030 2F46                   MOV.L       R4,@-R15
    00000032 9472                   MOV.W       L1367,R4   ; H'00DB
    00000034 D33C                   MOV.L       L1367+14,R3; _Serial_BufferedTransmitOneByte
    00000036 430B                   JSR         @R3
    00000038 0009                   NOP
    0000003A D33C                   MOV.L       L1367+18,R3; _strlen
    0000003C 430B                   JSR         @R3
    0000003E 64F2                   MOV.L       @R15,R4
    00000040 64F2                   MOV.L       @R15,R4
    00000042 6503                   MOV         R0,R5
    00000044 D33A                   MOV.L       L1367+22,R3; _Serial_BufferedTransmitNBytes




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 11-Jan-2019 20:05:59  PAGE    2


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000046 7F04                   ADD         #4,R15
    00000048 7501                   ADD         #1,R5
    0000004A 432B                   JMP         @R3
    0000004C 4F26                   LDS.L       @R15+,PR
    0000004E              _sendStatus:                     ; function: sendStatus
                                                           ; frame size=8
    0000004E 4F22                   STS.L       PR,@-R15
    00000050 2F46                   MOV.L       R4,@-R15
    00000052 9463                   MOV.W       L1367+2,R4 ; H'00DC
    00000054 D334                   MOV.L       L1367+14,R3; _Serial_BufferedTransmitOneByte
    00000056 430B                   JSR         @R3
    00000058 0009                   NOP
    0000005A D334                   MOV.L       L1367+18,R3; _strlen
    0000005C 430B                   JSR         @R3
    0000005E 64F2                   MOV.L       @R15,R4
    00000060 64F2                   MOV.L       @R15,R4
    00000062 6503                   MOV         R0,R5
    00000064 D332                   MOV.L       L1367+22,R3; _Serial_BufferedTransmitNBytes
    00000066 7F04                   ADD         #4,R15
    00000068 7501                   ADD         #1,R5
    0000006A 432B                   JMP         @R3
    0000006C 4F26                   LDS.L       @R15+,PR
    0000006E              _receiveString:                  ; function: receiveString
                                                           ; frame size=0
    0000006E 9656                   MOV.W       L1367+4,R6 ; H'01F4
    00000070 A000                   BRA         _receiveStringTimeout
    00000072 0009                   NOP
    00000074              _receiveStringTimeout:           ; function: receiveStringTimeout
                                                           ; frame size=44
    00000074 2FE6                   MOV.L       R14,@-R15
    00000076 2FD6                   MOV.L       R13,@-R15
    00000078 2FC6                   MOV.L       R12,@-R15
    0000007A 2FB6                   MOV.L       R11,@-R15
    0000007C 2FA6                   MOV.L       R10,@-R15
    0000007E 2F96                   MOV.L       R9,@-R15
    00000080 2F86                   MOV.L       R8,@-R15
    00000082 6943                   MOV         R4,R9
    00000084 D32B                   MOV.L       L1367+26,R3; _RTC_GetTicks
    00000086 4F22                   STS.L       PR,@-R15
    00000088 7FF4                   ADD         #-12,R15
    0000008A 1F52                   MOV.L       R5,@(8,R15)
    0000008C 430B                   JSR         @R3
    0000008E 1F61                   MOV.L       R6,@(4,R15)
    00000090 DB29                   MOV.L       L1367+30,R11; _RTC_Elapsed_ms
    00000092 EE01                   MOV         #1,R14
    00000094 5AF2                   MOV.L       @(8,R15),R10
    00000096 6803                   MOV         R0,R8
    00000098 ED00                   MOV         #0,R13
    0000009A 6CD3                   MOV         R13,R12
    0000009C A013                   BRA         L1081
    0000009E 7AFF                   ADD         #-1,R10
    000000A0              L1082:                            
    000000A0 D226                   MOV.L       L1367+34,R2; _Serial_GetReceivedBytesAvailable
    000000A2 420B                   JSR         @R2
    000000A4 0009                   NOP
    000000A6 30E3                   CMP/GE      R14,R0
    000000A8 8B0D                   BF          L1081




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 11-Jan-2019 20:05:59  PAGE    3


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000000AA D225                   MOV.L       L1367+38,R2; _Serial_ReadOneByte
    000000AC 420B                   JSR         @R2
    000000AE 64F3                   MOV         R15,R4
    000000B0 63F0                   MOV.B       @R15,R3
    000000B2 2338                   TST         R3,R3
    000000B4 8901                   BT          L1085
    000000B6 3DA3                   CMP/GE      R10,R13
    000000B8 8B01                   BF          L1084
    000000BA              L1085:                            
    000000BA A009                   BRA         L1086
    000000BC 6CE3                   MOV         R14,R12
    000000BE              L1084:                            
    000000BE 60D3                   MOV         R13,R0
    000000C0 63F0                   MOV.B       @R15,R3
    000000C2 7D01                   ADD         #1,R13
    000000C4 0934                   MOV.B       R3,@(R0,R9)
    000000C6              L1081:                            
    000000C6 55F1                   MOV.L       @(4,R15),R5
    000000C8 4B0B                   JSR         @R11
    000000CA 6483                   MOV         R8,R4
    000000CC 2008                   TST         R0,R0
    000000CE 89E7                   BT          L1082
    000000D0              L1086:                            
    000000D0 60D3                   MOV         R13,R0
    000000D2 E300                   MOV         #0,R3
    000000D4 0934                   MOV.B       R3,@(R0,R9)
    000000D6 60C3                   MOV         R12,R0
    000000D8 7F0C                   ADD         #12,R15
    000000DA 4F26                   LDS.L       @R15+,PR
    000000DC 68F6                   MOV.L       @R15+,R8
    000000DE 69F6                   MOV.L       @R15+,R9
    000000E0 6AF6                   MOV.L       @R15+,R10
    000000E2 6BF6                   MOV.L       @R15+,R11
    000000E4 6CF6                   MOV.L       @R15+,R12
    000000E6 6DF6                   MOV.L       @R15+,R13
    000000E8 000B                   RTS
    000000EA 6EF6                   MOV.L       @R15+,R14
    000000EC              _receiveStatus:                  ; function: receiveStatus
                                                           ; frame size=0
    000000EC 9417                   MOV.W       L1367+4,R4 ; H'01F4
    000000EE A000                   BRA         _receiveStatusTimeout
    000000F0 0009                   NOP
    000000F2              _receiveStatusTimeout:           ; function: receiveStatusTimeout
                                                           ; frame size=48
    000000F2 2FE6                   MOV.L       R14,@-R15
    000000F4 2FD6                   MOV.L       R13,@-R15
    000000F6 2FC6                   MOV.L       R12,@-R15
    000000F8 2FB6                   MOV.L       R11,@-R15
    000000FA 2FA6                   MOV.L       R10,@-R15
    000000FC 2F96                   MOV.L       R9,@-R15
    000000FE 2F86                   MOV.L       R8,@-R15
    00000100 4F22                   STS.L       PR,@-R15
    00000102 7FF0                   ADD         #-16,R15
    00000104 D30B                   MOV.L       L1367+26,R3; _RTC_GetTicks
    00000106 430B                   JSR         @R3
    00000108 6D43                   MOV         R4,R13
    0000010A 6903                   MOV         R0,R9




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 11-Jan-2019 20:05:59  PAGE    4


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000010C D80A                   MOV.L       L1367+30,R8; _RTC_Elapsed_ms
    0000010E EC01                   MOV         #1,R12
    00000110 DA0A                   MOV.L       L1367+34,R10; _Serial_GetReceivedBytesAvailable
    00000112 6EF3                   MOV         R15,R14
    00000114 9B02                   MOV.W       L1367+2,R11; H'00DC
    00000116 A028                   BRA         L1089
    00000118 7E04                   ADD         #4,R14
    0000011A              L1367:                            
    0000011A 00DB                   .DATA.W     H'00DB
    0000011C 00DC                   .DATA.W     H'00DC
    0000011E 01F4                   .DATA.W     H'01F4
    00000120 <00000000>             .DATA.L     _Serial_Open
    00000124 <00000000>             .DATA.L     _Serial_Close
    00000128 <00000000>             .DATA.L     _Serial_BufferedTransmitOneByte
    0000012C <00000000>             .DATA.L     _strlen
    00000130 <00000000>             .DATA.L     _Serial_BufferedTransmitNBytes
    00000134 <00000000>             .DATA.L     _RTC_GetTicks
    00000138 <00000000>             .DATA.L     _RTC_Elapsed_ms
    0000013C <00000000>             .DATA.L     _Serial_GetReceivedBytesAvailable
    00000140 <00000000>             .DATA.L     _Serial_ReadOneByte
    00000144              L1090:                            
    00000144 4A0B                   JSR         @R10
    00000146 0009                   NOP
    00000148 30C3                   CMP/GE      R12,R0
    0000014A 8B0E                   BF          L1089
    0000014C D22B                   MOV.L       L1368+6,R2 ; _Serial_ReadOneByte
    0000014E 420B                   JSR         @R2
    00000150 64F3                   MOV         R15,R4
    00000152 63F0                   MOV.B       @R15,R3
    00000154 633C                   EXTU.B      R3,R3
    00000156 33B0                   CMP/EQ      R11,R3
    00000158 8B07                   BF          L1089
    0000015A 66D3                   MOV         R13,R6
    0000015C E50B                   MOV         #11,R5
    0000015E BF89                   BSR         _receiveStringTimeout
    00000160 64E3                   MOV         R14,R4
    00000162 B3D9                   BSR         _convertStatus
    00000164 64E3                   MOV         R14,R4
    00000166 A006                   BRA         L1093
    00000168 0009                   NOP
    0000016A              L1089:                            
    0000016A 65D3                   MOV         R13,R5
    0000016C 480B                   JSR         @R8
    0000016E 6493                   MOV         R9,R4
    00000170 2008                   TST         R0,R0
    00000172 89E7                   BT          L1090
    00000174 E0FF                   MOV         #-1,R0
    00000176              L1093:                            
    00000176 7F10                   ADD         #16,R15
    00000178 4F26                   LDS.L       @R15+,PR
    0000017A 68F6                   MOV.L       @R15+,R8
    0000017C 69F6                   MOV.L       @R15+,R9
    0000017E 6AF6                   MOV.L       @R15+,R10
    00000180 6BF6                   MOV.L       @R15+,R11
    00000182 6CF6                   MOV.L       @R15+,R12
    00000184 6DF6                   MOV.L       @R15+,R13
    00000186 000B                   RTS




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 11-Jan-2019 20:05:59  PAGE    5


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000188 6EF6                   MOV.L       @R15+,R14
    0000018A              _calculateChecksum:              ; function: calculateChecksum
                                                           ; frame size=8
                                                           ; used runtime library name:
                                                           ; __modlu
    0000018A E600                   MOV         #0,R6
    0000018C 2FE6                   MOV.L       R14,@-R15
    0000018E 4515                   CMP/PL      R5
    00000190 4F22                   STS.L       PR,@-R15
    00000192 EE00                   MOV         #0,R14
    00000194 3E4C                   ADD         R4,R14
    00000196 942E                   MOV.W       L1368,R4   ; H'2710
    00000198 8F0D                   BF/S        L1094
    0000019A 6763                   MOV         R6,R7
    0000019C              L1095:                            
    0000019C 63E4                   MOV.B       @R14+,R3
    0000019E 633C                   EXTU.B      R3,R3
    000001A0 363C                   ADD         R3,R6
    000001A2 3646                   CMP/HI      R4,R6
    000001A4 8B04                   BF          L1096
    000001A6 6163                   MOV         R6,R1
    000001A8 D315                   MOV.L       L1368+10,R3; __modlu
    000001AA 430B                   JSR         @R3
    000001AC 6043                   MOV         R4,R0
    000001AE 6603                   MOV         R0,R6
    000001B0              L1096:                            
    000001B0 7701                   ADD         #1,R7
    000001B2 3753                   CMP/GE      R5,R7
    000001B4 8BF2                   BF          L1095
    000001B6              L1094:                            
    000001B6 6063                   MOV         R6,R0
    000001B8 4F26                   LDS.L       @R15+,PR
    000001BA 000B                   RTS
    000001BC 6EF6                   MOV.L       @R15+,R14
    000001BE              _receiveData:                    ; function: receiveData
                                                           ; frame size=4
    000001BE 7FFC                   ADD         #-4,R15
    000001C0 2F42                   MOV.L       R4,@R15
    000001C2 6543                   MOV         R4,R5
    000001C4 9418                   MOV.W       L1368+2,R4 ; H'01F4
    000001C6 A000                   BRA         _receiveDataTimeout
    000001C8 7F04                   ADD         #4,R15
    000001CA              _receiveDataTimeout:             ; function: receiveDataTimeout
                                                           ; frame size=64
                                                           ; used runtime library name:
                                                           ; __slow_strcmp1
    000001CA 2FE6                   MOV.L       R14,@-R15
    000001CC 2FD6                   MOV.L       R13,@-R15
    000001CE 2FC6                   MOV.L       R12,@-R15
    000001D0 2FB6                   MOV.L       R11,@-R15
    000001D2 2FA6                   MOV.L       R10,@-R15
    000001D4 2F96                   MOV.L       R9,@-R15
    000001D6 6A43                   MOV         R4,R10
    000001D8 D30A                   MOV.L       L1368+14,R3; _RTC_GetTicks
    000001DA 2F86                   MOV.L       R8,@-R15
    000001DC 4F22                   STS.L       PR,@-R15
    000001DE 7FE0                   ADD         #-32,R15




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 11-Jan-2019 20:05:59  PAGE    6


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000001E0 430B                   JSR         @R3
    000001E2 1F52                   MOV.L       R5,@(8,R15)
    000001E4 1F03                   MOV.L       R0,@(12,R15)
    000001E6 EC00                   MOV         #0,R12
    000001E8 1FC4                   MOV.L       R12,@(16,R15)
    000001EA 53F2                   MOV.L       @(8,R15),R3
    000001EC 4311                   CMP/PZ      R3
    000001EE 8D61                   BT/S        L1101
    000001F0 6EC3                   MOV         R12,R14
    000001F2 A089                   BRA         L1100
    000001F4 E000                   MOV         #0,R0
    000001F6              L1368:                            
    000001F6 2710                   .DATA.W     H'2710
    000001F8 01F4                   .DATA.W     H'01F4
    000001FA 0000                   .DATA.W     0
    000001FC <00000000>             .DATA.L     _Serial_ReadOneByte
    00000200 <00000000>             .DATA.L     __modlu
    00000204 <00000000>             .DATA.L     _RTC_GetTicks
    00000208              L1102:                            
    00000208 DD35                   MOV.L       L1369+4,R13; _Serial_ReadOneByte
    0000020A 64F3                   MOV         R15,R4
    0000020C 4D0B                   JSR         @R13
    0000020E 7404                   ADD         #4,R4
    00000210 2008                   TST         R0,R0
    00000212 8B4F                   BF          L1101
    00000214 84F4                   MOV.B       @(4,R15),R0
    00000216 600C                   EXTU.B      R0,R0
    00000218 9360                   MOV.W       L1369,R3   ; H'00DD
    0000021A 3030                   CMP/EQ      R3,R0
    0000021C 8B4A                   BF          L1101
    0000021E 6DF3                   MOV         R15,R13
    00000220 7D14                   ADD         #20,R13
    00000222 66A3                   MOV         R10,R6
    00000224 E50B                   MOV         #11,R5
    00000226 BF25                   BSR         _receiveStringTimeout
    00000228 64D3                   MOV         R13,R4
    0000022A DB2E                   MOV.L       L1369+8,R11; L469
    0000022C D22E                   MOV.L       L1369+12,R2; __slow_strcmp1
    0000022E 65B3                   MOV         R11,R5
    00000230 420B                   JSR         @R2
    00000232 64D3                   MOV         R13,R4
    00000234 2008                   TST         R0,R0
    00000236 8B3D                   BF          L1101
    00000238 D22C                   MOV.L       L1369+16,R2; _malloc
    0000023A 6BC3                   MOV         R12,R11
    0000023C 420B                   JSR         @R2
    0000023E E40C                   MOV         #12,R4
    00000240 6E03                   MOV         R0,R14
    00000242 E901                   MOV         #1,R9
    00000244 1EB2                   MOV.L       R11,@(8,R14)
    00000246 66A3                   MOV         R10,R6
    00000248 E50B                   MOV         #11,R5
    0000024A BF13                   BSR         _receiveStringTimeout
    0000024C 64D3                   MOV         R13,R4
    0000024E 2008                   TST         R0,R0
    00000250 8909                   BT          L975
    00000252 D327                   MOV.L       L1369+20,R3; _atol




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 11-Jan-2019 20:05:59  PAGE    7


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000254 430B                   JSR         @R3
    00000256 64D3                   MOV         R13,R4
    00000258 2E02                   MOV.L       R0,@R14
    0000025A 66A3                   MOV         R10,R6
    0000025C E50B                   MOV         #11,R5
    0000025E BF09                   BSR         _receiveStringTimeout
    00000260 64D3                   MOV         R13,R4
    00000262 2008                   TST         R0,R0
    00000264 8B01                   BF          L1107
    00000266              L975:
    00000266 A02B                   BRA         L1106
    00000268 1F94                   MOV.L       R9,@(16,R15)
    0000026A              L1107:                            
    0000026A D221                   MOV.L       L1369+20,R2; _atol
    0000026C 420B                   JSR         @R2
    0000026E 64D3                   MOV         R13,R4
    00000270 1E01                   MOV.L       R0,@(4,R14)
    00000272 D31E                   MOV.L       L1369+16,R3; _malloc
    00000274 430B                   JSR         @R3
    00000276 64E2                   MOV.L       @R14,R4
    00000278 1E02                   MOV.L       R0,@(8,R14)
    0000027A              L1109:                            
    0000027A 66F3                   MOV         R15,R6
    0000027C 65E2                   MOV.L       @R14,R5
    0000027E DD1D                   MOV.L       L1369+24,R13; _Serial_ReadNBytes
    00000280 54E2                   MOV.L       @(8,R14),R4
    00000282 35B8                   SUB         R11,R5
    00000284 4D0B                   JSR         @R13
    00000286 34BC                   ADD         R11,R4
    00000288 63F1                   MOV.W       @R15,R3
    0000028A 3B3C                   ADD         R3,R11
    0000028C 63E2                   MOV.L       @R14,R3
    0000028E 3B32                   CMP/HS      R3,R11
    00000290 8B07                   BF          L1110
    00000292 65E2                   MOV.L       @R14,R5
    00000294 BF79                   BSR         _calculateChecksum
    00000296 54E2                   MOV.L       @(8,R14),R4
    00000298 52E1                   MOV.L       @(4,R14),R2
    0000029A 3200                   CMP/EQ      R0,R2
    0000029C 8910                   BT          L1106
    0000029E A00F                   BRA         L1106
    000002A0 1F94                   MOV.L       R9,@(16,R15)
    000002A2              L1110:                            
    000002A2 65A3                   MOV         R10,R5
    000002A4 480B                   JSR         @R8
    000002A6 54F3                   MOV.L       @(12,R15),R4
    000002A8 2008                   TST         R0,R0
    000002AA 89E6                   BT          L1109
    000002AC B180                   BSR         _freeData
    000002AE 64E3                   MOV         R14,R4
    000002B0 A006                   BRA         L1106
    000002B2 6EC3                   MOV         R12,R14
    000002B4              L1101:                            
    000002B4 D810                   MOV.L       L1369+28,R8; _RTC_Elapsed_ms
    000002B6 65A3                   MOV         R10,R5
    000002B8 480B                   JSR         @R8
    000002BA 54F3                   MOV.L       @(12,R15),R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 11-Jan-2019 20:05:59  PAGE    8


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000002BC 2008                   TST         R0,R0
    000002BE 89A3                   BT          L1102
    000002C0              L1106:                            
    000002C0 50F4                   MOV.L       @(16,R15),R0
    000002C2 8801                   CMP/EQ      #1,R0
    000002C4 8B1C                   BF          L1114
    000002C6 B173                   BSR         _freeData
    000002C8 64E3                   MOV         R14,R4
    000002CA D40C                   MOV.L       L1369+32,R4; L480
    000002CC BEBF                   BSR         _sendStatus
    000002CE 0009                   NOP
    000002D0 55F2                   MOV.L       @(8,R15),R5
    000002D2 75FF                   ADD         #-1,R5
    000002D4 BF79                   BSR         _receiveDataTimeout
    000002D6 64A3                   MOV         R10,R4
    000002D8 A015                   BRA         L1115
    000002DA 6E03                   MOV         R0,R14
    000002DC              L1369:                            
    000002DC 00DD                   .DATA.W     H'00DD
    000002DE 0000                   .DATA.W     0
    000002E0 <00000000>             .DATA.L     _Serial_ReadOneByte
    000002E4 <00000000>             .DATA.L     L469
    000002E8 <00000000>             .DATA.L     __slow_strcmp1
    000002EC <00000000>             .DATA.L     _malloc
    000002F0 <00000000>             .DATA.L     _atol
    000002F4 <00000000>             .DATA.L     _Serial_ReadNBytes
    000002F8 <00000000>             .DATA.L     _RTC_Elapsed_ms
    000002FC <00000000>             .DATA.L     L480
    00000300              L1114:                            
    00000300 D445                   MOV.L       L1370+4,R4 ; L482
    00000302 BEA4                   BSR         _sendStatus
    00000304 0009                   NOP
    00000306              L1115:                            
    00000306 60E3                   MOV         R14,R0
    00000308              L1100:                            
    00000308 7F20                   ADD         #32,R15
    0000030A 4F26                   LDS.L       @R15+,PR
    0000030C 68F6                   MOV.L       @R15+,R8
    0000030E 69F6                   MOV.L       @R15+,R9
    00000310 6AF6                   MOV.L       @R15+,R10
    00000312 6BF6                   MOV.L       @R15+,R11
    00000314 6CF6                   MOV.L       @R15+,R12
    00000316 6DF6                   MOV.L       @R15+,R13
    00000318 000B                   RTS
    0000031A 6EF6                   MOV.L       @R15+,R14
    0000031C              _sendNetData:                    ; function: sendNetData
                                                           ; frame size=0
    0000031C E600                   MOV         #0,R6
    0000031E              _sendNetDataRetry:               ; function: sendNetDataRetry
                                                           ; frame size=16
    0000031E 2FE6                   MOV.L       R14,@-R15
    00000320 2FD6                   MOV.L       R13,@-R15
    00000322 6E53                   MOV         R5,R14
    00000324 4F22                   STS.L       PR,@-R15
    00000326 6D63                   MOV         R6,R13
    00000328 7FFC                   ADD         #-4,R15
    0000032A 2F42                   MOV.L       R4,@R15




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 11-Jan-2019 20:05:59  PAGE    9


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000032C              L1116:                            
    0000032C E601                   MOV         #1,R6
    0000032E 65E3                   MOV         R14,R5
    00000330 B011                   BSR         _sendNetDataProt
    00000332 64F2                   MOV.L       @R15,R4
    00000334 BEDA                   BSR         _receiveStatus
    00000336 0009                   NOP
    00000338 2008                   TST         R0,R0
    0000033A 8906                   BT          L1117
    0000033C 4D15                   CMP/PL      R13
    0000033E 8B04                   BF          L1117
    00000340 64D3                   MOV         R13,R4
    00000342 74FF                   ADD         #-1,R4
    00000344 65E3                   MOV         R14,R5
    00000346 AFF1                   BRA         L1116
    00000348 6D43                   MOV         R4,R13
    0000034A              L1117:                            
    0000034A 7F04                   ADD         #4,R15
    0000034C 4F26                   LDS.L       @R15+,PR
    0000034E 6DF6                   MOV.L       @R15+,R13
    00000350 000B                   RTS
    00000352 6EF6                   MOV.L       @R15+,R14
    00000354              _sendUdpData:                    ; function: sendUdpData
                                                           ; frame size=0
    00000354 E602                   MOV         #2,R6
    00000356              _sendNetDataProt:                ; function: sendNetDataProt
                                                           ; frame size=60
    00000356 6063                   MOV         R6,R0
    00000358 2FE6                   MOV.L       R14,@-R15
    0000035A 8801                   CMP/EQ      #1,R0
    0000035C 2FD6                   MOV.L       R13,@-R15
    0000035E 6E63                   MOV         R6,R14
    00000360 2FC6                   MOV.L       R12,@-R15
    00000362 2FB6                   MOV.L       R11,@-R15
    00000364 2FA6                   MOV.L       R10,@-R15
    00000366 6B53                   MOV         R5,R11
    00000368 2F96                   MOV.L       R9,@-R15
    0000036A 2F86                   MOV.L       R8,@-R15
    0000036C 4F22                   STS.L       PR,@-R15
    0000036E 6843                   MOV         R4,R8
    00000370 7FF4                   ADD         #-12,R15
    00000372 8D03                   BT/S        L1119
    00000374 EC00                   MOV         #0,R12
    00000376 60E3                   MOV         R14,R0
    00000378 8802                   CMP/EQ      #2,R0
    0000037A 8B6B                   BF          L1120
    0000037C              L1119:                            
    0000037C 944A                   MOV.W       L1370,R4   ; H'00DD
    0000037E D327                   MOV.L       L1370+8,R3 ; _Serial_BufferedTransmitOneByte
    00000380 430B                   JSR         @R3
    00000382 0009                   NOP
    00000384 DA26                   MOV.L       L1370+12,R10; _strlen
    00000386 60E3                   MOV         R14,R0
    00000388 DD26                   MOV.L       L1370+16,R13; _Serial_BufferedTransmitNBytes
    0000038A 8801                   CMP/EQ      #1,R0
    0000038C 8B08                   BF          L1121
    0000038E D426                   MOV.L       L1370+20,R4; L503




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 11-Jan-2019 20:05:59  PAGE   10


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000390 4A0B                   JSR         @R10
    00000392 0009                   NOP
    00000394 D424                   MOV.L       L1370+20,R4; L503
    00000396 6503                   MOV         R0,R5
    00000398 4D0B                   JSR         @R13
    0000039A 7501                   ADD         #1,R5
    0000039C A009                   BRA         L1122
    0000039E 0009                   NOP
    000003A0              L1121:                            
    000003A0 8802                   CMP/EQ      #2,R0
    000003A2 8B06                   BF          L1122
    000003A4 D421                   MOV.L       L1370+24,R4; L505
    000003A6 4A0B                   JSR         @R10
    000003A8 0009                   NOP
    000003AA 6503                   MOV         R0,R5
    000003AC D41F                   MOV.L       L1370+24,R4; L505
    000003AE 4D0B                   JSR         @R13
    000003B0 7501                   ADD         #1,R5
    000003B2              L1122:                            
    000003B2 6EF3                   MOV         R15,R14
    000003B4 D31E                   MOV.L       L1370+28,R3; L506
    000003B6 2FB6                   MOV.L       R11,@-R15
    000003B8 2F36                   MOV.L       R3,@-R15
    000003BA D21E                   MOV.L       L1370+32,R2; _sprintf
    000003BC 420B                   JSR         @R2
    000003BE 64E3                   MOV         R14,R4
    000003C0 4A0B                   JSR         @R10
    000003C2 64E3                   MOV         R14,R4
    000003C4 6503                   MOV         R0,R5
    000003C6 7501                   ADD         #1,R5
    000003C8 4D0B                   JSR         @R13
    000003CA 64E3                   MOV         R14,R4
    000003CC 65B3                   MOV         R11,R5
    000003CE BEDC                   BSR         _calculateChecksum
    000003D0 6483                   MOV         R8,R4
    000003D2 2F06                   MOV.L       R0,@-R15
    000003D4 D216                   MOV.L       L1370+28,R2; L506
    000003D6 2F26                   MOV.L       R2,@-R15
    000003D8 D316                   MOV.L       L1370+32,R3; _sprintf
    000003DA 430B                   JSR         @R3
    000003DC 64E3                   MOV         R14,R4
    000003DE 7F10                   ADD         #16,R15
    000003E0 4A0B                   JSR         @R10
    000003E2 64E3                   MOV         R14,R4
    000003E4 6503                   MOV         R0,R5
    000003E6 7501                   ADD         #1,R5
    000003E8 4D0B                   JSR         @R13
    000003EA 64E3                   MOV         R14,R4
    000003EC D212                   MOV.L       L1370+36,R2; _GetAppName
    000003EE 420B                   JSR         @R2
    000003F0 64E3                   MOV         R14,R4
    000003F2 4A0B                   JSR         @R10
    000003F4 64E3                   MOV         R14,R4
    000003F6 6503                   MOV         R0,R5
    000003F8 7501                   ADD         #1,R5
    000003FA 4D0B                   JSR         @R13
    000003FC 64E3                   MOV         R14,R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 11-Jan-2019 20:05:59  PAGE   11


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000003FE 9A0A                   MOV.W       L1370+2,R10; H'0100
    00000400 A026                   BRA         L1124
    00000402 0009                   NOP
    00000404              L1125:                            
    00000404 6EB3                   MOV         R11,R14
    00000406 3EC8                   SUB         R12,R14
    00000408 3EA7                   CMP/GT      R10,R14
    0000040A 8F01                   BF/S        L1126
    0000040C 6983                   MOV         R8,R9
    0000040E 6EA3                   MOV         R10,R14
    00000410              L1126:                            
    00000410 A018                   BRA         L1127
    00000412 39CC                   ADD         R12,R9
    00000414              L1370:                            
    00000414 00DD                   .DATA.W     H'00DD
    00000416 0100                   .DATA.W     H'0100
    00000418 <00000000>             .DATA.L     L482
    0000041C <00000000>             .DATA.L     _Serial_BufferedTransmitOneByte
    00000420 <00000000>             .DATA.L     _strlen
    00000424 <00000000>             .DATA.L     _Serial_BufferedTransmitNBytes
    00000428 <00000000>             .DATA.L     L503
    0000042C <00000000>             .DATA.L     L505
    00000430 <00000000>             .DATA.L     L506
    00000434 <00000000>             .DATA.L     _sprintf
    00000438 <00000000>             .DATA.L     _GetAppName
    0000043C              L1128:                            
    0000043C E300                   MOV         #0,R3
    0000043E 33E7                   CMP/GT      R14,R3
    00000440 3E3E                   ADDC        R3,R14
    00000442 4E21                   SHAR        R14
    00000444              L1127:                            
    00000444 65E3                   MOV         R14,R5
    00000446 4D0B                   JSR         @R13
    00000448 6493                   MOV         R9,R4
    0000044A 8802                   CMP/EQ      #2,R0
    0000044C 89F6                   BT          L1128
    0000044E 3CEC                   ADD         R14,R12
    00000450              L1124:                            
    00000450 3CB2                   CMP/HS      R11,R12
    00000452 8BD7                   BF          L1125
    00000454              L1120:                            
    00000454 7F0C                   ADD         #12,R15
    00000456 4F26                   LDS.L       @R15+,PR
    00000458 68F6                   MOV.L       @R15+,R8
    0000045A 69F6                   MOV.L       @R15+,R9
    0000045C 6AF6                   MOV.L       @R15+,R10
    0000045E 6BF6                   MOV.L       @R15+,R11
    00000460 6CF6                   MOV.L       @R15+,R12
    00000462 6DF6                   MOV.L       @R15+,R13
    00000464 000B                   RTS
    00000466 6EF6                   MOV.L       @R15+,R14
    00000468              _receiveNetData:                 ; function: receiveNetData
                                                           ; frame size=0
    00000468 946E                   MOV.W       L1371,R4   ; H'01F4
    0000046A A000                   BRA         _receiveNetDataTimeout
    0000046C 0009                   NOP
    0000046E              _receiveNetDataTimeout:          ; function: receiveNetDataTimeout




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 11-Jan-2019 20:05:59  PAGE   12


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

                                                           ; frame size=56
                                                           ; used runtime library name:
                                                           ; __slow_strcmp1
    0000046E 2FE6                   MOV.L       R14,@-R15
    00000470 2FD6                   MOV.L       R13,@-R15
    00000472 2FC6                   MOV.L       R12,@-R15
    00000474 2FB6                   MOV.L       R11,@-R15
    00000476 EB00                   MOV         #0,R11
    00000478 D335                   MOV.L       L1371+8,R3 ; _RTC_GetTicks
    0000047A 2FA6                   MOV.L       R10,@-R15
    0000047C 2F96                   MOV.L       R9,@-R15
    0000047E 2F86                   MOV.L       R8,@-R15
    00000480 4F22                   STS.L       PR,@-R15
    00000482 7FE8                   ADD         #-24,R15
    00000484 430B                   JSR         @R3
    00000486 1F42                   MOV.L       R4,@(8,R15)
    00000488 6A03                   MOV         R0,R10
    0000048A 6EB3                   MOV         R11,R14
    0000048C A079                   BRA         L1130
    0000048E 68B3                   MOV         R11,R8
    00000490              L1131:                            
    00000490 DD30                   MOV.L       L1371+12,R13; _Serial_ReadOneByte
    00000492 64F3                   MOV         R15,R4
    00000494 4D0B                   JSR         @R13
    00000496 7404                   ADD         #4,R4
    00000498 2008                   TST         R0,R0
    0000049A 8B72                   BF          L1130
    0000049C 84F4                   MOV.B       @(4,R15),R0
    0000049E 600C                   EXTU.B      R0,R0
    000004A0 9353                   MOV.W       L1371+2,R3 ; H'00DD
    000004A2 3030                   CMP/EQ      R3,R0
    000004A4 8B6D                   BF          L1130
    000004A6 6DF3                   MOV         R15,R13
    000004A8 9C50                   MOV.W       L1371+4,R12; H'03E8
    000004AA E50B                   MOV         #11,R5
    000004AC 7D0C                   ADD         #12,R13
    000004AE 66C3                   MOV         R12,R6
    000004B0 BDE0                   BSR         _receiveStringTimeout
    000004B2 64D3                   MOV         R13,R4
    000004B4 D528                   MOV.L       L1371+16,R5; L503
    000004B6 D229                   MOV.L       L1371+20,R2; __slow_strcmp1
    000004B8 420B                   JSR         @R2
    000004BA 64D3                   MOV         R13,R4
    000004BC 2008                   TST         R0,R0
    000004BE 8B60                   BF          L1130
    000004C0 D227                   MOV.L       L1371+24,R2; _malloc
    000004C2 6AB3                   MOV         R11,R10
    000004C4 420B                   JSR         @R2
    000004C6 E418                   MOV         #24,R4
    000004C8 6E03                   MOV         R0,R14
    000004CA 66C3                   MOV         R12,R6
    000004CC 1EA5                   MOV.L       R10,@(20,R14)
    000004CE E50B                   MOV         #11,R5
    000004D0 BDD0                   BSR         _receiveStringTimeout
    000004D2 64D3                   MOV         R13,R4
    000004D4 2008                   TST         R0,R0
    000004D6 8913                   BT          L978




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 11-Jan-2019 20:05:59  PAGE   13


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000004D8 D222                   MOV.L       L1371+28,R2; _atol
    000004DA 420B                   JSR         @R2
    000004DC 64D3                   MOV         R13,R4
    000004DE 66C3                   MOV         R12,R6
    000004E0 2E02                   MOV.L       R0,@R14
    000004E2 E50B                   MOV         #11,R5
    000004E4 BDC6                   BSR         _receiveStringTimeout
    000004E6 64D3                   MOV         R13,R4
    000004E8 2008                   TST         R0,R0
    000004EA 8909                   BT          L978
    000004EC D31D                   MOV.L       L1371+28,R3; _atol
    000004EE 430B                   JSR         @R3
    000004F0 64D3                   MOV         R13,R4
    000004F2 66C3                   MOV         R12,R6
    000004F4 1E01                   MOV.L       R0,@(4,R14)
    000004F6 E50B                   MOV         #11,R5
    000004F8 BDBC                   BSR         _receiveStringTimeout
    000004FA 64D3                   MOV         R13,R4
    000004FC 2008                   TST         R0,R0
    000004FE 8B01                   BF          L1137
    00000500              L978:
    00000500 A045                   BRA         L1135
    00000502 E801                   MOV         #1,R8
    00000504              L1137:                            
    00000504 D318                   MOV.L       L1371+32,R3; _memcpy
    00000506 E609                   MOV         #9,R6
    00000508 65D3                   MOV         R13,R5
    0000050A 64E3                   MOV         R14,R4
    0000050C 430B                   JSR         @R3
    0000050E 7408                   ADD         #8,R4
    00000510 D20F                   MOV.L       L1371+8,R2 ; _RTC_GetTicks
    00000512 420B                   JSR         @R2
    00000514 0009                   NOP
    00000516 6D03                   MOV         R0,R13
    00000518 D311                   MOV.L       L1371+24,R3; _malloc
    0000051A 430B                   JSR         @R3
    0000051C 64E2                   MOV.L       @R14,R4
    0000051E 1E05                   MOV.L       R0,@(20,R14)
    00000520              L1139:                            
    00000520 65E2                   MOV.L       @R14,R5
    00000522 66F3                   MOV         R15,R6
    00000524 54E5                   MOV.L       @(20,R14),R4
    00000526 35A8                   SUB         R10,R5
    00000528 D310                   MOV.L       L1371+36,R3; _Serial_ReadNBytes
    0000052A 430B                   JSR         @R3
    0000052C 34AC                   ADD         R10,R4
    0000052E 62F1                   MOV.W       @R15,R2
    00000530 63E2                   MOV.L       @R14,R3
    00000532 3A2C                   ADD         R2,R10
    00000534 3A32                   CMP/HS      R3,R10
    00000536 8B1B                   BF          L1140
    00000538 65E2                   MOV.L       @R14,R5
    0000053A BE26                   BSR         _calculateChecksum
    0000053C 54E5                   MOV.L       @(20,R14),R4
    0000053E 52E1                   MOV.L       @(4,R14),R2
    00000540 3200                   CMP/EQ      R0,R2
    00000542 8924                   BT          L1135




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 11-Jan-2019 20:05:59  PAGE   14


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000544 A023                   BRA         L1135
    00000546 E801                   MOV         #1,R8
    00000548              L1371:                            
    00000548 01F4                   .DATA.W     H'01F4
    0000054A 00DD                   .DATA.W     H'00DD
    0000054C 03E8                   .DATA.W     H'03E8
    0000054E 0000                   .DATA.W     0
    00000550 <00000000>             .DATA.L     _RTC_GetTicks
    00000554 <00000000>             .DATA.L     _Serial_ReadOneByte
    00000558 <00000000>             .DATA.L     L503
    0000055C <00000000>             .DATA.L     __slow_strcmp1
    00000560 <00000000>             .DATA.L     _malloc
    00000564 <00000000>             .DATA.L     _atol
    00000568 <00000000>             .DATA.L     _memcpy
    0000056C <00000000>             .DATA.L     _Serial_ReadNBytes
    00000570              L1140:                            
    00000570 65C3                   MOV         R12,R5
    00000572 490B                   JSR         @R9
    00000574 64D3                   MOV         R13,R4
    00000576 2008                   TST         R0,R0
    00000578 89D2                   BT          L1139
    0000057A B02E                   BSR         _freeNetData
    0000057C 64E3                   MOV         R14,R4
    0000057E A006                   BRA         L1135
    00000580 6EB3                   MOV         R11,R14
    00000582              L1130:                            
    00000582 D93B                   MOV.L       L1372+4,R9 ; _RTC_Elapsed_ms
    00000584 55F2                   MOV.L       @(8,R15),R5
    00000586 490B                   JSR         @R9
    00000588 64A3                   MOV         R10,R4
    0000058A 2008                   TST         R0,R0
    0000058C 8980                   BT          L1131
    0000058E              L1135:                            
    0000058E 6083                   MOV         R8,R0
    00000590 8801                   CMP/EQ      #1,R0
    00000592 8B02                   BF          L1144
    00000594 B021                   BSR         _freeNetData
    00000596 64E3                   MOV         R14,R4
    00000598 6EB3                   MOV         R11,R14
    0000059A              L1144:                            
    0000059A 60E3                   MOV         R14,R0
    0000059C 7F18                   ADD         #24,R15
    0000059E 4F26                   LDS.L       @R15+,PR
    000005A0 68F6                   MOV.L       @R15+,R8
    000005A2 69F6                   MOV.L       @R15+,R9
    000005A4 6AF6                   MOV.L       @R15+,R10
    000005A6 6BF6                   MOV.L       @R15+,R11
    000005A8 6CF6                   MOV.L       @R15+,R12
    000005AA 6DF6                   MOV.L       @R15+,R13
    000005AC 000B                   RTS
    000005AE 6EF6                   MOV.L       @R15+,R14
    000005B0              _freeData:                       ; function: freeData
                                                           ; frame size=8
    000005B0 2FE6                   MOV.L       R14,@-R15
    000005B2 6E43                   MOV         R4,R14
    000005B4 4F22                   STS.L       PR,@-R15
    000005B6 2EE8                   TST         R14,R14




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 11-Jan-2019 20:05:59  PAGE   15


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000005B8 890C                   BT          L1146
    000005BA 52E2                   MOV.L       @(8,R14),R2
    000005BC 2228                   TST         R2,R2
    000005BE 8904                   BT          L1147
    000005C0 D32C                   MOV.L       L1372+8,R3 ; _free
    000005C2 430B                   JSR         @R3
    000005C4 54E2                   MOV.L       @(8,R14),R4
    000005C6 E200                   MOV         #0,R2
    000005C8 1E22                   MOV.L       R2,@(8,R14)
    000005CA              L1147:                            
    000005CA 64E3                   MOV         R14,R4
    000005CC 4F26                   LDS.L       @R15+,PR
    000005CE D329                   MOV.L       L1372+8,R3 ; _free
    000005D0 432B                   JMP         @R3
    000005D2 6EF6                   MOV.L       @R15+,R14
    000005D4              L1146:                            
    000005D4 4F26                   LDS.L       @R15+,PR
    000005D6 000B                   RTS
    000005D8 6EF6                   MOV.L       @R15+,R14
    000005DA              _freeNetData:                    ; function: freeNetData
                                                           ; frame size=8
    000005DA 2FE6                   MOV.L       R14,@-R15
    000005DC 4F22                   STS.L       PR,@-R15
    000005DE 6E43                   MOV         R4,R14
    000005E0 2EE8                   TST         R14,R14
    000005E2 890C                   BT          L1148
    000005E4 52E5                   MOV.L       @(20,R14),R2
    000005E6 2228                   TST         R2,R2
    000005E8 8904                   BT          L1149
    000005EA D322                   MOV.L       L1372+8,R3 ; _free
    000005EC 430B                   JSR         @R3
    000005EE 54E5                   MOV.L       @(20,R14),R4
    000005F0 E200                   MOV         #0,R2
    000005F2 1E25                   MOV.L       R2,@(20,R14)
    000005F4              L1149:                            
    000005F4 4F26                   LDS.L       @R15+,PR
    000005F6 64E3                   MOV         R14,R4
    000005F8 D31E                   MOV.L       L1372+8,R3 ; _free
    000005FA 432B                   JMP         @R3
    000005FC 6EF6                   MOV.L       @R15+,R14
    000005FE              L1148:                            
    000005FE 4F26                   LDS.L       @R15+,PR
    00000600 000B                   RTS
    00000602 6EF6                   MOV.L       @R15+,R14
    00000604              _freeNetList:                    ; function: freeNetList
                                                           ; frame size=8
    00000604 2FE6                   MOV.L       R14,@-R15
    00000606 6E43                   MOV         R4,R14
    00000608 4F22                   STS.L       PR,@-R15
    0000060A 2EE8                   TST         R14,R14
    0000060C 8910                   BT          L1150
    0000060E BFF9                   BSR         _freeNetList
    00000610 54E3                   MOV.L       @(12,R14),R4
    00000612 E300                   MOV         #0,R3
    00000614 1E33                   MOV.L       R3,@(12,R14)
    00000616 62E2                   MOV.L       @R14,R2
    00000618 2228                   TST         R2,R2




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 11-Jan-2019 20:05:59  PAGE   16


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000061A 8904                   BT          L1151
    0000061C D315                   MOV.L       L1372+8,R3 ; _free
    0000061E 430B                   JSR         @R3
    00000620 64E2                   MOV.L       @R14,R4
    00000622 E200                   MOV         #0,R2
    00000624 2E22                   MOV.L       R2,@R14
    00000626              L1151:                            
    00000626 64E3                   MOV         R14,R4
    00000628 4F26                   LDS.L       @R15+,PR
    0000062A D312                   MOV.L       L1372+8,R3 ; _free
    0000062C 432B                   JMP         @R3
    0000062E 6EF6                   MOV.L       @R15+,R14
    00000630              L1150:                            
    00000630 4F26                   LDS.L       @R15+,PR
    00000632 000B                   RTS
    00000634 6EF6                   MOV.L       @R15+,R14
    00000636              _getAvailableNetworks:           ; function: getAvailableNetworks
                                                           ; frame size=44
    00000636 2FE6                   MOV.L       R14,@-R15
    00000638 2FD6                   MOV.L       R13,@-R15
    0000063A 2FC6                   MOV.L       R12,@-R15
    0000063C 2FB6                   MOV.L       R11,@-R15
    0000063E EB00                   MOV         #0,R11
    00000640 D40D                   MOV.L       L1372+12,R4; L551
    00000642 2FA6                   MOV.L       R10,@-R15
    00000644 2F96                   MOV.L       R9,@-R15
    00000646 2F86                   MOV.L       R8,@-R15
    00000648 4F22                   STS.L       PR,@-R15
    0000064A 68B3                   MOV         R11,R8
    0000064C 7FF4                   ADD         #-12,R15
    0000064E BCEE                   BSR         _sendCommand
    00000650 1FB2                   MOV.L       R11,@(8,R15)
    00000652 BD4B                   BSR         _receiveStatus
    00000654 0009                   NOP
    00000656 6403                   MOV         R0,R4
    00000658 2448                   TST         R4,R4
    0000065A 8B05                   BF          L980
    0000065C 9406                   MOV.W       L1372,R4   ; H'4E20
    0000065E BDB4                   BSR         _receiveDataTimeout
    00000660 E505                   MOV         #5,R5
    00000662 6D03                   MOV         R0,R13
    00000664 2DD8                   TST         R13,R13
    00000666 8B09                   BF          L1154
    00000668              L980:
    00000668 A061                   BRA         L1153
    0000066A E000                   MOV         #0,R0
    0000066C              L1372:                            
    0000066C 4E20                   .DATA.W     H'4E20
    0000066E 0000                   .DATA.W     0
    00000670 <00000000>             .DATA.L     _RTC_Elapsed_ms
    00000674 <00000000>             .DATA.L     _free
    00000678 <00000000>             .DATA.L     L551
    0000067C              L1154:                            
    0000067C A051                   BRA         L1155
    0000067E 6EB3                   MOV         R11,R14
    00000680              L1156:                            
    00000680 D94B                   MOV.L       L1373+2,R9 ; _memchr




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 11-Jan-2019 20:05:59  PAGE   17


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000682 E500                   MOV         #0,R5
    00000684 54D2                   MOV.L       @(8,R13),R4
    00000686 66D2                   MOV.L       @R13,R6
    00000688 36E8                   SUB         R14,R6
    0000068A 490B                   JSR         @R9
    0000068C 34EC                   ADD         R14,R4
    0000068E 2008                   TST         R0,R0
    00000690 894A                   BT          L1158
    00000692 D248                   MOV.L       L1373+6,R2 ; _malloc
    00000694 420B                   JSR         @R2
    00000696 E410                   MOV         #16,R4
    00000698 DA47                   MOV.L       L1373+10,R10; _strlen
    0000069A 6C03                   MOV         R0,R12
    0000069C 2CB2                   MOV.L       R11,@R12
    0000069E 1CB3                   MOV.L       R11,@(12,R12)
    000006A0 54D2                   MOV.L       @(8,R13),R4
    000006A2 4A0B                   JSR         @R10
    000006A4 34EC                   ADD         R14,R4
    000006A6 6403                   MOV         R0,R4
    000006A8 D342                   MOV.L       L1373+6,R3 ; _malloc
    000006AA 7401                   ADD         #1,R4
    000006AC 2F02                   MOV.L       R0,@R15
    000006AE 430B                   JSR         @R3
    000006B0 1F41                   MOV.L       R4,@(4,R15)
    000006B2 2C02                   MOV.L       R0,@R12
    000006B4 66F2                   MOV.L       @R15,R6
    000006B6 55D2                   MOV.L       @(8,R13),R5
    000006B8 D340                   MOV.L       L1373+14,R3; _strncpy
    000006BA 35EC                   ADD         R14,R5
    000006BC 430B                   JSR         @R3
    000006BE 64C2                   MOV.L       @R12,R4
    000006C0 52F1                   MOV.L       @(4,R15),R2
    000006C2 E500                   MOV         #0,R5
    000006C4 54D2                   MOV.L       @(8,R13),R4
    000006C6 3E2C                   ADD         R2,R14
    000006C8 66D2                   MOV.L       @R13,R6
    000006CA 36E8                   SUB         R14,R6
    000006CC 490B                   JSR         @R9
    000006CE 34EC                   ADD         R14,R4
    000006D0 2008                   TST         R0,R0
    000006D2 8911                   BT          L981
    000006D4 54D2                   MOV.L       @(8,R13),R4
    000006D6 D23A                   MOV.L       L1373+18,R2; _atoi
    000006D8 420B                   JSR         @R2
    000006DA 34EC                   ADD         R14,R4
    000006DC 1C01                   MOV.L       R0,@(4,R12)
    000006DE 54D2                   MOV.L       @(8,R13),R4
    000006E0 4A0B                   JSR         @R10
    000006E2 34EC                   ADD         R14,R4
    000006E4 66D2                   MOV.L       @R13,R6
    000006E6 E500                   MOV         #0,R5
    000006E8 54D2                   MOV.L       @(8,R13),R4
    000006EA 7001                   ADD         #1,R0
    000006EC 3E0C                   ADD         R0,R14
    000006EE 36E8                   SUB         R14,R6
    000006F0 490B                   JSR         @R9
    000006F2 34EC                   ADD         R14,R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 11-Jan-2019 20:05:59  PAGE   18


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000006F4 2008                   TST         R0,R0
    000006F6 8B03                   BF          L1160
    000006F8              L981:
    000006F8 BF84                   BSR         _freeNetList
    000006FA 64C3                   MOV         R12,R4
    000006FC A014                   BRA         L1158
    000006FE 0009                   NOP
    00000700              L1160:                            
    00000700 54D2                   MOV.L       @(8,R13),R4
    00000702 D22F                   MOV.L       L1373+18,R2; _atoi
    00000704 420B                   JSR         @R2
    00000706 34EC                   ADD         R14,R4
    00000708 1C02                   MOV.L       R0,@(8,R12)
    0000070A 54D2                   MOV.L       @(8,R13),R4
    0000070C 4A0B                   JSR         @R10
    0000070E 34EC                   ADD         R14,R4
    00000710 7001                   ADD         #1,R0
    00000712 2888                   TST         R8,R8
    00000714 8F02                   BF/S        L1161
    00000716 3E0C                   ADD         R0,R14
    00000718 A002                   BRA         L979
    0000071A 68C3                   MOV         R12,R8
    0000071C              L1161:                            
    0000071C 52F2                   MOV.L       @(8,R15),R2
    0000071E 12C3                   MOV.L       R12,@(12,R2)
    00000720              L979:
    00000720 1FC2                   MOV.L       R12,@(8,R15)
    00000722              L1155:                            
    00000722 63D2                   MOV.L       @R13,R3
    00000724 3E32                   CMP/HS      R3,R14
    00000726 8BAB                   BF          L1156
    00000728              L1158:                            
    00000728 BF42                   BSR         _freeData
    0000072A 64D3                   MOV         R13,R4
    0000072C 6083                   MOV         R8,R0
    0000072E              L1153:                            
    0000072E 7F0C                   ADD         #12,R15
    00000730 4F26                   LDS.L       @R15+,PR
    00000732 68F6                   MOV.L       @R15+,R8
    00000734 69F6                   MOV.L       @R15+,R9
    00000736 6AF6                   MOV.L       @R15+,R10
    00000738 6BF6                   MOV.L       @R15+,R11
    0000073A 6CF6                   MOV.L       @R15+,R12
    0000073C 6DF6                   MOV.L       @R15+,R13
    0000073E 000B                   RTS
    00000740 6EF6                   MOV.L       @R15+,R14
    00000742              _connect:                        ; function: connect
                                                           ; frame size=68
    00000742 2FE6                   MOV.L       R14,@-R15
    00000744 4F22                   STS.L       PR,@-R15
    00000746 7FCC                   ADD         #-52,R15
    00000748 1F41                   MOV.L       R4,@(4,R15)
    0000074A D41E                   MOV.L       L1373+22,R4; L567
    0000074C BC6F                   BSR         _sendCommand
    0000074E 2F52                   MOV.L       R5,@R15
    00000750 52F1                   MOV.L       @(4,R15),R2
    00000752 6EF3                   MOV         R15,R14




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 11-Jan-2019 20:05:59  PAGE   19


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000754 D31C                   MOV.L       L1373+26,R3; L568
    00000756 7E08                   ADD         #8,R14
    00000758 2F26                   MOV.L       R2,@-R15
    0000075A 2F36                   MOV.L       R3,@-R15
    0000075C D21B                   MOV.L       L1373+30,R2; _sprintf
    0000075E 420B                   JSR         @R2
    00000760 64E3                   MOV         R14,R4
    00000762 7F08                   ADD         #8,R15
    00000764 D314                   MOV.L       L1373+10,R3; _strlen
    00000766 430B                   JSR         @R3
    00000768 64E3                   MOV         R14,R4
    0000076A 6503                   MOV         R0,R5
    0000076C D218                   MOV.L       L1373+34,R2; _Serial_BufferedTransmitNBytes
    0000076E 7501                   ADD         #1,R5
    00000770 420B                   JSR         @R2
    00000772 64E3                   MOV         R14,R4
    00000774 D310                   MOV.L       L1373+10,R3; _strlen
    00000776 430B                   JSR         @R3
    00000778 64F2                   MOV.L       @R15,R4
    0000077A 6503                   MOV         R0,R5
    0000077C D314                   MOV.L       L1373+34,R3; _Serial_BufferedTransmitNBytes
    0000077E 7501                   ADD         #1,R5
    00000780 430B                   JSR         @R3
    00000782 64F2                   MOV.L       @R15,R4
    00000784 BCB2                   BSR         _receiveStatus
    00000786 0009                   NOP
    00000788 6403                   MOV         R0,R4
    0000078A 2448                   TST         R4,R4
    0000078C 0029                   MOVT        R0
    0000078E 7F34                   ADD         #52,R15
    00000790 4F26                   LDS.L       @R15+,PR
    00000792 000B                   RTS
    00000794 6EF6                   MOV.L       @R15+,R14
    00000796              _disconnect:                     ; function: disconnect
                                                           ; frame size=4
    00000796 4F22                   STS.L       PR,@-R15
    00000798 D40E                   MOV.L       L1373+38,R4; L572
    0000079A BC48                   BSR         _sendCommand
    0000079C 0009                   NOP
    0000079E BCA5                   BSR         _receiveStatus
    000007A0 0009                   NOP
    000007A2 6403                   MOV         R0,R4
    000007A4 4F26                   LDS.L       @R15+,PR
    000007A6 2448                   TST         R4,R4
    000007A8 0029                   MOVT        R0
    000007AA 000B                   RTS
    000007AC 0009                   NOP
    000007AE              L1373:                            
    000007AE 0000                   .DATA.W     0
    000007B0 <00000000>             .DATA.L     _memchr
    000007B4 <00000000>             .DATA.L     _malloc
    000007B8 <00000000>             .DATA.L     _strlen
    000007BC <00000000>             .DATA.L     _strncpy
    000007C0 <00000000>             .DATA.L     _atoi
    000007C4 <00000000>             .DATA.L     L567
    000007C8 <00000000>             .DATA.L     L568
    000007CC <00000000>             .DATA.L     _sprintf




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 11-Jan-2019 20:05:59  PAGE   20


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000007D0 <00000000>             .DATA.L     _Serial_BufferedTransmitNBytes
    000007D4 <00000000>             .DATA.L     L572
    000007D8              _getNetworkInfo:                 ; function: getNetworkInfo
                                                           ; frame size=40
                                                           ; used runtime library name:
                                                           ; __quick_odd_mvn
    000007D8 2FE6                   MOV.L       R14,@-R15
    000007DA 2FD6                   MOV.L       R13,@-R15
    000007DC 2FC6                   MOV.L       R12,@-R15
    000007DE EC00                   MOV         #0,R12
    000007E0 D442                   MOV.L       L1374+2,R4 ; L578
    000007E2 2FB6                   MOV.L       R11,@-R15
    000007E4 2FA6                   MOV.L       R10,@-R15
    000007E6 4F22                   STS.L       PR,@-R15
    000007E8 7FF0                   ADD         #-16,R15
    000007EA 6EF3                   MOV         R15,R14
    000007EC 7E04                   ADD         #4,R14
    000007EE 2EC2                   MOV.L       R12,@R14
    000007F0 1EC1                   MOV.L       R12,@(4,R14)
    000007F2 BC1C                   BSR         _sendCommand
    000007F4 1EC2                   MOV.L       R12,@(8,R14)
    000007F6 BC79                   BSR         _receiveStatus
    000007F8 0009                   NOP
    000007FA 6403                   MOV         R0,R4
    000007FC 2448                   TST         R4,R4
    000007FE 8B0F                   BF          L984
    00000800 9473                   MOV.W       L1374,R4   ; H'01F4
    00000802 BCE2                   BSR         _receiveDataTimeout
    00000804 E501                   MOV         #1,R5
    00000806 6D03                   MOV         R0,R13
    00000808 2DD8                   TST         R13,R13
    0000080A 8909                   BT          L984
    0000080C 66D2                   MOV.L       @R13,R6
    0000080E E500                   MOV         #0,R5
    00000810 D337                   MOV.L       L1374+6,R3 ; _memchr
    00000812 6BC3                   MOV         R12,R11
    00000814 430B                   JSR         @R3
    00000816 54D2                   MOV.L       @(8,R13),R4
    00000818 2008                   TST         R0,R0
    0000081A 8B08                   BF          L1170
    0000081C A02B                   BRA         L991
    0000081E 0009                   NOP
    00000820              L984:
    00000820 51FA                   MOV.L       @(40,R15),R1
    00000822 62E3                   MOV         R14,R2
    00000824 D333                   MOV.L       L1374+10,R3; __quick_odd_mvn
    00000826 430B                   JSR         @R3
    00000828 E00C                   MOV         #12,R0
    0000082A A02B                   BRA         L1168
    0000082C 0009                   NOP
    0000082E              L1170:                            
    0000082E D232                   MOV.L       L1374+14,R2; _strlen
    00000830 420B                   JSR         @R2
    00000832 54D2                   MOV.L       @(8,R13),R4
    00000834 D331                   MOV.L       L1374+18,R3; _malloc
    00000836 6A03                   MOV         R0,R10
    00000838 6403                   MOV         R0,R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 11-Jan-2019 20:05:59  PAGE   21


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000083A 7401                   ADD         #1,R4
    0000083C 430B                   JSR         @R3
    0000083E 2F42                   MOV.L       R4,@R15
    00000840 2E02                   MOV.L       R0,@R14
    00000842 66A3                   MOV         R10,R6
    00000844 D22E                   MOV.L       L1374+22,R2; _strncpy
    00000846 55D2                   MOV.L       @(8,R13),R5
    00000848 420B                   JSR         @R2
    0000084A 6403                   MOV         R0,R4
    0000084C 63F2                   MOV.L       @R15,R3
    0000084E E500                   MOV         #0,R5
    00000850 54D2                   MOV.L       @(8,R13),R4
    00000852 3B3C                   ADD         R3,R11
    00000854 66D2                   MOV.L       @R13,R6
    00000856 36B8                   SUB         R11,R6
    00000858 D325                   MOV.L       L1374+6,R3 ; _memchr
    0000085A 430B                   JSR         @R3
    0000085C 34BC                   ADD         R11,R4
    0000085E 2008                   TST         R0,R0
    00000860 8B04                   BF          L1171
    00000862 D328                   MOV.L       L1374+26,R3; _free
    00000864 430B                   JSR         @R3
    00000866 64E2                   MOV.L       @R14,R4
    00000868 A005                   BRA         L991
    0000086A 2EC2                   MOV.L       R12,@R14
    0000086C              L1171:                            
    0000086C 54D2                   MOV.L       @(8,R13),R4
    0000086E D326                   MOV.L       L1374+30,R3; _atoi
    00000870 430B                   JSR         @R3
    00000872 34BC                   ADD         R11,R4
    00000874 1E01                   MOV.L       R0,@(4,R14)
    00000876              L991:
    00000876 BE9B                   BSR         _freeData
    00000878 64D3                   MOV         R13,R4
    0000087A 62E3                   MOV         R14,R2
    0000087C D31D                   MOV.L       L1374+10,R3; __quick_odd_mvn
    0000087E 51FA                   MOV.L       @(40,R15),R1
    00000880 430B                   JSR         @R3
    00000882 E00C                   MOV         #12,R0
    00000884              L1168:                            
    00000884 7F10                   ADD         #16,R15
    00000886 4F26                   LDS.L       @R15+,PR
    00000888 6AF6                   MOV.L       @R15+,R10
    0000088A 6BF6                   MOV.L       @R15+,R11
    0000088C 6CF6                   MOV.L       @R15+,R12
    0000088E 6DF6                   MOV.L       @R15+,R13
    00000890 000B                   RTS
    00000892 6EF6                   MOV.L       @R15+,R14
    00000894              _startAP:                        ; function: startAP
                                                           ; frame size=12
    00000894 4F22                   STS.L       PR,@-R15
    00000896 7FF8                   ADD         #-8,R15
    00000898 1F41                   MOV.L       R4,@(4,R15)
    0000089A D41C                   MOV.L       L1374+34,R4; L590
    0000089C BBC7                   BSR         _sendCommand
    0000089E 2F52                   MOV.L       R5,@R15
    000008A0 D315                   MOV.L       L1374+14,R3; _strlen




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 11-Jan-2019 20:05:59  PAGE   22


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000008A2 430B                   JSR         @R3
    000008A4 54F1                   MOV.L       @(4,R15),R4
    000008A6 6503                   MOV         R0,R5
    000008A8 D319                   MOV.L       L1374+38,R3; _Serial_BufferedTransmitNBytes
    000008AA 7501                   ADD         #1,R5
    000008AC 430B                   JSR         @R3
    000008AE 54F1                   MOV.L       @(4,R15),R4
    000008B0 D311                   MOV.L       L1374+14,R3; _strlen
    000008B2 430B                   JSR         @R3
    000008B4 64F2                   MOV.L       @R15,R4
    000008B6 6503                   MOV         R0,R5
    000008B8 D315                   MOV.L       L1374+38,R3; _Serial_BufferedTransmitNBytes
    000008BA 7501                   ADD         #1,R5
    000008BC 430B                   JSR         @R3
    000008BE 64F2                   MOV.L       @R15,R4
    000008C0 BC14                   BSR         _receiveStatus
    000008C2 0009                   NOP
    000008C4 6403                   MOV         R0,R4
    000008C6 2448                   TST         R4,R4
    000008C8 0029                   MOVT        R0
    000008CA 7F08                   ADD         #8,R15
    000008CC 4F26                   LDS.L       @R15+,PR
    000008CE 000B                   RTS
    000008D0 0009                   NOP
    000008D2              _stopAP:                         ; function: stopAP
                                                           ; frame size=4
    000008D2 4F22                   STS.L       PR,@-R15
    000008D4 D40F                   MOV.L       L1374+42,R4; L594
    000008D6 BBAA                   BSR         _sendCommand
    000008D8 0009                   NOP
    000008DA BC07                   BSR         _receiveStatus
    000008DC 0009                   NOP
    000008DE 6403                   MOV         R0,R4
    000008E0 4F26                   LDS.L       @R15+,PR
    000008E2 2448                   TST         R4,R4
    000008E4 0029                   MOVT        R0
    000008E6 000B                   RTS
    000008E8 0009                   NOP
    000008EA              L1374:                            
    000008EA 01F4                   .DATA.W     H'01F4
    000008EC <00000000>             .DATA.L     L578
    000008F0 <00000000>             .DATA.L     _memchr
    000008F4 <00000000>             .DATA.L     __quick_odd_mvn
    000008F8 <00000000>             .DATA.L     _strlen
    000008FC <00000000>             .DATA.L     _malloc
    00000900 <00000000>             .DATA.L     _strncpy
    00000904 <00000000>             .DATA.L     _free
    00000908 <00000000>             .DATA.L     _atoi
    0000090C <00000000>             .DATA.L     L590
    00000910 <00000000>             .DATA.L     _Serial_BufferedTransmitNBytes
    00000914 <00000000>             .DATA.L     L594
          WiFi.c    14    #include "..\WiFi_Lib\status.h"
          WiFi.c    15    #include "..\WiFi_Lib\status.c"
    00000918              _convertStatus:                  ; function: convertStatus
                                                           ; frame size=16
    00000918 2FE6                   MOV.L       R14,@-R15
    0000091A EEFF                   MOV         #-1,R14




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 11-Jan-2019 20:05:59  PAGE   23


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000091C D555                   MOV.L       L1375+4,R5 ; L482
    0000091E 2FD6                   MOV.L       R13,@-R15
    00000920 2FC6                   MOV.L       R12,@-R15
    00000922 6D43                   MOV         R4,R13
    00000924 4F22                   STS.L       PR,@-R15
    00000926 DC52                   MOV.L       L1375,R12  ; _memcmp
    00000928 4C0B                   JSR         @R12
    0000092A E602                   MOV         #2,R6
    0000092C 2008                   TST         R0,R0
    0000092E 8B01                   BF          L1176
    00000930 A01F                   BRA         L1177
    00000932 EE00                   MOV         #0,R14
    00000934              L1176:                            
    00000934 D550                   MOV.L       L1375+8,R5 ; L600
    00000936 E602                   MOV         #2,R6
    00000938 4C0B                   JSR         @R12
    0000093A 64D3                   MOV         R13,R4
    0000093C 2008                   TST         R0,R0
    0000093E 8B01                   BF          L1178
    00000940 A017                   BRA         L1177
    00000942 EE01                   MOV         #1,R14
    00000944              L1178:                            
    00000944 D54D                   MOV.L       L1375+12,R5; L602
    00000946 E602                   MOV         #2,R6
    00000948 4C0B                   JSR         @R12
    0000094A 64D3                   MOV         R13,R4
    0000094C 2008                   TST         R0,R0
    0000094E 8B01                   BF          L1180
    00000950 A00F                   BRA         L1177
    00000952 EE02                   MOV         #2,R14
    00000954              L1180:                            
    00000954 D54A                   MOV.L       L1375+16,R5; L604
    00000956 E602                   MOV         #2,R6
    00000958 4C0B                   JSR         @R12
    0000095A 64D3                   MOV         R13,R4
    0000095C 2008                   TST         R0,R0
    0000095E 8B01                   BF          L1182
    00000960 A007                   BRA         L1177
    00000962 EE03                   MOV         #3,R14
    00000964              L1182:                            
    00000964 D547                   MOV.L       L1375+20,R5; L480
    00000966 E602                   MOV         #2,R6
    00000968 4C0B                   JSR         @R12
    0000096A 64D3                   MOV         R13,R4
    0000096C 2008                   TST         R0,R0
    0000096E 8B00                   BF          L1177
    00000970 EE04                   MOV         #4,R14
    00000972              L1177:                            
    00000972 60E3                   MOV         R14,R0
    00000974 4F26                   LDS.L       @R15+,PR
    00000976 6CF6                   MOV.L       @R15+,R12
    00000978 6DF6                   MOV.L       @R15+,R13
    0000097A 000B                   RTS
    0000097C 6EF6                   MOV.L       @R15+,R14
          WiFi.c    16    #include "..\WiFi_Lib\netUI.h"
          WiFi.c    17    #include "..\WiFi_Lib\netUI.c"
    0000097E              _initNetworkSelectionUI:         ; function: initNetworkSelectionUI




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 11-Jan-2019 20:05:59  PAGE   24


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

                                                           ; frame size=40
                                                           ; used runtime library name:
                                                           ; __quick_evn_mvn
    0000097E 2FE6                   MOV.L       R14,@-R15
    00000980 4F22                   STS.L       PR,@-R15
    00000982 7FE0                   ADD         #-32,R15
    00000984 51FB                   MOV.L       @(44,R15),R1
    00000986 6EF3                   MOV         R15,R14
    00000988 2E42                   MOV.L       R4,@R14
    0000098A E400                   MOV         #0,R4
    0000098C 1E51                   MOV.L       R5,@(4,R14)
    0000098E 1E62                   MOV.L       R6,@(8,R14)
    00000990 1E73                   MOV.L       R7,@(12,R14)
    00000992 1E44                   MOV.L       R4,@(16,R14)
    00000994 1E45                   MOV.L       R4,@(20,R14)
    00000996 53FB                   MOV.L       @(44,R15),R3
    00000998 1E36                   MOV.L       R3,@(24,R14)
    0000099A A004                   BRA         L1186
    0000099C 1E47                   MOV.L       R4,@(28,R14)
    0000099E              L1187:                            
    0000099E 52E7                   MOV.L       @(28,R14),R2
    000009A0 7201                   ADD         #1,R2
    000009A2 1E27                   MOV.L       R2,@(28,R14)
    000009A4 5113                   MOV.L       @(12,R1),R1
    000009A6              L1186:                            
    000009A6 2118                   TST         R1,R1
    000009A8 8BF9                   BF          L1187
    000009AA 62E3                   MOV         R14,R2
    000009AC D336                   MOV.L       L1375+24,R3; __quick_evn_mvn
    000009AE 51FA                   MOV.L       @(40,R15),R1
    000009B0 430B                   JSR         @R3
    000009B2 E020                   MOV         #32,R0
    000009B4 7F20                   ADD         #32,R15
    000009B6 4F26                   LDS.L       @R15+,PR
    000009B8 000B                   RTS
    000009BA 6EF6                   MOV.L       @R15+,R14
    000009BC              _drawNetworkSelectionUI:         ; function: drawNetworkSelectionUI
                                                           ; frame size=84
                                                           ; used runtime library name:
                                                           ; __slow_mvn, __adds, __divs, __stoi, __itos
    000009BC 2FE6                   MOV.L       R14,@-R15
    000009BE 6E43                   MOV         R4,R14
    000009C0 D232                   MOV.L       L1375+28,R2; L628
    000009C2 2FD6                   MOV.L       R13,@-R15
    000009C4 2FC6                   MOV.L       R12,@-R15
    000009C6 2FB6                   MOV.L       R11,@-R15
    000009C8 2FA6                   MOV.L       R10,@-R15
    000009CA 2F96                   MOV.L       R9,@-R15
    000009CC 2F86                   MOV.L       R8,@-R15
    000009CE 4F22                   STS.L       PR,@-R15
    000009D0 D32F                   MOV.L       L1375+32,R3; __slow_mvn
    000009D2 7FCC                   ADD         #-52,R15
    000009D4 5DE6                   MOV.L       @(24,R14),R13
    000009D6 61F3                   MOV         R15,R1
    000009D8 7130                   ADD         #48,R1
    000009DA 430B                   JSR         @R3
    000009DC E003                   MOV         #3,R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 11-Jan-2019 20:05:59  PAGE   25


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000009DE 61F3                   MOV         R15,R1
    000009E0 D22C                   MOV.L       L1375+36,R2; L630
    000009E2 712C                   ADD         #44,R1
    000009E4 D32A                   MOV.L       L1375+32,R3; __slow_mvn
    000009E6 430B                   JSR         @R3
    000009E8 E003                   MOV         #3,R0
    000009EA 61F3                   MOV         R15,R1
    000009EC D22A                   MOV.L       L1375+40,R2; L632
    000009EE 7128                   ADD         #40,R1
    000009F0 D327                   MOV.L       L1375+32,R3; __slow_mvn
    000009F2 430B                   JSR         @R3
    000009F4 E003                   MOV         #3,R0
    000009F6 51E4                   MOV.L       @(16,R14),R1
    000009F8 315C                   ADD         R5,R1
    000009FA 6313                   MOV         R1,R3
    000009FC 1E14                   MOV.L       R1,@(16,R14)
    000009FE 4311                   CMP/PZ      R3
    00000A00 8D02                   BT/S        L1189
    00000A02 EA00                   MOV         #0,R10
    00000A04 A007                   BRA         L1190
    00000A06 1EA4                   MOV.L       R10,@(16,R14)
    00000A08              L1189:                            
    00000A08 51E7                   MOV.L       @(28,R14),R1
    00000A0A 53E4                   MOV.L       @(16,R14),R3
    00000A0C 3313                   CMP/GE      R1,R3
    00000A0E 8B02                   BF          L1190
    00000A10 53E7                   MOV.L       @(28,R14),R3
    00000A12 73FF                   ADD         #-1,R3
    00000A14 1E34                   MOV.L       R3,@(16,R14)
    00000A16              L1190:                            
    00000A16 53E3                   MOV.L       @(12,R14),R3
    00000A18 52E5                   MOV.L       @(20,R14),R2
    00000A1A 323C                   ADD         R3,R2
    00000A1C 51E4                   MOV.L       @(16,R14),R1
    00000A1E 3123                   CMP/GE      R2,R1
    00000A20 8B05                   BF          L1192
    00000A22 53E3                   MOV.L       @(12,R14),R3
    00000A24 52E4                   MOV.L       @(16,R14),R2
    00000A26 3238                   SUB         R3,R2
    00000A28 7201                   ADD         #1,R2
    00000A2A A006                   BRA         L1193
    00000A2C 1E25                   MOV.L       R2,@(20,R14)
    00000A2E              L1192:                            
    00000A2E 51E5                   MOV.L       @(20,R14),R1
    00000A30 53E4                   MOV.L       @(16,R14),R3
    00000A32 3313                   CMP/GE      R1,R3
    00000A34 8901                   BT          L1193
    00000A36 50E4                   MOV.L       @(16,R14),R0
    00000A38 1E05                   MOV.L       R0,@(20,R14)
    00000A3A              L1193:                            
    00000A3A 53E3                   MOV.L       @(12,R14),R3
    00000A3C 52E7                   MOV.L       @(28,R14),R2
    00000A3E 3238                   SUB         R3,R2
    00000A40 51E5                   MOV.L       @(20,R14),R1
    00000A42 3127                   CMP/GT      R2,R1
    00000A44 8B03                   BF          L1195
    00000A46 53E3                   MOV.L       @(12,R14),R3




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 11-Jan-2019 20:05:59  PAGE   26


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000A48 52E7                   MOV.L       @(28,R14),R2
    00000A4A 3238                   SUB         R3,R2
    00000A4C 1E25                   MOV.L       R2,@(20,R14)
    00000A4E              L1195:                            
    00000A4E 53E5                   MOV.L       @(20,R14),R3
    00000A50 4311                   CMP/PZ      R3
    00000A52 8D01                   BT/S        L1196
    00000A54 64A3                   MOV         R10,R4
    00000A56 1EA5                   MOV.L       R10,@(20,R14)
    00000A58              L1196:                            
    00000A58 A002                   BRA         L1197
    00000A5A 0009                   NOP
    00000A5C              L1198:                            
    00000A5C 5DD3                   MOV.L       @(12,R13),R13
    00000A5E 7401                   ADD         #1,R4
    00000A60              L1197:                            
    00000A60 52E5                   MOV.L       @(20,R14),R2
    00000A62 3423                   CMP/GE      R2,R4
    00000A64 8BFA                   BF          L1198
    00000A66 69F3                   MOV         R15,R9
    00000A68 D80C                   MOV.L       L1375+44,R8; _Bdisp_AreaClr_VRAM
    00000A6A 7910                   ADD         #16,R9
    00000A6C A08F                   BRA         L1199
    00000A6E 6CA3                   MOV         R10,R12
    00000A70              L1375:                            
    00000A70 <00000000>             .DATA.L     _memcmp
    00000A74 <00000000>             .DATA.L     L482
    00000A78 <00000000>             .DATA.L     L600
    00000A7C <00000000>             .DATA.L     L602
    00000A80 <00000000>             .DATA.L     L604
    00000A84 <00000000>             .DATA.L     L480
    00000A88 <00000000>             .DATA.L     __quick_evn_mvn
    00000A8C <00000000>             .DATA.L     L628
    00000A90 <00000000>             .DATA.L     __slow_mvn
    00000A94 <00000000>             .DATA.L     L630
    00000A98 <00000000>             .DATA.L     L632
    00000A9C <00000000>             .DATA.L     _Bdisp_AreaClr_VRAM
    00000AA0              L1200:                            
    00000AA0 2DD8                   TST         R13,R13
    00000AA2 8973                   BT          L1201
    00000AA4 D2B1                   MOV.L       L1376+2,R2 ; _strlen
    00000AA6 420B                   JSR         @R2
    00000AA8 64D2                   MOV.L       @R13,R4
    00000AAA 6B03                   MOV         R0,R11
    00000AAC 53E2                   MOV.L       @(8,R14),R3
    00000AAE 73FF                   ADD         #-1,R3
    00000AB0 3B37                   CMP/GT      R3,R11
    00000AB2 8B01                   BF          L1202
    00000AB4 5BE2                   MOV.L       @(8,R14),R11
    00000AB6 7BFF                   ADD         #-1,R11
    00000AB8              L1202:                            
    00000AB8 65D2                   MOV.L       @R13,R5
    00000ABA 66B3                   MOV         R11,R6
    00000ABC D3AC                   MOV.L       L1376+6,R3 ; _memcpy
    00000ABE 430B                   JSR         @R3
    00000AC0 6493                   MOV         R9,R4
    00000AC2 60B3                   MOV         R11,R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 11-Jan-2019 20:05:59  PAGE   27


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000AC4 D2AB                   MOV.L       L1376+10,R2; _locate
    00000AC6 09A4                   MOV.B       R10,@(R0,R9)
    00000AC8 55E1                   MOV.L       @(4,R14),R5
    00000ACA 35CC                   ADD         R12,R5
    00000ACC 64E2                   MOV.L       @R14,R4
    00000ACE 420B                   JSR         @R2
    00000AD0 7401                   ADD         #1,R4
    00000AD2 D3A9                   MOV.L       L1376+14,R3; _Print
    00000AD4 430B                   JSR         @R3
    00000AD6 6493                   MOV         R9,R4
    00000AD8 53E2                   MOV.L       @(8,R14),R3
    00000ADA 62E2                   MOV.L       @R14,R2
    00000ADC 323C                   ADD         R3,R2
    00000ADE 72FF                   ADD         #-1,R2
    00000AE0 6323                   MOV         R2,R3
    00000AE2 4200                   SHLL        R2
    00000AE4 4308                   SHLL2       R3
    00000AE6 323C                   ADD         R3,R2
    00000AE8 72EC                   ADD         #-20,R2
    00000AEA 2F22                   MOV.L       R2,@R15
    00000AEC 53E1                   MOV.L       @(4,R14),R3
    00000AEE 33CC                   ADD         R12,R3
    00000AF0 4308                   SHLL2       R3
    00000AF2 4300                   SHLL        R3
    00000AF4 73F8                   ADD         #-8,R3
    00000AF6 1F31                   MOV.L       R3,@(4,R15)
    00000AF8 62F2                   MOV.L       @R15,R2
    00000AFA 7214                   ADD         #20,R2
    00000AFC 1F22                   MOV.L       R2,@(8,R15)
    00000AFE 53F1                   MOV.L       @(4,R15),R3
    00000B00 7306                   ADD         #6,R3
    00000B02 1F33                   MOV.L       R3,@(12,R15)
    00000B04 480B                   JSR         @R8
    00000B06 64F3                   MOV         R15,R4
    00000B08 D39C                   MOV.L       L1376+18,R3; __itos
    00000B0A 430B                   JSR         @R3
    00000B0C 50D1                   MOV.L       @(4,R13),R0
    00000B0E D19C                   MOV.L       L1376+22,R1; H'42C80000
    00000B10 D29C                   MOV.L       L1376+26,R2; __adds
    00000B12 420B                   JSR         @R2
    00000B14 0009                   NOP
    00000B16 6103                   MOV         R0,R1
    00000B18 D39C                   MOV.L       L1376+34,R3; __divs
    00000B1A D09B                   MOV.L       L1376+30,R0; H'41200000
    00000B1C 430B                   JSR         @R3
    00000B1E 0009                   NOP
    00000B20 D29B                   MOV.L       L1376+38,R2; __stoi
    00000B22 420B                   JSR         @R2
    00000B24 0009                   NOP
    00000B26 6603                   MOV         R0,R6
    00000B28 55E1                   MOV.L       @(4,R14),R5
    00000B2A 35CC                   ADD         R12,R5
    00000B2C 53E2                   MOV.L       @(8,R14),R3
    00000B2E 4508                   SHLL2       R5
    00000B30 64E2                   MOV.L       @R14,R4
    00000B32 4500                   SHLL        R5
    00000B34 75FA                   ADD         #-6,R5




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 11-Jan-2019 20:05:59  PAGE   28


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000B36 343C                   ADD         R3,R4
    00000B38 74FF                   ADD         #-1,R4
    00000B3A 6343                   MOV         R4,R3
    00000B3C 4400                   SHLL        R4
    00000B3E 4308                   SHLL2       R3
    00000B40 343C                   ADD         R3,R4
    00000B42 B0B1                   BSR         _drawStrengthIndicator
    00000B44 74ED                   ADD         #-19,R4
    00000B46 50D2                   MOV.L       @(8,R13),R0
    00000B48 8801                   CMP/EQ      #1,R0
    00000B4A 8B1E                   BF          L1203
    00000B4C 53E2                   MOV.L       @(8,R14),R3
    00000B4E 62E2                   MOV.L       @R14,R2
    00000B50 323C                   ADD         R3,R2
    00000B52 72FF                   ADD         #-1,R2
    00000B54 6323                   MOV         R2,R3
    00000B56 4200                   SHLL        R2
    00000B58 4308                   SHLL2       R3
    00000B5A 323C                   ADD         R3,R2
    00000B5C 72E6                   ADD         #-26,R2
    00000B5E 6323                   MOV         R2,R3
    00000B60 2F22                   MOV.L       R2,@R15
    00000B62 7306                   ADD         #6,R3
    00000B64 1F32                   MOV.L       R3,@(8,R15)
    00000B66 480B                   JSR         @R8
    00000B68 64F3                   MOV         R15,R4
    00000B6A E601                   MOV         #1,R6
    00000B6C 55E1                   MOV.L       @(4,R14),R5
    00000B6E 35CC                   ADD         R12,R5
    00000B70 53E2                   MOV.L       @(8,R14),R3
    00000B72 4508                   SHLL2       R5
    00000B74 64E2                   MOV.L       @R14,R4
    00000B76 4500                   SHLL        R5
    00000B78 75F9                   ADD         #-7,R5
    00000B7A 343C                   ADD         R3,R4
    00000B7C 74FF                   ADD         #-1,R4
    00000B7E 6343                   MOV         R4,R3
    00000B80 4400                   SHLL        R4
    00000B82 4308                   SHLL2       R3
    00000B84 343C                   ADD         R3,R4
    00000B86 B03F                   BSR         _drawLock
    00000B88 74E7                   ADD         #-25,R4
    00000B8A              L1203:                            
    00000B8A 5DD3                   MOV.L       @(12,R13),R13
    00000B8C              L1201:                            
    00000B8C 7C01                   ADD         #1,R12
    00000B8E              L1199:                            
    00000B8E 53E3                   MOV.L       @(12,R14),R3
    00000B90 3C33                   CMP/GE      R3,R12
    00000B92 8B85                   BF          L1200
    00000B94 53E4                   MOV.L       @(16,R14),R3
    00000B96 55E1                   MOV.L       @(4,R14),R5
    00000B98 52E5                   MOV.L       @(20,R14),R2
    00000B9A 353C                   ADD         R3,R5
    00000B9C D375                   MOV.L       L1376+10,R3; _locate
    00000B9E 3528                   SUB         R2,R5
    00000BA0 430B                   JSR         @R3




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 11-Jan-2019 20:05:59  PAGE   29


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000BA2 64E2                   MOV.L       @R14,R4
    00000BA4 D274                   MOV.L       L1376+14,R2; _Print
    00000BA6 64F3                   MOV         R15,R4
    00000BA8 420B                   JSR         @R2
    00000BAA 7430                   ADD         #48,R4
    00000BAC 52E5                   MOV.L       @(20,R14),R2
    00000BAE E301                   MOV         #1,R3
    00000BB0 3233                   CMP/GE      R3,R2
    00000BB2 8B0A                   BF          L1204
    00000BB4 55E1                   MOV.L       @(4,R14),R5
    00000BB6 52E2                   MOV.L       @(8,R14),R2
    00000BB8 64E2                   MOV.L       @R14,R4
    00000BBA 342C                   ADD         R2,R4
    00000BBC D26D                   MOV.L       L1376+10,R2; _locate
    00000BBE 420B                   JSR         @R2
    00000BC0 74FF                   ADD         #-1,R4
    00000BC2 64F3                   MOV         R15,R4
    00000BC4 D36C                   MOV.L       L1376+14,R3; _Print
    00000BC6 430B                   JSR         @R3
    00000BC8 742C                   ADD         #44,R4
    00000BCA              L1204:                            
    00000BCA 53E3                   MOV.L       @(12,R14),R3
    00000BCC 52E5                   MOV.L       @(20,R14),R2
    00000BCE 323C                   ADD         R3,R2
    00000BD0 51E7                   MOV.L       @(28,R14),R1
    00000BD2 3213                   CMP/GE      R1,R2
    00000BD4 890D                   BT          L1205
    00000BD6 53E3                   MOV.L       @(12,R14),R3
    00000BD8 55E1                   MOV.L       @(4,R14),R5
    00000BDA 353C                   ADD         R3,R5
    00000BDC 53E2                   MOV.L       @(8,R14),R3
    00000BDE 75FF                   ADD         #-1,R5
    00000BE0 64E2                   MOV.L       @R14,R4
    00000BE2 343C                   ADD         R3,R4
    00000BE4 D363                   MOV.L       L1376+10,R3; _locate
    00000BE6 430B                   JSR         @R3
    00000BE8 74FF                   ADD         #-1,R4
    00000BEA 64F3                   MOV         R15,R4
    00000BEC D262                   MOV.L       L1376+14,R2; _Print
    00000BEE 420B                   JSR         @R2
    00000BF0 7428                   ADD         #40,R4
    00000BF2              L1205:                            
    00000BF2 50E4                   MOV.L       @(16,R14),R0
    00000BF4 7F34                   ADD         #52,R15
    00000BF6 4F26                   LDS.L       @R15+,PR
    00000BF8 68F6                   MOV.L       @R15+,R8
    00000BFA 69F6                   MOV.L       @R15+,R9
    00000BFC 6AF6                   MOV.L       @R15+,R10
    00000BFE 6BF6                   MOV.L       @R15+,R11
    00000C00 6CF6                   MOV.L       @R15+,R12
    00000C02 6DF6                   MOV.L       @R15+,R13
    00000C04 000B                   RTS
    00000C06 6EF6                   MOV.L       @R15+,R14
    00000C08              _drawLock:                       ; function: drawLock
                                                           ; frame size=56
    00000C08 2FE6                   MOV.L       R14,@-R15
    00000C0A 2668                   TST         R6,R6




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 11-Jan-2019 20:05:59  PAGE   30


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000C0C 2FD6                   MOV.L       R13,@-R15
    00000C0E 6E53                   MOV         R5,R14
    00000C10 2FC6                   MOV.L       R12,@-R15
    00000C12 6D43                   MOV         R4,R13
    00000C14 2FB6                   MOV.L       R11,@-R15
    00000C16 6C43                   MOV         R4,R12
    00000C18 2FA6                   MOV.L       R10,@-R15
    00000C1A 7C01                   ADD         #1,R12
    00000C1C DB5D                   MOV.L       L1376+42,R11; _Bdisp_SetPoint_VRAM
    00000C1E 6A53                   MOV         R5,R10
    00000C20 2F96                   MOV.L       R9,@-R15
    00000C22 7A01                   ADD         #1,R10
    00000C24 4F22                   STS.L       PR,@-R15
    00000C26 6943                   MOV         R4,R9
    00000C28 7FE4                   ADD         #-28,R15
    00000C2A 8D0E                   BT/S        L1207
    00000C2C 7902                   ADD         #2,R9
    00000C2E 67E3                   MOV         R14,R7
    00000C30 D359                   MOV.L       L1376+46,R3; _Bdisp_DrawLineVRAM
    00000C32 66D3                   MOV         R13,R6
    00000C34 7603                   ADD         #3,R6
    00000C36 6573                   MOV         R7,R5
    00000C38 2F62                   MOV.L       R6,@R15
    00000C3A 430B                   JSR         @R3
    00000C3C 64C3                   MOV         R12,R4
    00000C3E E601                   MOV         #1,R6
    00000C40 65A3                   MOV         R10,R5
    00000C42 4B0B                   JSR         @R11
    00000C44 64F2                   MOV.L       @R15,R4
    00000C46 A006                   BRA         L1208
    00000C48 0009                   NOP
    00000C4A              L1207:                            
    00000C4A 67E3                   MOV         R14,R7
    00000C4C D252                   MOV.L       L1376+46,R2; _Bdisp_DrawLineVRAM
    00000C4E 6693                   MOV         R9,R6
    00000C50 65E3                   MOV         R14,R5
    00000C52 420B                   JSR         @R2
    00000C54 64C3                   MOV         R12,R4
    00000C56              L1208:                            
    00000C56 E601                   MOV         #1,R6
    00000C58 65A3                   MOV         R10,R5
    00000C5A 4B0B                   JSR         @R11
    00000C5C 64C3                   MOV         R12,R4
    00000C5E 63E3                   MOV         R14,R3
    00000C60 1FD3                   MOV.L       R13,@(12,R15)
    00000C62 62D3                   MOV         R13,R2
    00000C64 7302                   ADD         #2,R3
    00000C66 7204                   ADD         #4,R2
    00000C68 1F32                   MOV.L       R3,@(8,R15)
    00000C6A 64F3                   MOV         R15,R4
    00000C6C 1F34                   MOV.L       R3,@(16,R15)
    00000C6E 63E3                   MOV         R14,R3
    00000C70 2F22                   MOV.L       R2,@R15
    00000C72 7305                   ADD         #5,R3
    00000C74 1F25                   MOV.L       R2,@(20,R15)
    00000C76 1F31                   MOV.L       R3,@(4,R15)
    00000C78 1F36                   MOV.L       R3,@(24,R15)




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 11-Jan-2019 20:05:59  PAGE   31


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000C7A D348                   MOV.L       L1376+50,R3; _Bdisp_AreaClr_VRAM
    00000C7C 430B                   JSR         @R3
    00000C7E 740C                   ADD         #12,R4
    00000C80 E601                   MOV         #1,R6
    00000C82 65E3                   MOV         R14,R5
    00000C84 7504                   ADD         #4,R5
    00000C86 4B0B                   JSR         @R11
    00000C88 6493                   MOV         R9,R4
    00000C8A 57F1                   MOV.L       @(4,R15),R7
    00000C8C 66F2                   MOV.L       @R15,R6
    00000C8E 55F2                   MOV.L       @(8,R15),R5
    00000C90 D343                   MOV.L       L1376+54,R3; _Bdisp_AreaReverseVRAM
    00000C92 430B                   JSR         @R3
    00000C94 64D3                   MOV         R13,R4
    00000C96 7F1C                   ADD         #28,R15
    00000C98 4F26                   LDS.L       @R15+,PR
    00000C9A 69F6                   MOV.L       @R15+,R9
    00000C9C 6AF6                   MOV.L       @R15+,R10
    00000C9E 6BF6                   MOV.L       @R15+,R11
    00000CA0 6CF6                   MOV.L       @R15+,R12
    00000CA2 6DF6                   MOV.L       @R15+,R13
    00000CA4 000B                   RTS
    00000CA6 6EF6                   MOV.L       @R15+,R14
    00000CA8              _drawStrengthIndicator:          ; function: drawStrengthIndicator
                                                           ; frame size=24
    00000CA8 2FE6                   MOV.L       R14,@-R15
    00000CAA EE00                   MOV         #0,R14
    00000CAC 2FD6                   MOV.L       R13,@-R15
    00000CAE ED04                   MOV         #4,R13
    00000CB0 4F22                   STS.L       PR,@-R15
    00000CB2 7FF4                   ADD         #-12,R15
    00000CB4 1F42                   MOV.L       R4,@(8,R15)
    00000CB6 1F51                   MOV.L       R5,@(4,R15)
    00000CB8 2F62                   MOV.L       R6,@R15
    00000CBA              L1209:                            
    00000CBA 64E3                   MOV         R14,R4
    00000CBC 52F2                   MOV.L       @(8,R15),R2
    00000CBE 63E3                   MOV         R14,R3
    00000CC0 4408                   SHLL2       R4
    00000CC2 343C                   ADD         R3,R4
    00000CC4 63F2                   MOV.L       @R15,R3
    00000CC6 342C                   ADD         R2,R4
    00000CC8 3E33                   CMP/GE      R3,R14
    00000CCA 0629                   MOVT        R6
    00000CCC 76FF                   ADD         #-1,R6
    00000CCE 666B                   NEG         R6,R6
    00000CD0 B008                   BSR         _drawBallIndicator
    00000CD2 55F1                   MOV.L       @(4,R15),R5
    00000CD4 7E01                   ADD         #1,R14
    00000CD6 3ED3                   CMP/GE      R13,R14
    00000CD8 8BEF                   BF          L1209
    00000CDA 7F0C                   ADD         #12,R15
    00000CDC 4F26                   LDS.L       @R15+,PR
    00000CDE 6DF6                   MOV.L       @R15+,R13
    00000CE0 000B                   RTS
    00000CE2 6EF6                   MOV.L       @R15+,R14
    00000CE4              _drawBallIndicator:              ; function: drawBallIndicator




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 11-Jan-2019 20:05:59  PAGE   32


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

                                                           ; frame size=40
    00000CE4 2FE6                   MOV.L       R14,@-R15
    00000CE6 6E43                   MOV         R4,R14
    00000CE8 2FD6                   MOV.L       R13,@-R15
    00000CEA 64E3                   MOV         R14,R4
    00000CEC 2FC6                   MOV.L       R12,@-R15
    00000CEE 7401                   ADD         #1,R4
    00000CF0 DD29                   MOV.L       L1376+46,R13; _Bdisp_DrawLineVRAM
    00000CF2 6C53                   MOV         R5,R12
    00000CF4 2FB6                   MOV.L       R11,@-R15
    00000CF6 67C3                   MOV         R12,R7
    00000CF8 2FA6                   MOV.L       R10,@-R15
    00000CFA 6573                   MOV         R7,R5
    00000CFC 2F96                   MOV.L       R9,@-R15
    00000CFE 4F22                   STS.L       PR,@-R15
    00000D00 7FF4                   ADD         #-12,R15
    00000D02 2F62                   MOV.L       R6,@R15
    00000D04 66E3                   MOV         R14,R6
    00000D06 7602                   ADD         #2,R6
    00000D08 1F62                   MOV.L       R6,@(8,R15)
    00000D0A 4D0B                   JSR         @R13
    00000D0C 1F41                   MOV.L       R4,@(4,R15)
    00000D0E 6BC3                   MOV         R12,R11
    00000D10 63F2                   MOV.L       @R15,R3
    00000D12 69E3                   MOV         R14,R9
    00000D14 7B01                   ADD         #1,R11
    00000D16 7903                   ADD         #3,R9
    00000D18 6AC3                   MOV         R12,R10
    00000D1A 2338                   TST         R3,R3
    00000D1C 8D0A                   BT/S        L1210
    00000D1E 7A02                   ADD         #2,R10
    00000D20 67B3                   MOV         R11,R7
    00000D22 6693                   MOV         R9,R6
    00000D24 65B3                   MOV         R11,R5
    00000D26 4D0B                   JSR         @R13
    00000D28 64E3                   MOV         R14,R4
    00000D2A 67A3                   MOV         R10,R7
    00000D2C 6693                   MOV         R9,R6
    00000D2E 65A3                   MOV         R10,R5
    00000D30 A009                   BRA         L1362
    00000D32 64E3                   MOV         R14,R4
    00000D34              L1210:                            
    00000D34 67A3                   MOV         R10,R7
    00000D36 66E3                   MOV         R14,R6
    00000D38 65B3                   MOV         R11,R5
    00000D3A 4D0B                   JSR         @R13
    00000D3C 64E3                   MOV         R14,R4
    00000D3E 67A3                   MOV         R10,R7
    00000D40 6693                   MOV         R9,R6
    00000D42 65B3                   MOV         R11,R5
    00000D44 6493                   MOV         R9,R4
    00000D46              L1362:                            
    00000D46 4D0B                   JSR         @R13
    00000D48 0009                   NOP
    00000D4A 67C3                   MOV         R12,R7
    00000D4C 7703                   ADD         #3,R7
    00000D4E 6573                   MOV         R7,R5




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 11-Jan-2019 20:05:59  PAGE   33


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000D50 2F72                   MOV.L       R7,@R15
    00000D52 56F2                   MOV.L       @(8,R15),R6
    00000D54 4D0B                   JSR         @R13
    00000D56 54F1                   MOV.L       @(4,R15),R4
    00000D58 7F0C                   ADD         #12,R15
    00000D5A 4F26                   LDS.L       @R15+,PR
    00000D5C 69F6                   MOV.L       @R15+,R9
    00000D5E 6AF6                   MOV.L       @R15+,R10
    00000D60 6BF6                   MOV.L       @R15+,R11
    00000D62 6CF6                   MOV.L       @R15+,R12
    00000D64 6DF6                   MOV.L       @R15+,R13
    00000D66 000B                   RTS
    00000D68 6EF6                   MOV.L       @R15+,R14
    00000D6A              L1376:                            
    00000D6A 0000                   .DATA.W     0
    00000D6C <00000000>             .DATA.L     _strlen
    00000D70 <00000000>             .DATA.L     _memcpy
    00000D74 <00000000>             .DATA.L     _locate
    00000D78 <00000000>             .DATA.L     _Print
    00000D7C <00000000>             .DATA.L     __itos
    00000D80 42C80000               .DATA.L     H'42C80000
    00000D84 <00000000>             .DATA.L     __adds
    00000D88 41200000               .DATA.L     H'41200000
    00000D8C <00000000>             .DATA.L     __divs
    00000D90 <00000000>             .DATA.L     __stoi
    00000D94 <00000000>             .DATA.L     _Bdisp_SetPoint_VRAM
    00000D98 <00000000>             .DATA.L     _Bdisp_DrawLineVRAM
    00000D9C <00000000>             .DATA.L     _Bdisp_AreaClr_VRAM
    00000DA0 <00000000>             .DATA.L     _Bdisp_AreaReverseVRAM
          WiFi.c    18    #include "syscalls.h"
          WiFi.c    19    
          WiFi.c    20    // custom types
          WiFi.c    21    
          WiFi.c    22    typedef int bool;
          WiFi.c    23    #define true 1
          WiFi.c    24    #define false 0
          WiFi.c    25    
          WiFi.c    26    struct Network {
          WiFi.c    27        bool isConnected;
          WiFi.c    28        unsigned char* ssid;
          WiFi.c    29        int rssi;
          WiFi.c    30    } network = {false, NULL, 0};
          WiFi.c    31    // prototypes
          WiFi.c    32    
          WiFi.c    33    void drawInfoBar();
          WiFi.c    34    void drawBubble(int x, int y, int filled);
          WiFi.c    35    void connectToNetwork();
          WiFi.c    36    void browseFiles();
          WiFi.c    37    void downloadFile();
          WiFi.c    38    void getAppByID();
          WiFi.c    39    void sendCommand(unsigned char*);
          WiFi.c    40    void readString(int x, int y, bool search);
          WiFi.c    41    void serialSendString(unsigned char* buffer);
          WiFi.c    42    void serialReadString(unsigned char* buffer);
          WiFi.c    43    void serialReadStringTimeout(int timeout,unsigned char* buffer);
          WiFi.c    44    char keyToChar(int key, bool shift, bool alpha);
          WiFi.c    45    int getKey();




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 11-Jan-2019 20:05:59  PAGE   34


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          WiFi.c    46    void drawProgressBar(int y, float value);
          WiFi.c    47    void sendData(unsigned char* buffer, int length);
          WiFi.c    48    void checksum(unsigned char* data,int length, unsigned char* csbuffer);
          WiFi.c    49    void itoa(int integer,int len,unsigned char* data);
          WiFi.c    50    void drawBrowseResults(unsigned char* results);
          WiFi.c    51    int showAppInfo();
          WiFi.c    52    void sendAcknowledgement(unsigned char* state);
          WiFi.c    53    void drawImage();
          WiFi.c    54    
          WiFi.c    55    // syscalls
          WiFi.c    56    
          WiFi.c    57    int Serial_ReadOneByte(unsigned char *result);
          WiFi.c    58    int Serial_ReadNBytes(unsigned char *result, int max_size, short *actually_transferred);
          WiFi.c    59    int Serial_GetReceivedBytesAvailable();
          WiFi.c    60    int Serial_ClearReceiveBuffer();
          WiFi.c    61    int Serial_BufferedTransmitOneByte(unsigned char byte_to_transmit);
          WiFi.c    62    int Serial_BufferedTransmitNBytes(unsigned char* bytes_to_transmit, int requested_count);
          WiFi.c    63    int Serial_ClearTransmitBuffer();
          WiFi.c    64    
          WiFi.c    65    int Keyboard_GetPressedKey(short* matrixcode);
          WiFi.c    66    int Keyboard_GetKeyWait(int*column, int*row, int type_of_waiting, int timeout_period, int menu, unsigned s
                         +hort*keycode );
          WiFi.c    67    int Keyboard_PRGM_GetKey( unsigned char*result );
          WiFi.c    68    int Keyboard_KeyDown();
          WiFi.c    69    void Keyboard_ClrBuffer();
          WiFi.c    70    
          WiFi.c    71    int App_RegisterAddins();
          WiFi.c    72    
          WiFi.c    73    int RTC_GetTicks();
          WiFi.c    74    int RTC_Elapsed_ms( int start_value, int duration_in_ms );
          WiFi.c    75    
          WiFi.c    76    int isAnyKeyPressed();
          WiFi.c    77    
          WiFi.c    78    int PRGM_GetKey();
          WiFi.c    79    
          WiFi.c    80    // structs
          WiFi.c    81    //Network network = {false, NULL, 0};
          WiFi.c    82    
          WiFi.c    83    unsigned char arrowRight[3] = {0xE6, 0x9B, 0};
          WiFi.c    84    unsigned char loupe[3]={0xE6,0x50,0};
          WiFi.c    85    unsigned char buf[500];
          WiFi.c    86    unsigned char status[4];
          WiFi.c    87    
          WiFi.c    88    unsigned char checkSumDebug[10]={'A','0','z','6','2','p','e','n','i','S'};
          WiFi.c    89    unsigned char checkSumDebugBuffer[11];
          WiFi.c    90    
          WiFi.c    91    unsigned char testPicture[138]={0x42,0x4d,0x8a,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x3e,0x00,0x00,0x00,0x28
                         +,0x00,0x00,0x00,0x1e,0x00,0x00,0x00,0x13,0x00,0x00,0x00,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x4c,0x00,
                         +0x00,0x00,0xc3,0x0e,0x00,0x00,0xc3,0x0e,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0xff,0
                         +x00,0x00,0x00,0x00,0x00,0x7f,0xff,0xff,0xfc,0x00,0x00,0x01,0xfc,0x3f,0x07,0xe1,0xfc,0x21,0x04,0x21,0xfc,0x
                         +21,0x04,0x21,0xfc,0x27,0xdf,0x21,0xfc,0x25,0x55,0x21,0xfc,0x3f,0x57,0xe0,0x04,0x04,0x51,0x00,0x04,0x07,0xd
                         +f,0x01,0x84,0x00,0x00,0x02,0x44,0x70,0xee,0x38,0x44,0x49,0x09,0x49,0xc4,0x45,0xe9,0x4a,0x44,0x45,0x2e,0x4a
                         +,0x44,0x44,0xc8,0x49,0xc4,0x48,0x08,0x00,0x04,0x70,0x08,0x00,0x04,0x00,0x00,0x00,0x00};
          WiFi.c    92    
          WiFi.c    93    bool shouldRequestNetInfo = true;
          WiFi.c    94    
          WiFi.c    95    const FONTCHARACTER filename[] = {'\\','\\','f','l','s','0','\\','T','E','S','T','.','g','1','a',0};




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 11-Jan-2019 20:05:59  PAGE   35


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          WiFi.c    96    //****************************************************************************
          WiFi.c    97    //  AddIn_main (Sample program main function)
          WiFi.c    98    //
          WiFi.c    99    //  param   :   isAppli   : 1 = This application is launched by MAIN MENU.
          WiFi.c   100    //                        : 0 = This application is launched by a strip in eACT application.
          WiFi.c   101    //
          WiFi.c   102    //              OptionNum : Strip number (0~3)
          WiFi.c   103    //                         (This parameter is only used when isAppli parameter is 0.)
          WiFi.c   104    //
          WiFi.c   105    //  retval  :   1 = No error / 0 = Error
          WiFi.c   106    //
          WiFi.c   107    //****************************************************************************
          WiFi.c   108    int AddIn_main(int isAppli, unsigned short OptionNum)
    00000DA4              _AddIn_main:                     ; function: AddIn_main
                                                           ; frame size=52
    00000DA4 DE2C                   MOV.L       L1377+2,R14; _Keyboard_KeyDown
    00000DA6 7FDC                   ADD         #-36,R15
          WiFi.c   109    {
          WiFi.c   110        unsigned int key;
          WiFi.c   111        int selection = 0, lastTicks, lastKeyTicks;
    00000DA8 EB00                   MOV         #0,R11
    00000DAA 6CB3                   MOV         R11,R12
          WiFi.c   112        int col, row;
          WiFi.c   113        unsigned short keycode;
          WiFi.c   114        bool menu = false;
          WiFi.c   115        DISPBOX dispBox;
          WiFi.c   116    
          WiFi.c   117        while(Keyboard_KeyDown()) {
    00000DAC              L1212:                            
    00000DAC 4E0B                   JSR         @R14
    00000DAE 0009                   NOP
    00000DB0 2008                   TST         R0,R0
    00000DB2 8BFB                   BF          L1212
          WiFi.c   118        }
          WiFi.c   119    
          WiFi.c   120        Bdisp_AllClr_DDVRAM();
    00000DB4 D329                   MOV.L       L1377+6,R3 ; _Bdisp_AllClr_DDVRAM
    00000DB6 430B                   JSR         @R3
    00000DB8 0009                   NOP
          WiFi.c   121    
          WiFi.c   122    
          WiFi.c   123        //while(true) {
          WiFi.c   124            //GetKey(&key);
          WiFi.c   125            //sprintf(buf, "Key: %d", key);
          WiFi.c   126            //locate(2, 2);
          WiFi.c   127            //Bdisp_AllClr_DDVRAM();
          WiFi.c   128            //Print(buf);
          WiFi.c   129                    //drawImage();
          WiFi.c   130                    //GetKey(&key);
          WiFi.c   131       // }
          WiFi.c   132    
          WiFi.c   133    
          WiFi.c   134        openSerial();
    00000DBA B921                   BSR         _openSerial
    00000DBC 0009                   NOP
          WiFi.c   135        Serial_ClearReceiveBuffer();
    00000DBE D328                   MOV.L       L1377+10,R3; _Serial_ClearReceiveBuffer




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 11-Jan-2019 20:05:59  PAGE   36


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000DC0 430B                   JSR         @R3
    00000DC2 0009                   NOP
          WiFi.c   136        Serial_ClearTransmitBuffer();
    00000DC4 D227                   MOV.L       L1377+14,R2; _Serial_ClearTransmitBuffer
    00000DC6 420B                   JSR         @R2
    00000DC8 0009                   NOP
          WiFi.c   137    
          WiFi.c   138        drawInfoBar();
    00000DCA B137                   BSR         _drawInfoBar
    00000DCC 0009                   NOP
          WiFi.c   139        lastTicks = RTC_GetTicks();
    00000DCE D226                   MOV.L       L1377+18,R2; _RTC_GetTicks
    00000DD0 420B                   JSR         @R2
    00000DD2 0009                   NOP
    00000DD4 1F04                   MOV.L       R0,@(16,R15)
    00000DD6 E804                   MOV         #4,R8
    00000DD8 DD24                   MOV.L       L1377+22,R13; _Print
    00000DDA E903                   MOV         #3,R9
    00000DDC DE24                   MOV.L       L1377+26,R14; _locate
          WiFi.c   140    
          WiFi.c   141        while(1) {
    00000DDE              L1215:                            
          WiFi.c   142            int line;
          WiFi.c   143                    
          WiFi.c   144            dispBox.left = 0;
          WiFi.c   145            dispBox.top = 7;
    00000DDE E307                   MOV         #7,R3
    00000DE0 1FB5                   MOV.L       R11,@(20,R15)
          WiFi.c   146            dispBox.right = 127;
    00000DE2 E27F                   MOV         #127,R2
    00000DE4 1F36                   MOV.L       R3,@(24,R15)
          WiFi.c   147            dispBox.bottom = 63;
          WiFi.c   148    
          WiFi.c   149            Bdisp_AreaClr_VRAM(&dispBox);
    00000DE6 64F3                   MOV         R15,R4
    00000DE8 1F27                   MOV.L       R2,@(28,R15)
    00000DEA E33F                   MOV         #63,R3
    00000DEC 1F38                   MOV.L       R3,@(32,R15)
    00000DEE D321                   MOV.L       L1377+30,R3; _Bdisp_AreaClr_VRAM
    00000DF0 430B                   JSR         @R3
    00000DF2 7414                   ADD         #20,R4
          WiFi.c   150                    
          WiFi.c   151                    memset(checkSumDebugBuffer,0,11);
    00000DF4 D420                   MOV.L       L1377+34,R4; _checkSumDebugBuffer
    00000DF6 E60B                   MOV         #11,R6
    00000DF8 D220                   MOV.L       L1377+38,R2; _memset
    00000DFA 420B                   JSR         @R2
    00000DFC E500                   MOV         #0,R5
          WiFi.c   152                    checksum(checkSumDebug,10,checkSumDebugBuffer);
    00000DFE D61E                   MOV.L       L1377+34,R6; _checkSumDebugBuffer
    00000E00 D41F                   MOV.L       L1377+42,R4; _checkSumDebug
    00000E02 D320                   MOV.L       L1377+46,R3; _checksum
    00000E04 430B                   JSR         @R3
    00000E06 E50A                   MOV         #10,R5
          WiFi.c   153                    locate(1,7);
    00000E08 E507                   MOV         #7,R5
    00000E0A 4E0B                   JSR         @R14




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 11-Jan-2019 20:05:59  PAGE   37


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000E0C E401                   MOV         #1,R4
          WiFi.c   154                    Print(checkSumDebugBuffer);
    00000E0E D41A                   MOV.L       L1377+34,R4; _checkSumDebugBuffer
    00000E10 4D0B                   JSR         @R13
    00000E12 0009                   NOP
          WiFi.c   155           
          WiFi.c   156            for (line = 0; line < 4; line = line + 1) {
    00000E14 6AB3                   MOV         R11,R10
    00000E16              L1217:                            
          WiFi.c   157                int x = 3;
          WiFi.c   158                if (line == selection) {
    00000E16 3AC0                   CMP/EQ      R12,R10
    00000E18 8F01                   BF/S        L1218
    00000E1A 6493                   MOV         R9,R4
          WiFi.c   159                    x = x + 1;
    00000E1C 6483                   MOV         R8,R4
    00000E1E              L1218:                            
    00000E1E 65A3                   MOV         R10,R5
    00000E20 60A3                   MOV         R10,R0
    00000E22 8800                   CMP/EQ      #0,R0
    00000E24 8D08                   BT/S        L1012
    00000E26 7503                   ADD         #3,R5
    00000E28 8801                   CMP/EQ      #1,R0
    00000E2A 890A                   BT          L1014
    00000E2C 8802                   CMP/EQ      #2,R0
    00000E2E 890D                   BT          L1016
    00000E30 8803                   CMP/EQ      #3,R0
    00000E32 892F                   BT          L1018
    00000E34 A033                   BRA         L1219
    00000E36 0009                   NOP
    00000E38              L1012:                           ; case label 
          WiFi.c   160                }
          WiFi.c   161    
          WiFi.c   162                switch(line) {
          WiFi.c   163                    case 0:
          WiFi.c   164                        locate(x, 3 + line);
    00000E38 4E0B                   JSR         @R14
    00000E3A 0009                   NOP
          WiFi.c   165                        Print((unsigned char*) "Connect");
    00000E3C D412                   MOV.L       L1377+50,R4; L722
          WiFi.c   166                        break;
    00000E3E A02C                   BRA         L1365
    00000E40 0009                   NOP
    00000E42              L1014:                           ; case label 
          WiFi.c   167                    case 1:
          WiFi.c   168                        locate(x, 3 + line);
    00000E42 4E0B                   JSR         @R14
    00000E44 0009                   NOP
          WiFi.c   169                        Print((unsigned char*) "Disconnect");
    00000E46 D411                   MOV.L       L1377+54,R4; L723
          WiFi.c   170                        break;
    00000E48 A027                   BRA         L1365
    00000E4A 0009                   NOP
    00000E4C              L1016:                           ; case label 
          WiFi.c   171                    case 2:
          WiFi.c   172                        locate(x, 3 + line);
    00000E4C 4E0B                   JSR         @R14




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 11-Jan-2019 20:05:59  PAGE   38


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000E4E 0009                   NOP
          WiFi.c   173                        Print((unsigned char*) "Browse");
    00000E50 D40F                   MOV.L       L1377+58,R4; L724
          WiFi.c   174                        break;
    00000E52 A022                   BRA         L1365
    00000E54 0009                   NOP
    00000E56              L1377:                            
    00000E56 0000                   .DATA.W     0
    00000E58 <00000000>             .DATA.L     _Keyboard_KeyDown
    00000E5C <00000000>             .DATA.L     _Bdisp_AllClr_DDVRAM
    00000E60 <00000000>             .DATA.L     _Serial_ClearReceiveBuffer
    00000E64 <00000000>             .DATA.L     _Serial_ClearTransmitBuffer
    00000E68 <00000000>             .DATA.L     _RTC_GetTicks
    00000E6C <00000000>             .DATA.L     _Print
    00000E70 <00000000>             .DATA.L     _locate
    00000E74 <00000000>             .DATA.L     _Bdisp_AreaClr_VRAM
    00000E78 <00000000>             .DATA.L     _checkSumDebugBuffer
    00000E7C <00000000>             .DATA.L     _memset
    00000E80 <00000000>             .DATA.L     _checkSumDebug
    00000E84 <00000000>             .DATA.L     _checksum
    00000E88 <00000000>             .DATA.L     L722
    00000E8C <00000000>             .DATA.L     L723
    00000E90 <00000000>             .DATA.L     L724
    00000E94              L1018:                           ; case label 
          WiFi.c   175                     case 3:
          WiFi.c   176                        locate(x, 3 + line);
    00000E94 4E0B                   JSR         @R14
    00000E96 0009                   NOP
          WiFi.c   177                        Print((unsigned char*) "Get by ID");
    00000E98 D439                   MOV.L       L1378+4,R4 ; L725
          WiFi.c   178                        break;
    00000E9A              L1365:                            
    00000E9A 4D0B                   JSR         @R13
    00000E9C 0009                   NOP
    00000E9E              L1219:                            
    00000E9E 7A01                   ADD         #1,R10
    00000EA0 3A83                   CMP/GE      R8,R10
    00000EA2 8BB8                   BF          L1217
          WiFi.c   179                }
          WiFi.c   180            }
          WiFi.c   181    
          WiFi.c   182            locate(2, 3 + selection);
    00000EA4 65C3                   MOV         R12,R5
    00000EA6 7503                   ADD         #3,R5
    00000EA8 4E0B                   JSR         @R14
    00000EAA E402                   MOV         #2,R4
          WiFi.c   183            Print(arrowRight);        
    00000EAC D435                   MOV.L       L1378+8,R4 ; _arrowRight
    00000EAE 4D0B                   JSR         @R13
    00000EB0 0009                   NOP
          WiFi.c   184    
          WiFi.c   185            receiveStatusTimeout(20);
    00000EB2 B91E                   BSR         _receiveStatusTimeout
    00000EB4 E414                   MOV         #20,R4
          WiFi.c   186            if(memcmp(status,"OF",2)==0){
    00000EB6 D534                   MOV.L       L1378+12,R5; L604
    00000EB8 D434                   MOV.L       L1378+16,R4; _status




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 11-Jan-2019 20:05:59  PAGE   39


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000EBA D335                   MOV.L       L1378+20,R3; _memcmp
    00000EBC 430B                   JSR         @R3
    00000EBE E602                   MOV         #2,R6
    00000EC0 2008                   TST         R0,R0
    00000EC2 8B02                   BF          L1220
          WiFi.c   187                shouldRequestNetInfo=true;
    00000EC4 D233                   MOV.L       L1378+24,R2; _shouldRequestNetInfo
    00000EC6 E301                   MOV         #1,R3
    00000EC8 2232                   MOV.L       R3,@R2
    00000ECA              L1220:                            
          WiFi.c   188            }
          WiFi.c   189                  
          WiFi.c   190            if (RTC_Elapsed_ms(lastTicks, 2500) && shouldRequestNetInfo) {
    00000ECA 9557                   MOV.W       L1378,R5   ; H'09C4
    00000ECC D332                   MOV.L       L1378+28,R3; _RTC_Elapsed_ms
    00000ECE 430B                   JSR         @R3
    00000ED0 54F4                   MOV.L       @(16,R15),R4
    00000ED2 2008                   TST         R0,R0
    00000ED4 890C                   BT          L1221
    00000ED6 D22F                   MOV.L       L1378+24,R2; _shouldRequestNetInfo
    00000ED8 6322                   MOV.L       @R2,R3
    00000EDA 2338                   TST         R3,R3
    00000EDC 8908                   BT          L1221
          WiFi.c   191                
          WiFi.c   192                getNetworkInfo();
    00000EDE 7FF4                   ADD         #-12,R15
    00000EE0 BC7A                   BSR         _getNetworkInfo
    00000EE2 2FF6                   MOV.L       R15,@-R15
          WiFi.c   193                drawInfoBar();
    00000EE4 B0AA                   BSR         _drawInfoBar
    00000EE6 7F10                   ADD         #16,R15
          WiFi.c   194                lastTicks = RTC_GetTicks();
    00000EE8 D32C                   MOV.L       L1378+32,R3; _RTC_GetTicks
    00000EEA 430B                   JSR         @R3
    00000EEC 0009                   NOP
    00000EEE 1F04                   MOV.L       R0,@(16,R15)
    00000EF0              L1221:                            
          WiFi.c   195            }
          WiFi.c   196    
          WiFi.c   197    
          WiFi.c   198            Bdisp_PutDisp_DD();
    00000EF0 D32B                   MOV.L       L1378+36,R3; _Bdisp_PutDisp_DD
    00000EF2 430B                   JSR         @R3
    00000EF4 0009                   NOP
          WiFi.c   199                    
          WiFi.c   200            if (RTC_Elapsed_ms(lastKeyTicks, 200) && Keyboard_GetKeyWait(&col, &row, 1, 0, 0, &keycode)) {
    00000EF6 9542                   MOV.W       L1378+2,R5 ; H'00C8
    00000EF8 D327                   MOV.L       L1378+28,R3; _RTC_Elapsed_ms
    00000EFA 430B                   JSR         @R3
    00000EFC 54F3                   MOV.L       @(12,R15),R4
    00000EFE 2008                   TST         R0,R0
    00000F00 8B01                   BF          L1379
    00000F02 A096                   BRA         L1222
    00000F04 0009                   NOP
    00000F06              L1379:                            
    00000F06 63F3                   MOV         R15,R3
    00000F08 7308                   ADD         #8,R3




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 11-Jan-2019 20:05:59  PAGE   40


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000F0A E200                   MOV         #0,R2
    00000F0C 2F36                   MOV.L       R3,@-R15
    00000F0E E601                   MOV         #1,R6
    00000F10 2F26                   MOV.L       R2,@-R15
    00000F12 6723                   MOV         R2,R7
    00000F14 D323                   MOV.L       L1378+40,R3; _Keyboard_GetKeyWait
    00000F16 65F3                   MOV         R15,R5
    00000F18 750C                   ADD         #12,R5
    00000F1A 64F3                   MOV         R15,R4
    00000F1C 430B                   JSR         @R3
    00000F1E 7408                   ADD         #8,R4
    00000F20 2008                   TST         R0,R0
    00000F22 8F02                   BF/S        L1380
    00000F24 7F08                   ADD         #8,R15
    00000F26 A084                   BRA         L1222
    00000F28 0009                   NOP
    00000F2A              L1380:                            
          WiFi.c   201                if (col == 4 && row == 9) { // MENU key was pressed
    00000F2A 60F2                   MOV.L       @R15,R0
    00000F2C 8804                   CMP/EQ      #4,R0
    00000F2E 8B15                   BF          L1223
    00000F30 50F1                   MOV.L       @(4,R15),R0
    00000F32 8809                   CMP/EQ      #9,R0
    00000F34 8B12                   BF          L1223
          WiFi.c   202                    Serial_Close(1);
    00000F36 D21C                   MOV.L       L1378+44,R2; _Serial_Close
    00000F38 420B                   JSR         @R2
    00000F3A E401                   MOV         #1,R4
          WiFi.c   203                    Keyboard_GetKeyWait(&col, &row, 0, 0, 0, &keycode);
    00000F3C D219                   MOV.L       L1378+40,R2; _Keyboard_GetKeyWait
    00000F3E 63F3                   MOV         R15,R3
    00000F40 7308                   ADD         #8,R3
    00000F42 E700                   MOV         #0,R7
    00000F44 2F36                   MOV.L       R3,@-R15
    00000F46 6673                   MOV         R7,R6
    00000F48 2FB6                   MOV.L       R11,@-R15
    00000F4A 65F3                   MOV         R15,R5
    00000F4C 750C                   ADD         #12,R5
    00000F4E 64F3                   MOV         R15,R4
    00000F50 420B                   JSR         @R2
    00000F52 7408                   ADD         #8,R4
          WiFi.c   204                    openSerial();
    00000F54 B854                   BSR         _openSerial
    00000F56 7F08                   ADD         #8,R15
    00000F58 A060                   BRA         L1224
    00000F5A 0009                   NOP
    00000F5C              L1223:                            
          WiFi.c   205                } else if (col == 2 && row == 9) {
    00000F5C 60F2                   MOV.L       @R15,R0
    00000F5E 8802                   CMP/EQ      #2,R0
    00000F60 8B04                   BF          L1225
    00000F62 50F1                   MOV.L       @(4,R15),R0
    00000F64 8809                   CMP/EQ      #9,R0
    00000F66 8B01                   BF          L1225
          WiFi.c   206                    selection = selection - 1;
    00000F68 A058                   BRA         L1224
    00000F6A 7CFF                   ADD         #-1,R12




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 11-Jan-2019 20:05:59  PAGE   41


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000F6C              L1225:                            
          WiFi.c   207                } else if (col == 3 && row == 8) {
    00000F6C 60F2                   MOV.L       @R15,R0
    00000F6E 8803                   CMP/EQ      #3,R0
    00000F70 8B54                   BF          L1224
    00000F72 50F1                   MOV.L       @(4,R15),R0
    00000F74 8808                   CMP/EQ      #8,R0
    00000F76 8B19                   BF          L1227
          WiFi.c   208                    selection = selection + 1;
    00000F78 A050                   BRA         L1224
    00000F7A 7C01                   ADD         #1,R12
    00000F7C              L1378:                            
    00000F7C 09C4                   .DATA.W     H'09C4
    00000F7E 00C8                   .DATA.W     H'00C8
    00000F80 <00000000>             .DATA.L     L725
    00000F84 <00000000>             .DATA.L     _arrowRight
    00000F88 <00000000>             .DATA.L     L604
    00000F8C <00000000>             .DATA.L     _status
    00000F90 <00000000>             .DATA.L     _memcmp
    00000F94 <00000000>             .DATA.L     _shouldRequestNetInfo
    00000F98 <00000000>             .DATA.L     _RTC_Elapsed_ms
    00000F9C <00000000>             .DATA.L     _RTC_GetTicks
    00000FA0 <00000000>             .DATA.L     _Bdisp_PutDisp_DD
    00000FA4 <00000000>             .DATA.L     _Keyboard_GetKeyWait
    00000FA8 <00000000>             .DATA.L     _Serial_Close
    00000FAC              L1227:                            
          WiFi.c   209                } else if (col == 3 && row == 2) {
    00000FAC 60F2                   MOV.L       @R15,R0
    00000FAE 8803                   CMP/EQ      #3,R0
    00000FB0 8B34                   BF          L1224
    00000FB2 50F1                   MOV.L       @(4,R15),R0
    00000FB4 8802                   CMP/EQ      #2,R0
    00000FB6 8B31                   BF          L1224
          WiFi.c   210                    switch (selection) {
    00000FB8 60C3                   MOV         R12,R0
    00000FBA 8800                   CMP/EQ      #0,R0
    00000FBC 8907                   BT          L1020
    00000FBE 8801                   CMP/EQ      #1,R0
    00000FC0 8915                   BT          L1022
    00000FC2 8802                   CMP/EQ      #2,R0
    00000FC4 8924                   BT          L1023
    00000FC6 8803                   CMP/EQ      #3,R0
    00000FC8 8926                   BT          L1024
    00000FCA A027                   BRA         L1224
    00000FCC 0009                   NOP
    00000FCE              L1020:                           ; case label 
          WiFi.c   211                        case 0:
          WiFi.c   212                                                    Bdisp_AllClr_DDVRAM();
    00000FCE D286                   MOV.L       L1381+2,R2 ; _Bdisp_AllClr_DDVRAM
    00000FD0 420B                   JSR         @R2
    00000FD2 0009                   NOP
          WiFi.c   213                                                    locate(1, 1);
    00000FD4 E501                   MOV         #1,R5
    00000FD6 4E0B                   JSR         @R14
    00000FD8 6453                   MOV         R5,R4
          WiFi.c   214                                                    Print((unsigned char*) "Scanning...");
    00000FDA D484                   MOV.L       L1381+6,R4 ; L734




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 11-Jan-2019 20:05:59  PAGE   42


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000FDC 4D0B                   JSR         @R13
    00000FDE 0009                   NOP
          WiFi.c   215                                                    Bdisp_PutDisp_DD();
    00000FE0 D383                   MOV.L       L1381+10,R3; _Bdisp_PutDisp_DD
    00000FE2 430B                   JSR         @R3
    00000FE4 0009                   NOP
          WiFi.c   216                                                    connectToNetwork();         
    00000FE6 B133                   BSR         _connectToNetwork
    00000FE8 0009                   NOP
          WiFi.c   217                            break;
    00000FEA A017                   BRA         L1224
    00000FEC 0009                   NOP
    00000FEE              L1022:                           ; case label 
          WiFi.c   218                        case 1:
          WiFi.c   219                            sendCommand("DISCONNECT");
    00000FEE D481                   MOV.L       L1381+14,R4; L572
    00000FF0 B81D                   BSR         _sendCommand
    00000FF2 0009                   NOP
          WiFi.c   220                            receiveStatus();
    00000FF4 B87A                   BSR         _receiveStatus
    00000FF6 0009                   NOP
          WiFi.c   221                                                    
          WiFi.c   222                            if (memcmp(status,"OK",2)==0){
    00000FF8 D57F                   MOV.L       L1381+18,R5; L482
    00000FFA D480                   MOV.L       L1381+22,R4; _status
    00000FFC D280                   MOV.L       L1381+26,R2; _memcmp
    00000FFE 420B                   JSR         @R2
    00001000 E602                   MOV         #2,R6
    00001002 2008                   TST         R0,R0
    00001004 8B0A                   BF          L1224
          WiFi.c   223                                disconnect();
    00001006 BBC6                   BSR         _disconnect
    00001008 0009                   NOP
          WiFi.c   224                                                            shouldRequestNetInfo = false;
    0000100A D37E                   MOV.L       L1381+30,R3; _shouldRequestNetInfo
          WiFi.c   225                            }
          WiFi.c   226                            break;
    0000100C A006                   BRA         L1224
    0000100E 23B2                   MOV.L       R11,@R3
    00001010              L1023:                           ; case label 
          WiFi.c   227                        case 2:
          WiFi.c   228                            browseFiles();            
    00001010 B1F2                   BSR         _browseFiles
    00001012 0009                   NOP
          WiFi.c   229                            break;
    00001014 A002                   BRA         L1224
    00001016 0009                   NOP
    00001018              L1024:                           ; case label 
          WiFi.c   230                        case 3:
          WiFi.c   231                            getAppByID();
    00001018 B4A5                   BSR         _getAppByID
    0000101A 0009                   NOP
          WiFi.c   232                            break;
    0000101C              L1224:                            
          WiFi.c   233                    }
          WiFi.c   234                }
          WiFi.c   235    




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 11-Jan-2019 20:05:59  PAGE   43


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          WiFi.c   236                if (selection < 0) {
    0000101C 4C11                   CMP/PZ      R12
    0000101E 8901                   BT          L1232
          WiFi.c   237                    selection = 3;
    00001020 A003                   BRA         L1233
    00001022 6C93                   MOV         R9,R12
    00001024              L1232:                            
          WiFi.c   238                } else if (selection > 3) {
    00001024 3C97                   CMP/GT      R9,R12
    00001026 8B00                   BF          L1233
          WiFi.c   239                    selection = 0;
    00001028 6CB3                   MOV         R11,R12
    0000102A              L1233:                            
          WiFi.c   240                }
          WiFi.c   241    
          WiFi.c   242                lastKeyTicks = RTC_GetTicks();
    0000102A D277                   MOV.L       L1381+34,R2; _RTC_GetTicks
    0000102C 420B                   JSR         @R2
    0000102E 0009                   NOP
    00001030 1F03                   MOV.L       R0,@(12,R15)
    00001032              L1222:                            
          WiFi.c   243            }
          WiFi.c   244    
          WiFi.c   245            Keyboard_ClrBuffer(); // clear the buffer to prevent strange behaviour when hitting the menu key
    00001032 D376                   MOV.L       L1381+38,R3; _Keyboard_ClrBuffer
    00001034 430B                   JSR         @R3
    00001036 0009                   NOP
    00001038 AED1                   BRA         L1215
    0000103A 0009                   NOP
          WiFi.c   246        }
          WiFi.c   247    
          WiFi.c   248            closeSerial();
          WiFi.c   249    
          WiFi.c   250        return 1;
          WiFi.c   251    }
          WiFi.c   252    
          WiFi.c   253    void drawInfoBar() { //überarbeitet
    0000103C              _drawInfoBar:                    ; function: drawInfoBar
                                                           ; frame size=84
                                                           ; used runtime library name:
                                                           ; __modls, __addd, __muld, __dtoi, __itod
    0000103C 2FE6                   MOV.L       R14,@-R15
    0000103E 2FD6                   MOV.L       R13,@-R15
    00001040 2FC6                   MOV.L       R12,@-R15
          WiFi.c   254        int x, y, bubble, key;
          WiFi.c   255        DISPBOX dispBox;
          WiFi.c   256    
          WiFi.c   257        dispBox.left = 0;
          WiFi.c   258        dispBox.top = 0;
          WiFi.c   259        dispBox.right = 127;
    00001042 EC7F                   MOV         #127,R12
          WiFi.c   260        dispBox.bottom = 6;
          WiFi.c   261    
          WiFi.c   262        Bdisp_AreaClr_VRAM(&dispBox);
    00001044 D372                   MOV.L       L1381+42,R3; _Bdisp_AreaClr_VRAM
    00001046 2FB6                   MOV.L       R11,@-R15
    00001048 2FA6                   MOV.L       R10,@-R15




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 11-Jan-2019 20:05:59  PAGE   44


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000104A EB00                   MOV         #0,R11
    0000104C 2F96                   MOV.L       R9,@-R15
    0000104E EA06                   MOV         #6,R10
    00001050 2F86                   MOV.L       R8,@-R15
    00001052 4F22                   STS.L       PR,@-R15
    00001054 7FF0                   ADD         #-16,R15
    00001056 2FB2                   MOV.L       R11,@R15
    00001058 1FB1                   MOV.L       R11,@(4,R15)
    0000105A 1FC2                   MOV.L       R12,@(8,R15)
    0000105C 1FA3                   MOV.L       R10,@(12,R15)
    0000105E 430B                   JSR         @R3
    00001060 64F3                   MOV         R15,R4
          WiFi.c   263    
          WiFi.c   264        for (y = 0; y < 7; y = y + 1) {
    00001062 E903                   MOV         #3,R9
    00001064 D86B                   MOV.L       L1381+46,R8; _Bdisp_SetPoint_VRAM
    00001066 6DB3                   MOV         R11,R13
    00001068              L1236:                            
          WiFi.c   265            for (x = 2 - ((y + 2) % 3); x < 127; x = x + 3) {
    00001068 D36B                   MOV.L       L1381+50,R3; __modls
    0000106A 61D3                   MOV         R13,R1
    0000106C 7102                   ADD         #2,R1
    0000106E 430B                   JSR         @R3
    00001070 6093                   MOV         R9,R0
    00001072 EE02                   MOV         #2,R14
    00001074 3E08                   SUB         R0,R14
    00001076 3EC3                   CMP/GE      R12,R14
    00001078 8906                   BT          L1237
    0000107A              L1238:                            
          WiFi.c   266                Bdisp_SetPoint_VRAM(x, y, 1);
    0000107A E601                   MOV         #1,R6
    0000107C 65D3                   MOV         R13,R5
    0000107E 480B                   JSR         @R8
    00001080 64E3                   MOV         R14,R4
    00001082 7E03                   ADD         #3,R14
    00001084 3EC3                   CMP/GE      R12,R14
    00001086 8BF8                   BF          L1238
    00001088              L1237:                            
    00001088 7D01                   ADD         #1,R13
    0000108A E207                   MOV         #7,R2
    0000108C 3D23                   CMP/GE      R2,R13
    0000108E 8BEB                   BF          L1236
          WiFi.c   267            }
          WiFi.c   268        }
          WiFi.c   269    
          WiFi.c   270        if (network.isConnected) {
    00001090 DE62                   MOV.L       L1381+54,R14; _network
    00001092 62E2                   MOV.L       @R14,R2
    00001094 2228                   TST         R2,R2
    00001096 894E                   BT          L1239
          WiFi.c   271            int bubbleCount = (int) (12.0 / 100.0 * (network.rssi + 100.0));
    00001098 50E2                   MOV.L       @(8,R14),R0
    0000109A 7FE8                   ADD         #-24,R15
    0000109C D360                   MOV.L       L1381+58,R3; __itod
    0000109E 430B                   JSR         @R3
    000010A0 2FF6                   MOV.L       R15,@-R15
    000010A2 E200                   MOV         #0,R2




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 11-Jan-2019 20:05:59  PAGE   45


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000010A4 D160                   MOV.L       L1381+66,R1; __addd
    000010A6 2F26                   MOV.L       R2,@-R15
    000010A8 D25E                   MOV.L       L1381+62,R2; H'40590000
    000010AA 2F26                   MOV.L       R2,@-R15
    000010AC 63F3                   MOV         R15,R3
    000010AE 7310                   ADD         #16,R3
    000010B0 410B                   JSR         @R1
    000010B2 2F36                   MOV.L       R3,@-R15
    000010B4 D25D                   MOV.L       L1381+70,R2; H'EB851EB8
    000010B6 2F26                   MOV.L       R2,@-R15
    000010B8 D25D                   MOV.L       L1381+74,R2; H'3FBEB851
    000010BA 2F26                   MOV.L       R2,@-R15
    000010BC D15D                   MOV.L       L1381+78,R1; __muld
    000010BE 63F3                   MOV         R15,R3
    000010C0 7310                   ADD         #16,R3
    000010C2 410B                   JSR         @R1
    000010C4 2F36                   MOV.L       R3,@-R15
    000010C6 D25C                   MOV.L       L1381+82,R2; __dtoi
    000010C8 420B                   JSR         @R2
    000010CA 0009                   NOP
          WiFi.c   272    
          WiFi.c   273            dispBox.left = 6;
    000010CC 2FA2                   MOV.L       R10,@R15
    000010CE 6D03                   MOV         R0,R13
          WiFi.c   274            dispBox.top = 0;
          WiFi.c   275            dispBox.right = dispBox.left + 6 * strlen(network.ssid);
    000010D0 D35A                   MOV.L       L1381+86,R3; _strlen
    000010D2 1FB1                   MOV.L       R11,@(4,R15)
    000010D4 430B                   JSR         @R3
    000010D6 54E1                   MOV.L       @(4,R14),R4
    000010D8 63F2                   MOV.L       @R15,R3
    000010DA 6203                   MOV         R0,R2
    000010DC 4000                   SHLL        R0
    000010DE 4208                   SHLL2       R2
    000010E0 302C                   ADD         R2,R0
    000010E2 303C                   ADD         R3,R0
    000010E4 1F02                   MOV.L       R0,@(8,R15)
          WiFi.c   276            dispBox.bottom = 6;
    000010E6 1FA3                   MOV.L       R10,@(12,R15)
          WiFi.c   277            Bdisp_AreaClr_VRAM(&dispBox);
    000010E8 D349                   MOV.L       L1381+42,R3; _Bdisp_AreaClr_VRAM
    000010EA 430B                   JSR         @R3
    000010EC 64F3                   MOV         R15,R4
          WiFi.c   278    
          WiFi.c   279            locate(2, 1);
    000010EE E501                   MOV         #1,R5
    000010F0 D253                   MOV.L       L1381+90,R2; _locate
    000010F2 420B                   JSR         @R2
    000010F4 E402                   MOV         #2,R4
          WiFi.c   280            Print(network.ssid);
    000010F6 D353                   MOV.L       L1381+94,R3; _Print
    000010F8 430B                   JSR         @R3
    000010FA 54E1                   MOV.L       @(4,R14),R4
          WiFi.c   281    
          WiFi.c   282            dispBox.left = 90;
    000010FC E25A                   MOV         #90,R2
    000010FE 2F22                   MOV.L       R2,@R15




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 11-Jan-2019 20:05:59  PAGE   46


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          WiFi.c   283            dispBox.top = 0;
    00001100 1FB1                   MOV.L       R11,@(4,R15)
          WiFi.c   284            dispBox.right = dispBox.left + 30;
    00001102 63F2                   MOV.L       @R15,R3
    00001104 731E                   ADD         #30,R3
    00001106 1F32                   MOV.L       R3,@(8,R15)
          WiFi.c   285            dispBox.bottom = 6;
    00001108 1FA3                   MOV.L       R10,@(12,R15)
          WiFi.c   286            Bdisp_AreaClr_VRAM(&dispBox);
    0000110A D341                   MOV.L       L1381+42,R3; _Bdisp_AreaClr_VRAM
    0000110C 430B                   JSR         @R3
    0000110E 64F3                   MOV         R15,R4
          WiFi.c   287    
          WiFi.c   288            for (bubble = 0; bubble < 5; bubble = bubble + 1) {
    00001110 E905                   MOV         #5,R9
    00001112 6EB3                   MOV         R11,R14
    00001114              L1240:                            
          WiFi.c   289                int filled = (bubble < bubbleCount);
          WiFi.c   290                drawBubble(bubble * 6 + dispBox.left + 1, 1, filled);
    00001114 62F2                   MOV.L       @R15,R2
    00001116 3ED3                   CMP/GE      R13,R14
    00001118 0629                   MOVT        R6
    0000111A 76FF                   ADD         #-1,R6
    0000111C 666B                   NEG         R6,R6
    0000111E E501                   MOV         #1,R5
    00001120 64E3                   MOV         R14,R4
    00001122 63E3                   MOV         R14,R3
    00001124 4400                   SHLL        R4
    00001126 4308                   SHLL2       R3
    00001128 343C                   ADD         R3,R4
    0000112A 342C                   ADD         R2,R4
    0000112C B014                   BSR         _drawBubble
    0000112E 7401                   ADD         #1,R4
    00001130 7E01                   ADD         #1,R14
    00001132 3E93                   CMP/GE      R9,R14
    00001134 8BEE                   BF          L1240
    00001136              L1239:                            
          WiFi.c   291            }
          WiFi.c   292        }
          WiFi.c   293    
          WiFi.c   294        dispBox.left = 0;
    00001136 2FB2                   MOV.L       R11,@R15
          WiFi.c   295        dispBox.top = 0;
    00001138 1FB1                   MOV.L       R11,@(4,R15)
          WiFi.c   296        dispBox.right = 127;
    0000113A 1FC2                   MOV.L       R12,@(8,R15)
          WiFi.c   297        dispBox.bottom = 6;
    0000113C 1FA3                   MOV.L       R10,@(12,R15)
          WiFi.c   298    
          WiFi.c   299        Bdisp_PutDispArea_DD(&dispBox);
    0000113E D342                   MOV.L       L1381+98,R3; _Bdisp_PutDispArea_DD
    00001140 430B                   JSR         @R3
    00001142 64F3                   MOV         R15,R4
          WiFi.c   300    }
    00001144 7F10                   ADD         #16,R15
    00001146 4F26                   LDS.L       @R15+,PR
    00001148 68F6                   MOV.L       @R15+,R8




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 11-Jan-2019 20:05:59  PAGE   47


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000114A 69F6                   MOV.L       @R15+,R9
    0000114C 6AF6                   MOV.L       @R15+,R10
    0000114E 6BF6                   MOV.L       @R15+,R11
    00001150 6CF6                   MOV.L       @R15+,R12
    00001152 6DF6                   MOV.L       @R15+,R13
    00001154 000B                   RTS
    00001156 6EF6                   MOV.L       @R15+,R14
          WiFi.c   301    
          WiFi.c   302    void drawBubble(int x, int y, int filled) {
    00001158              _drawBubble:                     ; function: drawBubble
                                                           ; frame size=60
    00001158 2FE6                   MOV.L       R14,@-R15
    0000115A 6E53                   MOV         R5,R14
    0000115C 2FD6                   MOV.L       R13,@-R15
          WiFi.c   303        Bdisp_DrawLineVRAM(x + 1, y, x + 3, y);
    0000115E 67E3                   MOV         R14,R7
    00001160 2FC6                   MOV.L       R12,@-R15
    00001162 6D43                   MOV         R4,R13
    00001164 2FB6                   MOV.L       R11,@-R15
    00001166 6573                   MOV         R7,R5
    00001168 DC38                   MOV.L       L1381+102,R12; _Bdisp_DrawLineVRAM
    0000116A 64D3                   MOV         R13,R4
    0000116C 4F22                   STS.L       PR,@-R15
    0000116E 7401                   ADD         #1,R4
    00001170 7FD8                   ADD         #-40,R15
    00001172 1F65                   MOV.L       R6,@(20,R15)
    00001174 66D3                   MOV         R13,R6
    00001176 7603                   ADD         #3,R6
    00001178 1F61                   MOV.L       R6,@(4,R15)
    0000117A 4C0B                   JSR         @R12
    0000117C 1F43                   MOV.L       R4,@(12,R15)
          WiFi.c   304        Bdisp_DrawLineVRAM(x, y + 1, x + 4, y + 1);
    0000117E 67E3                   MOV         R14,R7
    00001180 7701                   ADD         #1,R7
    00001182 6BD3                   MOV         R13,R11
    00001184 1F72                   MOV.L       R7,@(8,R15)
    00001186 6573                   MOV         R7,R5
    00001188 7B04                   ADD         #4,R11
    0000118A 66B3                   MOV         R11,R6
    0000118C 4C0B                   JSR         @R12
    0000118E 64D3                   MOV         R13,R4
          WiFi.c   305        Bdisp_DrawLineVRAM(x, y + 2, x + 4, y + 2);
    00001190 67E3                   MOV         R14,R7
    00001192 7702                   ADD         #2,R7
    00001194 1F74                   MOV.L       R7,@(16,R15)
    00001196 66B3                   MOV         R11,R6
    00001198 6573                   MOV         R7,R5
    0000119A 4C0B                   JSR         @R12
    0000119C 64D3                   MOV         R13,R4
          WiFi.c   306        Bdisp_DrawLineVRAM(x, y + 3, x + 4, y + 3);
    0000119E 67E3                   MOV         R14,R7
    000011A0 7703                   ADD         #3,R7
    000011A2 66B3                   MOV         R11,R6
    000011A4 2F72                   MOV.L       R7,@R15
    000011A6 6573                   MOV         R7,R5
    000011A8 4C0B                   JSR         @R12
    000011AA 64D3                   MOV         R13,R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 11-Jan-2019 20:05:59  PAGE   48


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          WiFi.c   307        Bdisp_DrawLineVRAM(x + 1, y + 4, x + 3, y + 4);
    000011AC 67E3                   MOV         R14,R7
    000011AE 7704                   ADD         #4,R7
    000011B0 1F74                   MOV.L       R7,@(16,R15)
    000011B2 6573                   MOV         R7,R5
    000011B4 56F1                   MOV.L       @(4,R15),R6
    000011B6 4C0B                   JSR         @R12
    000011B8 54F3                   MOV.L       @(12,R15),R4
          WiFi.c   308    
          WiFi.c   309        if (filled == 0) {
    000011BA 53F5                   MOV.L       @(20,R15),R3
    000011BC 2338                   TST         R3,R3
    000011BE 8B0B                   BF          L1241
          WiFi.c   310            DISPBOX clearBox;
          WiFi.c   311            clearBox.left = x + 1;
    000011C0 53F3                   MOV.L       @(12,R15),R3
          WiFi.c   312            clearBox.top = y + 1;
          WiFi.c   313            clearBox.right = x + 3;
          WiFi.c   314            clearBox.bottom = y + 3;
          WiFi.c   315    
          WiFi.c   316            Bdisp_AreaClr_VRAM(&clearBox);
    000011C2 64F3                   MOV         R15,R4
    000011C4 1F36                   MOV.L       R3,@(24,R15)
    000011C6 52F2                   MOV.L       @(8,R15),R2
    000011C8 1F27                   MOV.L       R2,@(28,R15)
    000011CA 53F1                   MOV.L       @(4,R15),R3
    000011CC 1F38                   MOV.L       R3,@(32,R15)
    000011CE 62F2                   MOV.L       @R15,R2
    000011D0 D30F                   MOV.L       L1381+42,R3; _Bdisp_AreaClr_VRAM
    000011D2 1F29                   MOV.L       R2,@(36,R15)
    000011D4 430B                   JSR         @R3
    000011D6 7418                   ADD         #24,R4
    000011D8              L1241:                            
          WiFi.c   317        }
          WiFi.c   318    }
    000011D8 7F28                   ADD         #40,R15
    000011DA 4F26                   LDS.L       @R15+,PR
    000011DC 6BF6                   MOV.L       @R15+,R11
    000011DE 6CF6                   MOV.L       @R15+,R12
    000011E0 6DF6                   MOV.L       @R15+,R13
    000011E2 000B                   RTS
    000011E4 6EF6                   MOV.L       @R15+,R14
    000011E6              L1381:                            
    000011E6 0000                   .DATA.W     0
    000011E8 <00000000>             .DATA.L     _Bdisp_AllClr_DDVRAM
    000011EC <00000000>             .DATA.L     L734
    000011F0 <00000000>             .DATA.L     _Bdisp_PutDisp_DD
    000011F4 <00000000>             .DATA.L     L572
    000011F8 <00000000>             .DATA.L     L482
    000011FC <00000000>             .DATA.L     _status
    00001200 <00000000>             .DATA.L     _memcmp
    00001204 <00000000>             .DATA.L     _shouldRequestNetInfo
    00001208 <00000000>             .DATA.L     _RTC_GetTicks
    0000120C <00000000>             .DATA.L     _Keyboard_ClrBuffer
    00001210 <00000000>             .DATA.L     _Bdisp_AreaClr_VRAM
    00001214 <00000000>             .DATA.L     _Bdisp_SetPoint_VRAM
    00001218 <00000000>             .DATA.L     __modls




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 11-Jan-2019 20:05:59  PAGE   49


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000121C <00000000>             .DATA.L     _network
    00001220 <00000000>             .DATA.L     __itod
    00001224 40590000               .DATA.L     H'40590000
    00001228 <00000000>             .DATA.L     __addd
    0000122C EB851EB8               .DATA.L     H'EB851EB8
    00001230 3FBEB851               .DATA.L     H'3FBEB851
    00001234 <00000000>             .DATA.L     __muld
    00001238 <00000000>             .DATA.L     __dtoi
    0000123C <00000000>             .DATA.L     _strlen
    00001240 <00000000>             .DATA.L     _locate
    00001244 <00000000>             .DATA.L     _Print
    00001248 <00000000>             .DATA.L     _Bdisp_PutDispArea_DD
    0000124C <00000000>             .DATA.L     _Bdisp_DrawLineVRAM
          WiFi.c   319    
          WiFi.c   320    void connectToNetwork() {    
    00001250              _connectToNetwork:               ; function: connectToNetwork
                                                           ; frame size=172
    00001250 2FE6                   MOV.L       R14,@-R15
    00001252 2FD6                   MOV.L       R13,@-R15
    00001254 2FC6                   MOV.L       R12,@-R15
          WiFi.c   321    
          WiFi.c   322        unsigned int key;
          WiFi.c   323        int counter = 0, lines = 0, lineBegin = 0, selection = 0, scroll = 0, lastTicks, a = 0, numChars = 0;
          WiFi.c   324        unsigned char text[22];
          WiFi.c   325            NetworkList* nets;
          WiFi.c   326            NetworkSelectionUI nsui;
          WiFi.c   327            int direction = 0;
    00001256 EC00                   MOV         #0,R12
          WiFi.c   328            unsigned char passwordBuf[65]; // WiFi passwords are at most 64 chars
          WiFi.c   329    
          WiFi.c   330        Serial_ClearReceiveBuffer();
    00001258 D323                   MOV.L       L1382+8,R3 ; _Serial_ClearReceiveBuffer
    0000125A 2FB6                   MOV.L       R11,@-R15
    0000125C 2FA6                   MOV.L       R10,@-R15
    0000125E 2F96                   MOV.L       R9,@-R15
    00001260 2F86                   MOV.L       R8,@-R15
    00001262 4F22                   STS.L       PR,@-R15
    00001264 903C                   MOV.W       L1382,R0   ; H'FF7C
    00001266 3F0C                   ADD         R0,R15
    00001268 430B                   JSR         @R3
    0000126A 6DC3                   MOV         R12,R13
          WiFi.c   331    
          WiFi.c   332        
          WiFi.c   333        lastTicks = RTC_GetTicks();
    0000126C D21F                   MOV.L       L1382+12,R2; _RTC_GetTicks
    0000126E 420B                   JSR         @R2
    00001270 0009                   NOP
          WiFi.c   334        counter = 0;
          WiFi.c   335            
          WiFi.c   336            nets = getAvailableNetworks();
    00001272 B9E0                   BSR         _getAvailableNetworks
    00001274 0009                   NOP
          WiFi.c   337    
          WiFi.c   338            Bdisp_AllClr_DDVRAM();
    00001276 D21E                   MOV.L       L1382+16,R2; _Bdisp_AllClr_DDVRAM
    00001278 420B                   JSR         @R2
    0000127A 6E03                   MOV         R0,R14




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 11-Jan-2019 20:05:59  PAGE   50


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          WiFi.c   339       
          WiFi.c   340            nsui = initNetworkSelectionUI(1, 2, 21, 7, nets);
    0000127C 2FE6                   MOV.L       R14,@-R15
    0000127E E707                   MOV         #7,R7
    00001280 E615                   MOV         #21,R6
    00001282 E502                   MOV         #2,R5
    00001284 E401                   MOV         #1,R4
    00001286 63F3                   MOV         R15,R3
    00001288 7350                   ADD         #80,R3
    0000128A BB78                   BSR         _initNetworkSelectionUI
    0000128C 2F36                   MOV.L       R3,@-R15
    0000128E 7F08                   ADD         #8,R15
    00001290 9827                   MOV.W       L1382+2,R8 ; H'7532
    00001292 6983                   MOV         R8,R9
    00001294 DA17                   MOV.L       L1382+20,R10; _Print
    00001296 7902                   ADD         #2,R9
    00001298 DB17                   MOV.L       L1382+24,R11; _locate
          WiFi.c   341    
          WiFi.c   342            while (1) {
    0000129A              L1243:                            
          WiFi.c   343                    Bdisp_AllClr_VRAM();
    0000129A D218                   MOV.L       L1382+28,R2; _Bdisp_AllClr_VRAM
    0000129C 420B                   JSR         @R2
    0000129E 0009                   NOP
          WiFi.c   344                    locate(1, 1);
    000012A0 E501                   MOV         #1,R5
    000012A2 4B0B                   JSR         @R11
    000012A4 6453                   MOV         R5,R4
          WiFi.c   345                    Print("Select Network:");
    000012A6 D416                   MOV.L       L1382+32,R4; L772
    000012A8 4A0B                   JSR         @R10
    000012AA 0009                   NOP
          WiFi.c   346                    drawNetworkSelectionUI(&nsui, direction);
    000012AC 65D3                   MOV         R13,R5
    000012AE 64F3                   MOV         R15,R4
    000012B0 BB84                   BSR         _drawNetworkSelectionUI
    000012B2 744C                   ADD         #76,R4
          WiFi.c   347                    GetKey(&key);
    000012B4 D213                   MOV.L       L1382+36,R2; _GetKey
    000012B6 420B                   JSR         @R2
    000012B8 64F3                   MOV         R15,R4
          WiFi.c   348    
          WiFi.c   349                    if (key == KEY_CTRL_UP) {
    000012BA 9313                   MOV.W       L1382+4,R3 ; H'7542
    000012BC 62F2                   MOV.L       @R15,R2
    000012BE 3230                   CMP/EQ      R3,R2
    000012C0 8B01                   BF          L1244
          WiFi.c   350                            direction = -1;
    000012C2 AFEA                   BRA         L1243
    000012C4 EDFF                   MOV         #-1,R13
    000012C6              L1244:                            
          WiFi.c   351                    }
          WiFi.c   352                    else if (key == KEY_CTRL_DOWN) {
    000012C6 910E                   MOV.W       L1382+6,R1 ; H'7547
    000012C8 62F2                   MOV.L       @R15,R2
    000012CA 3210                   CMP/EQ      R1,R2
    000012CC 8B01                   BF          L1246




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 11-Jan-2019 20:05:59  PAGE   51


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          WiFi.c   353                            direction = 1;
    000012CE AFE4                   BRA         L1243
    000012D0 ED01                   MOV         #1,R13
    000012D2              L1246:                            
          WiFi.c   354                    }
          WiFi.c   355                    else if (key == KEY_CTRL_EXIT) {
    000012D2 62F2                   MOV.L       @R15,R2
    000012D4 3280                   CMP/EQ      R8,R2
    000012D6 8B17                   BF          L1248
          WiFi.c   356                            freeNetList(nets);
    000012D8 B994                   BSR         _freeNetList
    000012DA 64E3                   MOV         R14,R4
          WiFi.c   357                            nets = NULL;
    000012DC AFDD                   BRA         L1243
    000012DE 6EC3                   MOV         R12,R14
    000012E0              L1382:                            
    000012E0 FF7C                   .DATA.W     H'FF7C
    000012E2 7532                   .DATA.W     H'7532
    000012E4 7542                   .DATA.W     H'7542
    000012E6 7547                   .DATA.W     H'7547
    000012E8 <00000000>             .DATA.L     _Serial_ClearReceiveBuffer
    000012EC <00000000>             .DATA.L     _RTC_GetTicks
    000012F0 <00000000>             .DATA.L     _Bdisp_AllClr_DDVRAM
    000012F4 <00000000>             .DATA.L     _Print
    000012F8 <00000000>             .DATA.L     _locate
    000012FC <00000000>             .DATA.L     _Bdisp_AllClr_VRAM
    00001300 <00000000>             .DATA.L     L772
    00001304 <00000000>             .DATA.L     _GetKey
    00001308              L1248:                            
          WiFi.c   358                            //return 0; DEBUG- wieder auskommentieren -> als Abbruch werten
          WiFi.c   359                    }
          WiFi.c   360                    else if (key == KEY_CTRL_EXE) {
    00001308 62F2                   MOV.L       @R15,R2
    0000130A 3290                   CMP/EQ      R9,R2
    0000130C 8BC5                   BF          L1243
          WiFi.c   361                            break;
          WiFi.c   362                    }
          WiFi.c   363            }
          WiFi.c   364    
          WiFi.c   365            freeNetList(nets);
    0000130E B979                   BSR         _freeNetList
    00001310 64E3                   MOV         R14,R4
          WiFi.c   366            nets = NULL;
          WiFi.c   367    
          WiFi.c   368            Bdisp_AllClr_DDVRAM();
    00001312 D232                   MOV.L       L1383+6,R2 ; _Bdisp_AllClr_DDVRAM
    00001314 420B                   JSR         @R2
    00001316 0009                   NOP
          WiFi.c   369    
          WiFi.c   370            memset(passwordBuf, 0, 65);
    00001318 D331                   MOV.L       L1383+10,R3; _memset
    0000131A 6EF3                   MOV         R15,R14
    0000131C 7E08                   ADD         #8,R14
    0000131E E641                   MOV         #65,R6
    00001320 E500                   MOV         #0,R5
    00001322 430B                   JSR         @R3
    00001324 64E3                   MOV         R14,R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 11-Jan-2019 20:05:59  PAGE   52


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001326 DD2F                   MOV.L       L1383+14,R13; _strlen
          WiFi.c   371            //Cursor_SetFlashOn(0);
          WiFi.c   372    
          WiFi.c   373            while (1) {
    00001328              L1253:                            
          WiFi.c   374                    int x = 0;
    00001328 1FC1                   MOV.L       R12,@(4,R15)
          WiFi.c   375    
          WiFi.c   376                    if (strlen(passwordBuf) > 20) {
    0000132A 4D0B                   JSR         @R13
    0000132C 64E3                   MOV         R14,R4
    0000132E E314                   MOV         #20,R3
    00001330 3036                   CMP/HI      R3,R0
    00001332 8B03                   BF          L1254
          WiFi.c   377                            x = strlen(passwordBuf) - 20;
    00001334 4D0B                   JSR         @R13
    00001336 64E3                   MOV         R14,R4
    00001338 70EC                   ADD         #-20,R0
    0000133A 1F01                   MOV.L       R0,@(4,R15)
    0000133C              L1254:                            
          WiFi.c   378                    }
          WiFi.c   379    
          WiFi.c   380                    Bdisp_AllClr_VRAM();
    0000133C D32A                   MOV.L       L1383+18,R3; _Bdisp_AllClr_VRAM
    0000133E 430B                   JSR         @R3
    00001340 0009                   NOP
          WiFi.c   381                    locate(1, 1);
    00001342 E501                   MOV         #1,R5
    00001344 4B0B                   JSR         @R11
    00001346 6453                   MOV         R5,R4
          WiFi.c   382                    Print("Password:");
    00001348 D428                   MOV.L       L1383+22,R4; L780
    0000134A 4A0B                   JSR         @R10
    0000134C 0009                   NOP
          WiFi.c   383                    locate(1, 3);
    0000134E E503                   MOV         #3,R5
    00001350 4B0B                   JSR         @R11
    00001352 E401                   MOV         #1,R4
          WiFi.c   384                    Print(&passwordBuf[x]);
    00001354 54F1                   MOV.L       @(4,R15),R4
    00001356 4A0B                   JSR         @R10
    00001358 34EC                   ADD         R14,R4
          WiFi.c   385                    locate(strlen(passwordBuf) + 1, 3);
    0000135A 4D0B                   JSR         @R13
    0000135C 64E3                   MOV         R14,R4
    0000135E 6403                   MOV         R0,R4
    00001360 7401                   ADD         #1,R4
    00001362 4B0B                   JSR         @R11
    00001364 E503                   MOV         #3,R5
          WiFi.c   386    
          WiFi.c   387                    GetKey(&key);
    00001366 D322                   MOV.L       L1383+26,R3; _GetKey
    00001368 430B                   JSR         @R3
    0000136A 64F3                   MOV         R15,R4
          WiFi.c   388    
          WiFi.c   389                    if (key == KEY_CTRL_DEL && strlen(passwordBuf) >= 1) {
    0000136C 9233                   MOV.W       L1383,R2   ; H'7549




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 11-Jan-2019 20:05:59  PAGE   53


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000136E 63F2                   MOV.L       @R15,R3
    00001370 3320                   CMP/EQ      R2,R3
    00001372 8B09                   BF          L1255
    00001374 4D0B                   JSR         @R13
    00001376 64E3                   MOV         R14,R4
    00001378 E301                   MOV         #1,R3
    0000137A 3032                   CMP/HS      R3,R0
    0000137C 8B04                   BF          L1255
          WiFi.c   390                            passwordBuf[strlen(passwordBuf) - 1] = 0;
    0000137E 4D0B                   JSR         @R13
    00001380 64E3                   MOV         R14,R4
    00001382 30EC                   ADD         R14,R0
    00001384 AFD0                   BRA         L1253
    00001386 20C4                   MOV.B       R12,@-R0
    00001388              L1255:                            
          WiFi.c   391                    }
          WiFi.c   392                    else if (key == KEY_CTRL_EXIT) {
    00001388 62F2                   MOV.L       @R15,R2
    0000138A 3280                   CMP/EQ      R8,R2
    0000138C 89CC                   BT          L1253
          WiFi.c   393                            //return 0; DEBUG- wieder auskommentieren -> als Abbruch werten
          WiFi.c   394                    }
          WiFi.c   395                    else if (key == KEY_CTRL_EXE) {
    0000138E 63F2                   MOV.L       @R15,R3
    00001390 3390                   CMP/EQ      R9,R3
    00001392 890F                   BT          L1260
          WiFi.c   396                            break;
          WiFi.c   397                    }
          WiFi.c   398                    else if (key < 128 && strlen(passwordBuf) < 64) {
    00001394 9120                   MOV.W       L1383+2,R1 ; H'0080
    00001396 62F2                   MOV.L       @R15,R2
    00001398 3212                   CMP/HS      R1,R2
    0000139A 89C5                   BT          L1253
    0000139C D211                   MOV.L       L1383+14,R2; _strlen
    0000139E 64F3                   MOV         R15,R4
    000013A0 420B                   JSR         @R2
    000013A2 7408                   ADD         #8,R4
    000013A4 E340                   MOV         #64,R3
    000013A6 3032                   CMP/HS      R3,R0
    000013A8 89BE                   BT          L1253
          WiFi.c   399                            passwordBuf[strlen(passwordBuf)] = (unsigned char)key;
    000013AA 4D0B                   JSR         @R13
    000013AC 64E3                   MOV         R14,R4
    000013AE 63F2                   MOV.L       @R15,R3
    000013B0 AFBA                   BRA         L1253
    000013B2 0E34                   MOV.B       R3,@(R0,R14)
    000013B4              L1260:                            
          WiFi.c   400                    }
          WiFi.c   401            }
          WiFi.c   402    
          WiFi.c   403            connect(nsui.selection, passwordBuf);
    000013B4 65E3                   MOV         R14,R5
    000013B6 E05C                   MOV         #92,R0
    000013B8 B9C3                   BSR         _connect
    000013BA 04FE                   MOV.L       @(R0,R15),R4
          WiFi.c   404    
          WiFi.c   405        shouldRequestNetInfo=false;




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 11-Jan-2019 20:05:59  PAGE   54


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000013BC D20D                   MOV.L       L1383+30,R2; _shouldRequestNetInfo
    000013BE 22C2                   MOV.L       R12,@R2
          WiFi.c   406    }
    000013C0 910B                   MOV.W       L1383+4,R1 ; H'0084
    000013C2 3F1C                   ADD         R1,R15
    000013C4 4F26                   LDS.L       @R15+,PR
    000013C6 68F6                   MOV.L       @R15+,R8
    000013C8 69F6                   MOV.L       @R15+,R9
    000013CA 6AF6                   MOV.L       @R15+,R10
    000013CC 6BF6                   MOV.L       @R15+,R11
    000013CE 6CF6                   MOV.L       @R15+,R12
    000013D0 6DF6                   MOV.L       @R15+,R13
    000013D2 000B                   RTS
    000013D4 6EF6                   MOV.L       @R15+,R14
    000013D6              L1383:                            
    000013D6 7549                   .DATA.W     H'7549
    000013D8 0080                   .DATA.W     H'0080
    000013DA 0084                   .DATA.W     H'0084
    000013DC <00000000>             .DATA.L     _Bdisp_AllClr_DDVRAM
    000013E0 <00000000>             .DATA.L     _memset
    000013E4 <00000000>             .DATA.L     _strlen
    000013E8 <00000000>             .DATA.L     _Bdisp_AllClr_VRAM
    000013EC <00000000>             .DATA.L     L780
    000013F0 <00000000>             .DATA.L     _GetKey
    000013F4 <00000000>             .DATA.L     _shouldRequestNetInfo
          WiFi.c   407    
          WiFi.c   408    void browseFiles() {
    000013F8              _browseFiles:                    ; function: browseFiles
                                                           ; frame size=48
    000013F8 2FE6                   MOV.L       R14,@-R15
    000013FA 2FD6                   MOV.L       R13,@-R15
    000013FC 2FC6                   MOV.L       R12,@-R15
    000013FE 2FB6                   MOV.L       R11,@-R15
    00001400 4F22                   STS.L       PR,@-R15
    00001402 7FE4                   ADD         #-28,R15
          WiFi.c   409        unsigned int key;
          WiFi.c   410        int counter = 0, lines = 0, lineBegin = 0, selection = 0, scroll = 0, i;
          WiFi.c   411        unsigned char text[22];
          WiFi.c   412    
          WiFi.c   413            unsigned char* result;
          WiFi.c   414            
          WiFi.c   415            Bdisp_AllClr_DDVRAM();
    00001404 D338                   MOV.L       L1384+4,R3 ; _Bdisp_AllClr_DDVRAM
    00001406 430B                   JSR         @R3
    00001408 0009                   NOP
          WiFi.c   416            locate(21,1);
    0000140A E501                   MOV         #1,R5
    0000140C DB37                   MOV.L       L1384+8,R11; _locate
    0000140E 4B0B                   JSR         @R11
    00001410 E415                   MOV         #21,R4
          WiFi.c   417            Print(loupe);
    00001412 D437                   MOV.L       L1384+12,R4; _loupe
    00001414 D237                   MOV.L       L1384+16,R2; _Print
    00001416 420B                   JSR         @R2
    00001418 0009                   NOP
          WiFi.c   418            locate(1,1);
    0000141A E501                   MOV         #1,R5




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 11-Jan-2019 20:05:59  PAGE   55


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000141C 4B0B                   JSR         @R11
    0000141E 6453                   MOV         R5,R4
          WiFi.c   419            Bdisp_DrawLineVRAM(0,7,127,7);
    00001420 D335                   MOV.L       L1384+20,R3; _Bdisp_DrawLineVRAM
    00001422 E707                   MOV         #7,R7
    00001424 E67F                   MOV         #127,R6
    00001426 6573                   MOV         R7,R5
    00001428 430B                   JSR         @R3
    0000142A E400                   MOV         #0,R4
          WiFi.c   420            Bdisp_PutDisp_DD;
          WiFi.c   421            readString(1,1,true);
    0000142C E601                   MOV         #1,R6
    0000142E 6563                   MOV         R6,R5
    00001430 B2D6                   BSR         _readString
    00001432 6463                   MOV         R6,R4
          WiFi.c   422            
          WiFi.c   423            memcpy(text,buf,strlen(buf)+1);
    00001434 DD31                   MOV.L       L1384+24,R13; _strlen
    00001436 6CF3                   MOV         R15,R12
    00001438 DE31                   MOV.L       L1384+28,R14; _buf
    0000143A 7C04                   ADD         #4,R12
    0000143C 4D0B                   JSR         @R13
    0000143E 64E3                   MOV         R14,R4
    00001440 D330                   MOV.L       L1384+32,R3; _memcpy
    00001442 6603                   MOV         R0,R6
    00001444 7601                   ADD         #1,R6
    00001446 65E3                   MOV         R14,R5
    00001448 430B                   JSR         @R3
    0000144A 64C3                   MOV         R12,R4
          WiFi.c   424            
          WiFi.c   425            Serial_ClearReceiveBuffer();
    0000144C D22E                   MOV.L       L1384+36,R2; _Serial_ClearReceiveBuffer
    0000144E 420B                   JSR         @R2
    00001450 0009                   NOP
          WiFi.c   426        Serial_ClearTransmitBuffer();
    00001452 D32E                   MOV.L       L1384+40,R3; _Serial_ClearTransmitBuffer
    00001454 430B                   JSR         @R3
    00001456 0009                   NOP
          WiFi.c   427            
          WiFi.c   428            sendCommand("SEARCH");
    00001458 D42D                   MOV.L       L1384+44,R4; L795
    0000145A D22E                   MOV.L       L1384+48,R2; _sendCommand
    0000145C 420B                   JSR         @R2
    0000145E 0009                   NOP
          WiFi.c   429            receiveStatus();                                        
    00001460 D32D                   MOV.L       L1384+52,R3; _receiveStatus
    00001462 430B                   JSR         @R3
    00001464 0009                   NOP
          WiFi.c   430            if (memcmp(status,"OK",2)!=0){
    00001466 D52D                   MOV.L       L1384+56,R5; L482
    00001468 D42D                   MOV.L       L1384+60,R4; _status
    0000146A D22E                   MOV.L       L1384+64,R2; _memcmp
    0000146C 420B                   JSR         @R2
    0000146E E602                   MOV         #2,R6
    00001470 2008                   TST         R0,R0
    00001472 8B30                   BF          L1264
          WiFi.c   431                    return;




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 11-Jan-2019 20:05:59  PAGE   56


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          WiFi.c   432            }           
          WiFi.c   433            Serial_BufferedTransmitNBytes(text,strlen(text)+1);
    00001474 4D0B                   JSR         @R13
    00001476 64C3                   MOV         R12,R4
    00001478 D22B                   MOV.L       L1384+68,R2; _Serial_BufferedTransmitNBytes
    0000147A 6503                   MOV         R0,R5
    0000147C 7501                   ADD         #1,R5
    0000147E 420B                   JSR         @R2
    00001480 64C3                   MOV         R12,R4
          WiFi.c   434            
          WiFi.c   435        //Bdisp_AllClr_DDVRAM();
          WiFi.c   436    
          WiFi.c   437        serialReadStringTimeout(30000,buf);
    00001482 942F                   MOV.W       L1384,R4   ; H'7530
    00001484 B34C                   BSR         _serialReadStringTimeout
    00001486 65E3                   MOV         R14,R5
          WiFi.c   438            result=(unsigned char*)malloc(strlen(buf)+1);
    00001488 4D0B                   JSR         @R13
    0000148A 64E3                   MOV         R14,R4
    0000148C D227                   MOV.L       L1384+72,R2; _malloc
    0000148E 6403                   MOV         R0,R4
    00001490 420B                   JSR         @R2
    00001492 7401                   ADD         #1,R4
    00001494 6C03                   MOV         R0,R12
          WiFi.c   439            memcpy(result,buf,strlen(buf)+1);
    00001496 4D0B                   JSR         @R13
    00001498 64E3                   MOV         R14,R4
    0000149A 6603                   MOV         R0,R6
    0000149C D319                   MOV.L       L1384+32,R3; _memcpy
    0000149E 65E3                   MOV         R14,R5
    000014A0 7601                   ADD         #1,R6
    000014A2 430B                   JSR         @R3
    000014A4 64C3                   MOV         R12,R4
          WiFi.c   440            
          WiFi.c   441            if(strlen(buf)==0){
    000014A6 4D0B                   JSR         @R13
    000014A8 64E3                   MOV         R14,R4
    000014AA 2008                   TST         R0,R0
    000014AC 8B11                   BF          L1265
          WiFi.c   442                    Bdisp_AllClr_DDVRAM();
    000014AE D30E                   MOV.L       L1384+4,R3 ; _Bdisp_AllClr_DDVRAM
    000014B0 430B                   JSR         @R3
    000014B2 0009                   NOP
          WiFi.c   443                    locate(0,3);
    000014B4 E503                   MOV         #3,R5
    000014B6 4B0B                   JSR         @R11
    000014B8 E400                   MOV         #0,R4
          WiFi.c   444                    Print((unsigned char*)"KEIN ERGEBNIS GEFUNDEN");
    000014BA D41D                   MOV.L       L1384+76,R4; L798
    000014BC D20D                   MOV.L       L1384+16,R2; _Print
    000014BE 420B                   JSR         @R2
    000014C0 0009                   NOP
          WiFi.c   445                    Bdisp_PutDisp_DD();
    000014C2 D31C                   MOV.L       L1384+80,R3; _Bdisp_PutDisp_DD
    000014C4 430B                   JSR         @R3
    000014C6 0009                   NOP
          WiFi.c   446                    GetKey(&key);




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 11-Jan-2019 20:05:59  PAGE   57


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000014C8 D21B                   MOV.L       L1384+84,R2; _GetKey
    000014CA 420B                   JSR         @R2
    000014CC 64F3                   MOV         R15,R4
          WiFi.c   447                    return;
    000014CE A002                   BRA         L1264
    000014D0 0009                   NOP
    000014D2              L1265:                            
          WiFi.c   448            }
          WiFi.c   449            drawBrowseResults(result);
    000014D2 B033                   BSR         _drawBrowseResults
    000014D4 64C3                   MOV         R12,R4
          WiFi.c   450    }
    000014D6              L1264:                            
    000014D6 7F1C                   ADD         #28,R15
    000014D8 4F26                   LDS.L       @R15+,PR
    000014DA 6BF6                   MOV.L       @R15+,R11
    000014DC 6CF6                   MOV.L       @R15+,R12
    000014DE 6DF6                   MOV.L       @R15+,R13
    000014E0 000B                   RTS
    000014E2 6EF6                   MOV.L       @R15+,R14
    000014E4              L1384:                            
    000014E4 7530                   .DATA.W     H'7530
    000014E6 0000                   .DATA.W     0
    000014E8 <00000000>             .DATA.L     _Bdisp_AllClr_DDVRAM
    000014EC <00000000>             .DATA.L     _locate
    000014F0 <00000000>             .DATA.L     _loupe
    000014F4 <00000000>             .DATA.L     _Print
    000014F8 <00000000>             .DATA.L     _Bdisp_DrawLineVRAM
    000014FC <00000000>             .DATA.L     _strlen
    00001500 <00000000>             .DATA.L     _buf
    00001504 <00000000>             .DATA.L     _memcpy
    00001508 <00000000>             .DATA.L     _Serial_ClearReceiveBuffer
    0000150C <00000000>             .DATA.L     _Serial_ClearTransmitBuffer
    00001510 <00000000>             .DATA.L     L795
    00001514 <00000000>             .DATA.L     _sendCommand
    00001518 <00000000>             .DATA.L     _receiveStatus
    0000151C <00000000>             .DATA.L     L482
    00001520 <00000000>             .DATA.L     _status
    00001524 <00000000>             .DATA.L     _memcmp
    00001528 <00000000>             .DATA.L     _Serial_BufferedTransmitNBytes
    0000152C <00000000>             .DATA.L     _malloc
    00001530 <00000000>             .DATA.L     L798
    00001534 <00000000>             .DATA.L     _Bdisp_PutDisp_DD
    00001538 <00000000>             .DATA.L     _GetKey
          WiFi.c   451    
          WiFi.c   452    void drawBrowseResults(unsigned char* results) {
    0000153C              _drawBrowseResults:              ; function: drawBrowseResults
                                                           ; frame size=88
    0000153C 2FE6                   MOV.L       R14,@-R15
          WiFi.c   453            int counter = 0, lines = 0, lineBegin = 0, selection = 0, scroll = 0, i;
    0000153E EE00                   MOV         #0,R14
          WiFi.c   454            unsigned char text[22];
          WiFi.c   455            unsigned int key;
          WiFi.c   456            
          WiFi.c   457            unsigned int dl=0;
          WiFi.c   458    
          WiFi.c   459            Bdisp_AllClr_DDVRAM();




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 11-Jan-2019 20:05:59  PAGE   58


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001540 D345                   MOV.L       L1385+4,R3 ; _Bdisp_AllClr_DDVRAM
    00001542 2FD6                   MOV.L       R13,@-R15
    00001544 2FC6                   MOV.L       R12,@-R15
    00001546 6DE3                   MOV         R14,R13
    00001548 2FB6                   MOV.L       R11,@-R15
    0000154A 2FA6                   MOV.L       R10,@-R15
    0000154C 2F96                   MOV.L       R9,@-R15
    0000154E 2F86                   MOV.L       R8,@-R15
    00001550 4F22                   STS.L       PR,@-R15
    00001552 7FC8                   ADD         #-56,R15
    00001554 1F41                   MOV.L       R4,@(4,R15)
    00001556 430B                   JSR         @R3
    00001558 6CE3                   MOV         R14,R12
          WiFi.c   460            locate(21, 1);
    0000155A E501                   MOV         #1,R5
    0000155C D23F                   MOV.L       L1385+8,R2 ; _locate
    0000155E 420B                   JSR         @R2
    00001560 E415                   MOV         #21,R4
          WiFi.c   461            Print(loupe);
    00001562 D43F                   MOV.L       L1385+12,R4; _loupe
    00001564 D33F                   MOV.L       L1385+16,R3; _Print
    00001566 430B                   JSR         @R3
    00001568 0009                   NOP
          WiFi.c   462            locate(1, 1);
    0000156A E501                   MOV         #1,R5
    0000156C D23B                   MOV.L       L1385+8,R2 ; _locate
    0000156E 420B                   JSR         @R2
    00001570 6453                   MOV         R5,R4
          WiFi.c   463            Bdisp_DrawLineVRAM(0, 7, 127, 7);
    00001572 E707                   MOV         #7,R7
    00001574 D33C                   MOV.L       L1385+20,R3; _Bdisp_DrawLineVRAM
    00001576 E67F                   MOV         #127,R6
    00001578 6573                   MOV         R7,R5
    0000157A 430B                   JSR         @R3
    0000157C 64C3                   MOV         R12,R4
    0000157E 6AF3                   MOV         R15,R10
    00001580 7A20                   ADD         #32,R10
    00001582 62A3                   MOV         R10,R2
    00001584 1F22                   MOV.L       R2,@(8,R15)
          WiFi.c   464            Bdisp_PutDisp_DD;
          WiFi.c   465            
          WiFi.c   466            do {
    00001586              L1266:                            
          WiFi.c   467                    DISPBOX listArea;
          WiFi.c   468                    listArea.left = 0;
          WiFi.c   469                    listArea.top = 8;
    00001586 E308                   MOV         #8,R3
    00001588 1FE4                   MOV.L       R14,@(16,R15)
          WiFi.c   470                    listArea.right = 127;
    0000158A E27F                   MOV         #127,R2
    0000158C 1F35                   MOV.L       R3,@(20,R15)
          WiFi.c   471                    listArea.bottom = 63;
          WiFi.c   472    
          WiFi.c   473                    Bdisp_AreaClr_VRAM(&listArea);
    0000158E 64F3                   MOV         R15,R4
    00001590 1F26                   MOV.L       R2,@(24,R15)
    00001592 E33F                   MOV         #63,R3




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 11-Jan-2019 20:05:59  PAGE   59


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001594 1F37                   MOV.L       R3,@(28,R15)
    00001596 D335                   MOV.L       L1385+24,R3; _Bdisp_AreaClr_VRAM
    00001598 430B                   JSR         @R3
    0000159A 7410                   ADD         #16,R4
          WiFi.c   474    
          WiFi.c   475                    for (counter = 0, lines = 0, lineBegin = 0; results[counter] != 0; counter = counter + 1) 
                         +{
    0000159C 6BE3                   MOV         R14,R11
    0000159E 69E3                   MOV         R14,R9
    000015A0 68E3                   MOV         R14,R8
    000015A2 62C3                   MOV         R12,R2
    000015A4 7207                   ADD         #7,R2
    000015A6 A035                   BRA         L1267
    000015A8 1F23                   MOV.L       R2,@(12,R15)
    000015AA              L1268:                            
          WiFi.c   476                            if (results[counter] == '\n') {
    000015AA 50F1                   MOV.L       @(4,R15),R0
    000015AC 03BC                   MOV.B       @(R0,R11),R3
    000015AE 603C                   EXTU.B      R3,R0
    000015B0 880A                   CMP/EQ      #10,R0
    000015B2 8B2E                   BF          L1269
          WiFi.c   477                                    lines = lines + 1;
    000015B4 7901                   ADD         #1,R9
          WiFi.c   478    
          WiFi.c   479                                    if (lines > scroll && lines <= scroll + 7) {
    000015B6 39C7                   CMP/GT      R12,R9
    000015B8 8B29                   BF          L1270
    000015BA 53F3                   MOV.L       @(12,R15),R3
    000015BC 3937                   CMP/GT      R3,R9
    000015BE 8926                   BT          L1270
          WiFi.c   480                                            memset(text, 0, sizeof text);
    000015C0 D32B                   MOV.L       L1385+28,R3; _memset
    000015C2 E616                   MOV         #22,R6
    000015C4 E500                   MOV         #0,R5
    000015C6 430B                   JSR         @R3
    000015C8 64A3                   MOV         R10,R4
          WiFi.c   481                                            memcpy(text, &results[lineBegin], counter - lineBegin);
    000015CA 66B3                   MOV         R11,R6
    000015CC 55F1                   MOV.L       @(4,R15),R5
    000015CE 3688                   SUB         R8,R6
    000015D0 D328                   MOV.L       L1385+32,R3; _memcpy
    000015D2 358C                   ADD         R8,R5
    000015D4 430B                   JSR         @R3
    000015D6 64A3                   MOV         R10,R4
    000015D8 54F2                   MOV.L       @(8,R15),R4
    000015DA 67B3                   MOV         R11,R7
          WiFi.c   482    
          WiFi.c   483                                            for (i = 0; i < counter - lineBegin; i = i + 1) {
    000015DC 65E3                   MOV         R14,R5
    000015DE 3788                   SUB         R8,R7
    000015E0 4715                   CMP/PL      R7
    000015E2 8F0B                   BF/S        L1271
    000015E4 6643                   MOV         R4,R6
    000015E6              L1272:                            
          WiFi.c   484                                                    if (text[i] == '\t') {
    000015E6 6060                   MOV.B       @R6,R0
    000015E8 600C                   EXTU.B      R0,R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 11-Jan-2019 20:05:59  PAGE   60


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000015EA 8809                   CMP/EQ      #9,R0
    000015EC 8F02                   BF/S        L1273
    000015EE 7501                   ADD         #1,R5
          WiFi.c   485                                                            text[i] = ' ';
    000015F0 E220                   MOV         #32,R2
    000015F2 2420                   MOV.B       R2,@R4
    000015F4              L1273:                            
    000015F4 7401                   ADD         #1,R4
    000015F6 3573                   CMP/GE      R7,R5
    000015F8 8FF5                   BF/S        L1272
    000015FA 7601                   ADD         #1,R6
    000015FC              L1271:                            
          WiFi.c   486                                                    }
          WiFi.c   487                                            }
          WiFi.c   488    
          WiFi.c   489                                            locate(1, 1 + lines - scroll);
    000015FC D317                   MOV.L       L1385+8,R3 ; _locate
    000015FE 6593                   MOV         R9,R5
    00001600 35C8                   SUB         R12,R5
    00001602 7501                   ADD         #1,R5
    00001604 430B                   JSR         @R3
    00001606 E401                   MOV         #1,R4
          WiFi.c   490                                            Print(text);
    00001608 D216                   MOV.L       L1385+16,R2; _Print
    0000160A 420B                   JSR         @R2
    0000160C 64A3                   MOV         R10,R4
    0000160E              L1270:                            
          WiFi.c   491                                    }
          WiFi.c   492    
          WiFi.c   493                                    lineBegin = counter + 1;
    0000160E 68B3                   MOV         R11,R8
    00001610 7801                   ADD         #1,R8
    00001612              L1269:                            
    00001612 7B01                   ADD         #1,R11
    00001614              L1267:                            
    00001614 50F1                   MOV.L       @(4,R15),R0
    00001616 03BC                   MOV.B       @(R0,R11),R3
    00001618 633C                   EXTU.B      R3,R3
    0000161A 2338                   TST         R3,R3
    0000161C 8BC5                   BF          L1268
          WiFi.c   494                            }
          WiFi.c   495                    }
          WiFi.c   496    
          WiFi.c   497                    Bdisp_AreaReverseVRAM(0, 8 * (selection - scroll + 1), 127, 8 * (selection - scroll + 1) +
                         + 7);
    0000161E 6BD3                   MOV         R13,R11
    00001620 D315                   MOV.L       L1385+36,R3; _Bdisp_AreaReverseVRAM
    00001622 E67F                   MOV         #127,R6
    00001624 3BC8                   SUB         R12,R11
    00001626 7B01                   ADD         #1,R11
    00001628 4B08                   SHLL2       R11
    0000162A 4B00                   SHLL        R11
    0000162C 67B3                   MOV         R11,R7
    0000162E 7707                   ADD         #7,R7
    00001630 65B3                   MOV         R11,R5
    00001632 430B                   JSR         @R3
    00001634 E400                   MOV         #0,R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 11-Jan-2019 20:05:59  PAGE   61


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          WiFi.c   498    
          WiFi.c   499                    GetKey(&key);
    00001636 D211                   MOV.L       L1385+40,R2; _GetKey
    00001638 420B                   JSR         @R2
    0000163A 64F3                   MOV         R15,R4
          WiFi.c   500    
          WiFi.c   501                    if (key == 30018) {
    0000163C 930A                   MOV.W       L1385,R3   ; H'7542
    0000163E 62F2                   MOV.L       @R15,R2
    00001640 3230                   CMP/EQ      R3,R2
    00001642 8B01                   BF          L1274
          WiFi.c   502                            selection = selection - 1;
    00001644 A028                   BRA         L1275
    00001646 7DFF                   ADD         #-1,R13
    00001648              L1274:                            
          WiFi.c   503                    }
          WiFi.c   504                    else if (key == 30023) {
    00001648 9105                   MOV.W       L1385+2,R1 ; H'7547
    0000164A 62F2                   MOV.L       @R15,R2
    0000164C 3210                   CMP/EQ      R1,R2
    0000164E 8B17                   BF          L1276
          WiFi.c   505                            selection = selection + 1;
    00001650 A022                   BRA         L1275
    00001652 7D01                   ADD         #1,R13
    00001654              L1385:                            
    00001654 7542                   .DATA.W     H'7542
    00001656 7547                   .DATA.W     H'7547
    00001658 <00000000>             .DATA.L     _Bdisp_AllClr_DDVRAM
    0000165C <00000000>             .DATA.L     _locate
    00001660 <00000000>             .DATA.L     _loupe
    00001664 <00000000>             .DATA.L     _Print
    00001668 <00000000>             .DATA.L     _Bdisp_DrawLineVRAM
    0000166C <00000000>             .DATA.L     _Bdisp_AreaClr_VRAM
    00001670 <00000000>             .DATA.L     _memset
    00001674 <00000000>             .DATA.L     _memcpy
    00001678 <00000000>             .DATA.L     _Bdisp_AreaReverseVRAM
    0000167C <00000000>             .DATA.L     _GetKey
    00001680              L1276:                            
          WiFi.c   506                    }
          WiFi.c   507                    else if (key == 30009) {
    00001680 9267                   MOV.W       L1386,R2   ; H'7539
    00001682 60F2                   MOV.L       @R15,R0
    00001684 3020                   CMP/EQ      R2,R0
    00001686 8B03                   BF          L1278
          WiFi.c   508                            browseFiles();
    00001688 BEB6                   BSR         _browseFiles
    0000168A 0009                   NOP
          WiFi.c   509                            return;
    0000168C A057                   BRA         L1279
    0000168E 0009                   NOP
    00001690              L1278:                            
          WiFi.c   510                    }
          WiFi.c   511                    else if (key == 30002) {
    00001690 9360                   MOV.W       L1386+2,R3 ; H'7532
    00001692 60F2                   MOV.L       @R15,R0
    00001694 3030                   CMP/EQ      R3,R0
    00001696 8952                   BT          L1279




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 11-Jan-2019 20:05:59  PAGE   62


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001698              L1275:                            
          WiFi.c   512                            return;
          WiFi.c   513                    }
          WiFi.c   514    
          WiFi.c   515                    if (selection < 0) {
    00001698 4D11                   CMP/PZ      R13
    0000169A 8901                   BT          L1282
          WiFi.c   516                            selection = 0;
    0000169C A00E                   BRA         L1283
    0000169E 6DE3                   MOV         R14,R13
    000016A0              L1282:                            
          WiFi.c   517                    }
          WiFi.c   518                    else if (selection >= lines) {
    000016A0 3D93                   CMP/GE      R9,R13
    000016A2 8B02                   BF          L1284
          WiFi.c   519                            selection = lines - 1;
    000016A4 6D93                   MOV         R9,R13
    000016A6 A009                   BRA         L1283
    000016A8 7DFF                   ADD         #-1,R13
    000016AA              L1284:                            
          WiFi.c   520                    }
          WiFi.c   521                    else {
          WiFi.c   522                            if (selection < scroll) {
    000016AA 3DC3                   CMP/GE      R12,R13
    000016AC 8901                   BT          L1286
          WiFi.c   523                                    scroll = scroll - 1;
    000016AE A005                   BRA         L1283
    000016B0 7CFF                   ADD         #-1,R12
    000016B2              L1286:                            
          WiFi.c   524                            }
          WiFi.c   525                            else if (selection >= 8 + scroll) {
    000016B2 63C3                   MOV         R12,R3
    000016B4 7308                   ADD         #8,R3
    000016B6 3D33                   CMP/GE      R3,R13
    000016B8 8B00                   BF          L1283
          WiFi.c   526                                    scroll = scroll + 1;
    000016BA 7C01                   ADD         #1,R12
    000016BC              L1283:                            
          WiFi.c   527                            }
          WiFi.c   528                    }
          WiFi.c   529            } while (key != 30004);
    000016BC 934B                   MOV.W       L1386+4,R3 ; H'7534
    000016BE 62F2                   MOV.L       @R15,R2
    000016C0 3230                   CMP/EQ      R3,R2
    000016C2 8901                   BT          L1387
    000016C4 AF5F                   BRA         L1266
    000016C6 0009                   NOP
    000016C8              L1387:                            
          WiFi.c   530    
          WiFi.c   531            for (counter = 0, lines = 0, lineBegin = 0; buf[counter] != 0; counter = counter + 1) {
    000016C8 9846                   MOV.W       L1386+6,R8 ; H'01F4
    000016CA 6BE3                   MOV         R14,R11
    000016CC DC23                   MOV.L       L1386+10,R12; _buf
    000016CE 66E3                   MOV         R14,R6
    000016D0 A029                   BRA         L1289
    000016D2 69E3                   MOV         R14,R9
    000016D4              L1290:                            




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 11-Jan-2019 20:05:59  PAGE   63


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000016D4 65B3                   MOV         R11,R5
    000016D6 35CC                   ADD         R12,R5
    000016D8 6050                   MOV.B       @R5,R0
    000016DA 64B3                   MOV         R11,R4
    000016DC 600C                   EXTU.B      R0,R0
    000016DE 880A                   CMP/EQ      #10,R0
    000016E0 8F02                   BF/S        L1291
    000016E2 7401                   ADD         #1,R4
          WiFi.c   532                    if (buf[counter] == '\n') {
          WiFi.c   533                            lines = lines + 1;
    000016E4 7601                   ADD         #1,R6
          WiFi.c   534                            lineBegin = counter + 1;
    000016E6 6943                   MOV         R4,R9
    000016E8              L1291:                            
          WiFi.c   535                    }
          WiFi.c   536    
          WiFi.c   537                    if (lines >= selection && buf[counter] == '\t') {
    000016E8 36D3                   CMP/GE      R13,R6
    000016EA 8B1B                   BF          L1292
    000016EC 6050                   MOV.B       @R5,R0
    000016EE 600C                   EXTU.B      R0,R0
    000016F0 8809                   CMP/EQ      #9,R0
    000016F2 8B17                   BF          L1292
          WiFi.c   538                            memset(text, 0, sizeof text);
    000016F4 D21A                   MOV.L       L1386+14,R2; _memset
    000016F6 E616                   MOV         #22,R6
    000016F8 E500                   MOV         #0,R5
    000016FA 420B                   JSR         @R2
    000016FC 64A3                   MOV         R10,R4
          WiFi.c   539                            memcpy(text, &buf[lineBegin], counter - lineBegin);
    000016FE 66B3                   MOV         R11,R6
    00001700 D318                   MOV.L       L1386+18,R3; _memcpy
    00001702 6593                   MOV         R9,R5
    00001704 3698                   SUB         R9,R6
    00001706 35CC                   ADD         R12,R5
    00001708 430B                   JSR         @R3
    0000170A 64A3                   MOV         R10,R4
          WiFi.c   540    
          WiFi.c   541                            memset(buf, 0, sizeof buf);
    0000170C D214                   MOV.L       L1386+14,R2; _memset
    0000170E 6683                   MOV         R8,R6
    00001710 E500                   MOV         #0,R5
    00001712 420B                   JSR         @R2
    00001714 64C3                   MOV         R12,R4
          WiFi.c   542                            memcpy(buf, text, sizeof text);
    00001716 E616                   MOV         #22,R6
    00001718 D312                   MOV.L       L1386+18,R3; _memcpy
    0000171A 65A3                   MOV         R10,R5
    0000171C 430B                   JSR         @R3
    0000171E 64C3                   MOV         R12,R4
          WiFi.c   543    
          WiFi.c   544                            break;
    00001720 A006                   BRA         L1293
    00001722 0009                   NOP
    00001724              L1292:                            
    00001724 6B43                   MOV         R4,R11
    00001726              L1289:                            




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 11-Jan-2019 20:05:59  PAGE   64


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001726 60B3                   MOV         R11,R0
    00001728 03CC                   MOV.B       @(R0,R12),R3
    0000172A 633C                   EXTU.B      R3,R3
    0000172C 2338                   TST         R3,R3
    0000172E 8BD1                   BF          L1290
    00001730              L1293:                            
          WiFi.c   545                    }
          WiFi.c   546            }
          WiFi.c   547            
          WiFi.c   548            dl=showAppInfo();
    00001730 B01A                   BSR         _showAppInfo
    00001732 0009                   NOP
    00001734 6403                   MOV         R0,R4
          WiFi.c   549            if(dl==0){
    00001736 2448                   TST         R4,R4
    00001738 8B01                   BF          L1279
          WiFi.c   550                    drawBrowseResults(results);
    0000173A BEFF                   BSR         _drawBrowseResults
    0000173C 54F1                   MOV.L       @(4,R15),R4
          WiFi.c   551            }
          WiFi.c   552            return;
          WiFi.c   553            //downloadFile();
          WiFi.c   554    }
    0000173E              L1279:                            
    0000173E 7F38                   ADD         #56,R15
    00001740 4F26                   LDS.L       @R15+,PR
    00001742 68F6                   MOV.L       @R15+,R8
    00001744 69F6                   MOV.L       @R15+,R9
    00001746 6AF6                   MOV.L       @R15+,R10
    00001748 6BF6                   MOV.L       @R15+,R11
    0000174A 6CF6                   MOV.L       @R15+,R12
    0000174C 6DF6                   MOV.L       @R15+,R13
    0000174E 000B                   RTS
    00001750 6EF6                   MOV.L       @R15+,R14
    00001752              L1386:                            
    00001752 7539                   .DATA.W     H'7539
    00001754 7532                   .DATA.W     H'7532
    00001756 7534                   .DATA.W     H'7534
    00001758 01F4                   .DATA.W     H'01F4
    0000175A 0000                   .DATA.W     0
    0000175C <00000000>             .DATA.L     _buf
    00001760 <00000000>             .DATA.L     _memset
    00001764 <00000000>             .DATA.L     _memcpy
          WiFi.c   555    
          WiFi.c   556    int showAppInfo(){
    00001768              _showAppInfo:                    ; function: showAppInfo
                                                           ; frame size=8
    00001768 4F22                   STS.L       PR,@-R15
          WiFi.c   557            unsigned int key=0;
    0000176A E300                   MOV         #0,R3
          WiFi.c   558            
          WiFi.c   559            unsigned char* picture;
          WiFi.c   560            unsigned short transmitted;
          WiFi.c   561            unsigned char* infoText;
          WiFi.c   562            unsigned char* appName;
          WiFi.c   563            unsigned char* author;
          WiFi.c   564            unsigned char* downloadCount;




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 11-Jan-2019 20:05:59  PAGE   65


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          WiFi.c   565            
          WiFi.c   566            sendCommand("GETAPPINFO");
    0000176C D434                   MOV.L       L1388+8,R4 ; L838
    0000176E 7FFC                   ADD         #-4,R15
    00001770 2F32                   MOV.L       R3,@R15
    00001772 D334                   MOV.L       L1388+12,R3; _sendCommand
    00001774 430B                   JSR         @R3
    00001776 0009                   NOP
          WiFi.c   567            receiveStatus();
    00001778 D233                   MOV.L       L1388+16,R2; _receiveStatus
    0000177A 420B                   JSR         @R2
    0000177C 0009                   NOP
          WiFi.c   568            
          WiFi.c   569            receiveStatusTimeout(20);
    0000177E D333                   MOV.L       L1388+20,R3; _receiveStatusTimeout
    00001780 430B                   JSR         @R3
    00001782 E414                   MOV         #20,R4
          WiFi.c   570            if(memcmp(status,"OK",2)!=0){
    00001784 D532                   MOV.L       L1388+24,R5; L482
    00001786 D433                   MOV.L       L1388+28,R4; _status
    00001788 D233                   MOV.L       L1388+32,R2; _memcmp
    0000178A 420B                   JSR         @R2
    0000178C E602                   MOV         #2,R6
    0000178E 2008                   TST         R0,R0
    00001790 8B0D                   BF          L992
          WiFi.c   571                    return 0;
          WiFi.c   572            }
          WiFi.c   573            
          WiFi.c   574            Bdisp_AllClr_DDVRAM();
    00001792 D332                   MOV.L       L1388+36,R3; _Bdisp_AllClr_DDVRAM
    00001794 430B                   JSR         @R3
    00001796 0009                   NOP
          WiFi.c   575            
          WiFi.c   576            //picture=receiveData(5000,&transmitted); DEBUG- wieder auskommentieren
          WiFi.c   577            serialReadString(infoText);
    00001798 B1BE                   BSR         _serialReadString
    0000179A 64F3                   MOV         R15,R4
          WiFi.c   578            
          WiFi.c   579            drawImage(picture);
    0000179C B417                   BSR         _drawImage
    0000179E 64F3                   MOV         R15,R4
          WiFi.c   580            
          WiFi.c   581            
          WiFi.c   582            GetKey(&key);
    000017A0 D22F                   MOV.L       L1388+40,R2; _GetKey
    000017A2 420B                   JSR         @R2
    000017A4 64F3                   MOV         R15,R4
          WiFi.c   583    
          WiFi.c   584            if (key == 30002) {
    000017A6 9347                   MOV.W       L1388,R3   ; H'7532
    000017A8 62F2                   MOV.L       @R15,R2
    000017AA 3230                   CMP/EQ      R3,R2
    000017AC 8B03                   BF          L1297
    000017AE              L992:
          WiFi.c   585                    return 0;
    000017AE 7F04                   ADD         #4,R15
    000017B0 4F26                   LDS.L       @R15+,PR




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 11-Jan-2019 20:05:59  PAGE   66


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000017B2 000B                   RTS
    000017B4 E000                   MOV         #0,R0
    000017B6              L1297:                            
          WiFi.c   586            }
          WiFi.c   587            else if (key == 30004) {
    000017B6 9240                   MOV.W       L1388+2,R2 ; H'7534
    000017B8 61F2                   MOV.L       @R15,R1
    000017BA 3120                   CMP/EQ      R2,R1
    000017BC 8B02                   BF          L1296
          WiFi.c   588                    downloadFile();
    000017BE B005                   BSR         _downloadFile
    000017C0 0009                   NOP
          WiFi.c   589                    return 1;
    000017C2 E001                   MOV         #1,R0
          WiFi.c   590            }
          WiFi.c   591    }
    000017C4              L1296:                            
    000017C4 7F04                   ADD         #4,R15
    000017C6 4F26                   LDS.L       @R15+,PR
    000017C8 000B                   RTS
    000017CA 0009                   NOP
          WiFi.c   592    
          WiFi.c   593    void downloadFile() {
    000017CC              _downloadFile:                   ; function: downloadFile
                                                           ; frame size=332
                                                           ; used runtime library name:
                                                           ; __muld, __divdr, __dtos, __utod
    000017CC 2FE6                   MOV.L       R14,@-R15
    000017CE 2FD6                   MOV.L       R13,@-R15
    000017D0 2FC6                   MOV.L       R12,@-R15
    000017D2 2FB6                   MOV.L       R11,@-R15
    000017D4 2FA6                   MOV.L       R10,@-R15
          WiFi.c   594        int fileHandle;
          WiFi.c   595        unsigned int counter = 0, contentLength = 0;
    000017D6 EB00                   MOV         #0,R11
          WiFi.c   596        unsigned char data[256];
          WiFi.c   597        short dataSize;
          WiFi.c   598    
          WiFi.c   599            sendCommand("DOWNLOAD");
    000017D8 D422                   MOV.L       L1388+44,R4; L848
    000017DA 2F96                   MOV.L       R9,@-R15
    000017DC 2F86                   MOV.L       R8,@-R15
    000017DE 4F22                   STS.L       PR,@-R15
    000017E0 902C                   MOV.W       L1388+4,R0 ; H'FEF8
    000017E2 3F0C                   ADD         R0,R15
    000017E4 D317                   MOV.L       L1388+12,R3; _sendCommand
    000017E6 430B                   JSR         @R3
    000017E8 6DB3                   MOV         R11,R13
          WiFi.c   600                   
          WiFi.c   601        receiveStatus();
    000017EA D217                   MOV.L       L1388+16,R2; _receiveStatus
    000017EC 420B                   JSR         @R2
    000017EE 0009                   NOP
          WiFi.c   602                                                    
          WiFi.c   603        if (memcmp(status,"OK",2)!=0){
    000017F0 D517                   MOV.L       L1388+24,R5; L482
    000017F2 D418                   MOV.L       L1388+28,R4; _status




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 11-Jan-2019 20:05:59  PAGE   67


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000017F4 D318                   MOV.L       L1388+32,R3; _memcmp
    000017F6 430B                   JSR         @R3
    000017F8 E602                   MOV         #2,R6
    000017FA 2008                   TST         R0,R0
    000017FC 8901                   BT          L1389
    000017FE A0A7                   BRA         L1301
    00001800 0009                   NOP
    00001802              L1389:                            
          WiFi.c   604                    return;
          WiFi.c   605        }
          WiFi.c   606        serialSendString(buf);
    00001802 DE19                   MOV.L       L1388+48,R14; _buf
    00001804 B164                   BSR         _serialSendString
    00001806 64E3                   MOV         R14,R4
          WiFi.c   607    
          WiFi.c   608        Bdisp_AllClr_DDVRAM();
    00001808 D214                   MOV.L       L1388+36,R2; _Bdisp_AllClr_DDVRAM
    0000180A 420B                   JSR         @R2
    0000180C 0009                   NOP
          WiFi.c   609    
          WiFi.c   610        memset(buf, 0, sizeof buf);
    0000180E E500                   MOV         #0,R5
    00001810 D316                   MOV.L       L1388+52,R3; _memset
    00001812 9614                   MOV.W       L1388+6,R6 ; H'01F4
    00001814 430B                   JSR         @R3
    00001816 64E3                   MOV         R14,R4
    00001818 DA15                   MOV.L       L1388+56,R10; _Serial_GetReceivedBytesAvailable
    0000181A DC16                   MOV.L       L1388+60,R12; _Serial_ReadOneByte
          WiFi.c   611    
          WiFi.c   612        while(1) {
    0000181C              L1303:                            
          WiFi.c   613            if (Serial_GetReceivedBytesAvailable() > 0) {
    0000181C 4A0B                   JSR         @R10
    0000181E 0009                   NOP
    00001820 4015                   CMP/PL      R0
    00001822 8BFB                   BF          L1303
          WiFi.c   614                unsigned char c;
          WiFi.c   615                Serial_ReadOneByte(&c);
    00001824 4C0B                   JSR         @R12
    00001826 64F3                   MOV         R15,R4
          WiFi.c   616    
          WiFi.c   617                if (c == 0) {
    00001828 62F0                   MOV.B       @R15,R2
    0000182A 2228                   TST         R2,R2
    0000182C 8924                   BT          L1306
          WiFi.c   618                    break;
          WiFi.c   619                } else {
          WiFi.c   620                    buf[counter] = c;
    0000182E 60E3                   MOV         R14,R0
    00001830 63F0                   MOV.B       @R15,R3
    00001832 0D34                   MOV.B       R3,@(R0,R13)
    00001834 AFF2                   BRA         L1303
          WiFi.c   621                    counter = counter + 1;
    00001836 7D01                   ADD         #1,R13
    00001838              L1388:                            
    00001838 7532                   .DATA.W     H'7532
    0000183A 7534                   .DATA.W     H'7534




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 11-Jan-2019 20:05:59  PAGE   68


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000183C FEF8                   .DATA.W     H'FEF8
    0000183E 01F4                   .DATA.W     H'01F4
    00001840 <00000000>             .DATA.L     L838
    00001844 <00000000>             .DATA.L     _sendCommand
    00001848 <00000000>             .DATA.L     _receiveStatus
    0000184C <00000000>             .DATA.L     _receiveStatusTimeout
    00001850 <00000000>             .DATA.L     L482
    00001854 <00000000>             .DATA.L     _status
    00001858 <00000000>             .DATA.L     _memcmp
    0000185C <00000000>             .DATA.L     _Bdisp_AllClr_DDVRAM
    00001860 <00000000>             .DATA.L     _GetKey
    00001864 <00000000>             .DATA.L     L848
    00001868 <00000000>             .DATA.L     _buf
    0000186C <00000000>             .DATA.L     _memset
    00001870 <00000000>             .DATA.L     _Serial_GetReceivedBytesAvailable
    00001874 <00000000>             .DATA.L     _Serial_ReadOneByte
    00001878              L1306:                            
          WiFi.c   622                }
          WiFi.c   623            }
          WiFi.c   624        }
          WiFi.c   625    
          WiFi.c   626        contentLength = atoi(buf);
    00001878 D342                   MOV.L       L1390+6,R3 ; _atoi
    0000187A 430B                   JSR         @R3
    0000187C 64E3                   MOV         R14,R4
    0000187E 6C03                   MOV         R0,R12
          WiFi.c   627    
          WiFi.c   628        counter = 0;
          WiFi.c   629    
          WiFi.c   630        Bfile_CreateFile(filename, contentLength);
    00001880 D441                   MOV.L       L1390+10,R4; _filename
    00001882 6DB3                   MOV         R11,R13
    00001884 D241                   MOV.L       L1390+14,R2; _Bfile_CreateFile
    00001886 420B                   JSR         @R2
    00001888 6503                   MOV         R0,R5
          WiFi.c   631        fileHandle = Bfile_OpenFile(filename, _OPENMODE_READWRITE);
    0000188A D43F                   MOV.L       L1390+10,R4; _filename
    0000188C D340                   MOV.L       L1390+18,R3; _Bfile_OpenFile
    0000188E 430B                   JSR         @R3
    00001890 E503                   MOV         #3,R5
          WiFi.c   632    
          WiFi.c   633        while(counter < contentLength) {
    00001892 E200                   MOV         #0,R2
    00001894 D83F                   MOV.L       L1390+22,R8; _Print
    00001896 32C2                   CMP/HS      R12,R2
    00001898 D93F                   MOV.L       L1390+26,R9; _locate
    0000189A 8D53                   BT/S        L1308
    0000189C 6A03                   MOV         R0,R10
    0000189E              L1309:                            
          WiFi.c   634                    unsigned char* d;
          WiFi.c   635                    short received;
          WiFi.c   636                    int writeResult;
          WiFi.c   637                    
          WiFi.c   638                    unsigned int key=0;
          WiFi.c   639                    
          WiFi.c   640            //d=receiveData(5000,&received); DEBUG- wieder auskommentieren
          WiFi.c   641                    if(d==0){




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 11-Jan-2019 20:05:59  PAGE   69


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000189E 2FF8                   TST         R15,R15
    000018A0 8F09                   BF/S        L1310
    000018A2 1FB1                   MOV.L       R11,@(4,R15)
          WiFi.c   642                            Bfile_CloseFile(fileHandle);
    000018A4 D23D                   MOV.L       L1390+30,R2; _Bfile_CloseFile
    000018A6 420B                   JSR         @R2
    000018A8 64A3                   MOV         R10,R4
          WiFi.c   643                            //File löschen
          WiFi.c   644                            
          WiFi.c   645                            /*Bdisp_AllClr_DDVRAM();
          WiFi.c   646                            locate(1,8);
          WiFi.c   647                            memset(buf,0,100);
          WiFi.c   648                            memcpy(buf,counter,4);
          WiFi.c   649                            Print(buf);
          WiFi.c   650                            locate(1,6);
          WiFi.c   651                            memset(buf,0,100);
          WiFi.c   652                            memcpy(buf,checksumRec,4);
          WiFi.c   653                            Print(buf);*/
          WiFi.c   654                            GetKey(&key);
    000018AA 64F3                   MOV         R15,R4
    000018AC D33C                   MOV.L       L1390+34,R3; _GetKey
    000018AE 430B                   JSR         @R3
    000018B0 7404                   ADD         #4,R4
          WiFi.c   655                            
          WiFi.c   656                            return;
    000018B2 A04D                   BRA         L1301
    000018B4 0009                   NOP
    000018B6              L1310:                            
          WiFi.c   657                    }
          WiFi.c   658                    counter = counter + received;
    000018B6 62FF                   EXTS.W      R15,R2
          WiFi.c   659    
          WiFi.c   660                    Bdisp_AllClr_DDVRAM();
    000018B8 D33A                   MOV.L       L1390+38,R3; _Bdisp_AllClr_DDVRAM
    000018BA 430B                   JSR         @R3
    000018BC 3D2C                   ADD         R2,R13
          WiFi.c   661    
          WiFi.c   662                    locate(4, 2);
    000018BE E502                   MOV         #2,R5
    000018C0 490B                   JSR         @R9
    000018C2 E404                   MOV         #4,R4
          WiFi.c   663                    Print((unsigned char*) "Downloading...");
    000018C4 D438                   MOV.L       L1390+42,R4; L861
    000018C6 480B                   JSR         @R8
    000018C8 0009                   NOP
          WiFi.c   664    
          WiFi.c   665                    drawProgressBar(30, counter * 1.0 / contentLength);
    000018CA 60D3                   MOV         R13,R0
    000018CC D237                   MOV.L       L1390+46,R2; __utod
    000018CE 7FE8                   ADD         #-24,R15
    000018D0 420B                   JSR         @R2
    000018D2 2FF6                   MOV.L       R15,@-R15
    000018D4 D137                   MOV.L       L1390+54,R1; __muld
    000018D6 E300                   MOV         #0,R3
    000018D8 2F36                   MOV.L       R3,@-R15
    000018DA D335                   MOV.L       L1390+50,R3; H'3FF00000
    000018DC 2F36                   MOV.L       R3,@-R15




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 11-Jan-2019 20:05:59  PAGE   70


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000018DE 62F3                   MOV         R15,R2
    000018E0 7210                   ADD         #16,R2
    000018E2 410B                   JSR         @R1
    000018E4 2F26                   MOV.L       R2,@-R15
    000018E6 60C3                   MOV         R12,R0
    000018E8 D330                   MOV.L       L1390+46,R3; __utod
    000018EA 7FF8                   ADD         #-8,R15
    000018EC 430B                   JSR         @R3
    000018EE 2FF6                   MOV.L       R15,@-R15
    000018F0 D131                   MOV.L       L1390+58,R1; __divdr
    000018F2 62F3                   MOV         R15,R2
    000018F4 7210                   ADD         #16,R2
    000018F6 410B                   JSR         @R1
    000018F8 2F26                   MOV.L       R2,@-R15
    000018FA D330                   MOV.L       L1390+62,R3; __dtos
    000018FC 430B                   JSR         @R3
    000018FE 0009                   NOP
    00001900 6503                   MOV         R0,R5
    00001902 B245                   BSR         _drawProgressBar
    00001904 E41E                   MOV         #30,R4
          WiFi.c   666    
          WiFi.c   667                    sprintf(buf, "%d/%d", counter, contentLength);
    00001906 2FC6                   MOV.L       R12,@-R15
    00001908 2FD6                   MOV.L       R13,@-R15
    0000190A D32D                   MOV.L       L1390+66,R3; L862
    0000190C D22D                   MOV.L       L1390+70,R2; _sprintf
    0000190E 2F36                   MOV.L       R3,@-R15
    00001910 420B                   JSR         @R2
    00001912 64E3                   MOV         R14,R4
          WiFi.c   668                    locate(22 - strlen(buf), 8);
    00001914 D32C                   MOV.L       L1390+74,R3; _strlen
    00001916 7F0C                   ADD         #12,R15
    00001918 430B                   JSR         @R3
    0000191A 64E3                   MOV         R14,R4
    0000191C 600B                   NEG         R0,R0
    0000191E 6403                   MOV         R0,R4
    00001920 7416                   ADD         #22,R4
    00001922 490B                   JSR         @R9
    00001924 E508                   MOV         #8,R5
          WiFi.c   669                    Print(buf);
    00001926 480B                   JSR         @R8
    00001928 64E3                   MOV         R14,R4
          WiFi.c   670    
          WiFi.c   671                    writeResult = Bfile_WriteFile(fileHandle, d, received);
    0000192A 66FF                   EXTS.W      R15,R6
    0000192C D227                   MOV.L       L1390+78,R2; _Bfile_WriteFile
    0000192E 65F3                   MOV         R15,R5
    00001930 420B                   JSR         @R2
    00001932 64A3                   MOV         R10,R4
          WiFi.c   672                    free(d);
    00001934 D326                   MOV.L       L1390+82,R3; _free
    00001936 430B                   JSR         @R3
    00001938 64F3                   MOV         R15,R4
          WiFi.c   673                    
          WiFi.c   674                    Bdisp_PutDisp_DD();
    0000193A D226                   MOV.L       L1390+86,R2; _Bdisp_PutDisp_DD
    0000193C 420B                   JSR         @R2




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 11-Jan-2019 20:05:59  PAGE   71


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000193E 0009                   NOP
    00001940 3DC2                   CMP/HS      R12,R13
    00001942 8BAC                   BF          L1309
    00001944              L1308:                            
          WiFi.c   675                    
          WiFi.c   676        }
          WiFi.c   677    
          WiFi.c   678        Bfile_CloseFile(fileHandle);
    00001944 D215                   MOV.L       L1390+30,R2; _Bfile_CloseFile
    00001946 420B                   JSR         @R2
    00001948 64A3                   MOV         R10,R4
          WiFi.c   679    
          WiFi.c   680        App_RegisterAddins();
    0000194A D323                   MOV.L       L1390+90,R3; _App_RegisterAddins
    0000194C 430B                   JSR         @R3
    0000194E 0009                   NOP
          WiFi.c   681    }
    00001950              L1301:                            
    00001950 9115                   MOV.W       L1390,R1   ; H'0108
    00001952 3F1C                   ADD         R1,R15
    00001954 4F26                   LDS.L       @R15+,PR
    00001956 68F6                   MOV.L       @R15+,R8
    00001958 69F6                   MOV.L       @R15+,R9
    0000195A 6AF6                   MOV.L       @R15+,R10
    0000195C 6BF6                   MOV.L       @R15+,R11
    0000195E 6CF6                   MOV.L       @R15+,R12
    00001960 6DF6                   MOV.L       @R15+,R13
    00001962 000B                   RTS
    00001964 6EF6                   MOV.L       @R15+,R14
          WiFi.c   682    
          WiFi.c   683    void getAppByID(){
    00001966              _getAppByID:                     ; function: getAppByID
                                                           ; frame size=0
          WiFi.c   684    
          WiFi.c   685    }
    00001966 000B                   RTS
    00001968 0009                   NOP
          WiFi.c   686    
          WiFi.c   687    void sendAcknowledgement(unsigned char* state){ 
    0000196A              _sendAcknowledgement:            ; function: sendAcknowledgement
                                                           ; frame size=8
    0000196A 4F22                   STS.L       PR,@-R15
    0000196C 2F46                   MOV.L       R4,@-R15
          WiFi.c   688            Serial_BufferedTransmitOneByte((unsigned char)220);
    0000196E 9407                   MOV.W       L1390+2,R4 ; H'00DC
    00001970 D31A                   MOV.L       L1390+94,R3; _Serial_BufferedTransmitOneByte
    00001972 430B                   JSR         @R3
    00001974 0009                   NOP
          WiFi.c   689            serialSendString(state);
    00001976 64F2                   MOV.L       @R15,R4
    00001978 7F04                   ADD         #4,R15
    0000197A A0A9                   BRA         _serialSendString
    0000197C 4F26                   LDS.L       @R15+,PR
    0000197E              L1390:                            
    0000197E 0108                   .DATA.W     H'0108
    00001980 00DC                   .DATA.W     H'00DC
    00001982 0000                   .DATA.W     0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 11-Jan-2019 20:05:59  PAGE   72


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001984 <00000000>             .DATA.L     _atoi
    00001988 <00000000>             .DATA.L     _filename
    0000198C <00000000>             .DATA.L     _Bfile_CreateFile
    00001990 <00000000>             .DATA.L     _Bfile_OpenFile
    00001994 <00000000>             .DATA.L     _Print
    00001998 <00000000>             .DATA.L     _locate
    0000199C <00000000>             .DATA.L     _Bfile_CloseFile
    000019A0 <00000000>             .DATA.L     _GetKey
    000019A4 <00000000>             .DATA.L     _Bdisp_AllClr_DDVRAM
    000019A8 <00000000>             .DATA.L     L861
    000019AC <00000000>             .DATA.L     __utod
    000019B0 3FF00000               .DATA.L     H'3FF00000
    000019B4 <00000000>             .DATA.L     __muld
    000019B8 <00000000>             .DATA.L     __divdr
    000019BC <00000000>             .DATA.L     __dtos
    000019C0 <00000000>             .DATA.L     L862
    000019C4 <00000000>             .DATA.L     _sprintf
    000019C8 <00000000>             .DATA.L     _strlen
    000019CC <00000000>             .DATA.L     _Bfile_WriteFile
    000019D0 <00000000>             .DATA.L     _free
    000019D4 <00000000>             .DATA.L     _Bdisp_PutDisp_DD
    000019D8 <00000000>             .DATA.L     _App_RegisterAddins
    000019DC <00000000>             .DATA.L     _Serial_BufferedTransmitOneByte
          WiFi.c   690    }
          WiFi.c   691    
          WiFi.c   692    void readString(int x, int y, bool search) {
    000019E0              _readString:                     ; function: readString
                                                           ; frame size=68
    000019E0 2FE6                   MOV.L       R14,@-R15
    000019E2 2FD6                   MOV.L       R13,@-R15
    000019E4 2FC6                   MOV.L       R12,@-R15
          WiFi.c   693        unsigned int key;
          WiFi.c   694        int numChars = 0;
    000019E6 EC00                   MOV         #0,R12
          WiFi.c   695        DISPBOX clearBox;
          WiFi.c   696        memset(buf, 0, sizeof buf);
    000019E8 DD41                   MOV.L       L1391+10,R13; _buf
    000019EA 6EC3                   MOV         R12,R14
    000019EC D341                   MOV.L       L1391+14,R3; _memset
    000019EE 2FB6                   MOV.L       R11,@-R15
    000019F0 2FA6                   MOV.L       R10,@-R15
    000019F2 6B43                   MOV         R4,R11
    000019F4 2F96                   MOV.L       R9,@-R15
    000019F6 6A53                   MOV         R5,R10
    000019F8 2F86                   MOV.L       R8,@-R15
    000019FA 65C3                   MOV         R12,R5
    000019FC 4F22                   STS.L       PR,@-R15
    000019FE 7FDC                   ADD         #-36,R15
    00001A00 1F61                   MOV.L       R6,@(4,R15)
    00001A02 9670                   MOV.W       L1391,R6   ; H'01F4
    00001A04 430B                   JSR         @R3
    00001A06 64D3                   MOV         R13,R4
          WiFi.c   697    
          WiFi.c   698        Keyboard_ClrBuffer();
    00001A08 D23B                   MOV.L       L1391+18,R2; _Keyboard_ClrBuffer
    00001A0A 420B                   JSR         @R2
    00001A0C 0009                   NOP




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 11-Jan-2019 20:05:59  PAGE   73


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001A0E 63B3                   MOV         R11,R3
    00001A10 986A                   MOV.W       L1391+2,R8 ; H'7536
    00001A12 61A3                   MOV         R10,R1
    00001A14 73FF                   ADD         #-1,R3
    00001A16 6233                   MOV         R3,R2
    00001A18 4300                   SHLL        R3
    00001A1A 4208                   SHLL2       R2
    00001A1C 332C                   ADD         R2,R3
    00001A1E 62A3                   MOV         R10,R2
    00001A20 1F33                   MOV.L       R3,@(12,R15)
    00001A22 6983                   MOV         R8,R9
    00001A24 72FF                   ADD         #-1,R2
    00001A26 4208                   SHLL2       R2
    00001A28 4200                   SHLL        R2
    00001A2A 7913                   ADD         #19,R9
    00001A2C 1F24                   MOV.L       R2,@(16,R15)
    00001A2E 4108                   SHLL2       R1
    00001A30 4100                   SHLL        R1
    00001A32 1F12                   MOV.L       R1,@(8,R15)
          WiFi.c   699    
          WiFi.c   700        while(1) {
    00001A34              L1312:                            
          WiFi.c   701            GetKey(&key);
    00001A34 D231                   MOV.L       L1391+22,R2; _GetKey
    00001A36 420B                   JSR         @R2
    00001A38 64F3                   MOV         R15,R4
          WiFi.c   702    
          WiFi.c   703            clearBox.left = (x - 1) * 6;
    00001A3A 53F3                   MOV.L       @(12,R15),R3
    00001A3C 1F35                   MOV.L       R3,@(20,R15)
          WiFi.c   704            clearBox.top = (y - 1) * 8;
          WiFi.c   705            clearBox.right = (x + numChars - 1) * 6;
    00001A3E 63B3                   MOV         R11,R3
    00001A40 52F4                   MOV.L       @(16,R15),R2
    00001A42 33EC                   ADD         R14,R3
    00001A44 1F26                   MOV.L       R2,@(24,R15)
    00001A46 73FF                   ADD         #-1,R3
    00001A48 6233                   MOV         R3,R2
    00001A4A 4300                   SHLL        R3
    00001A4C 4208                   SHLL2       R2
    00001A4E 332C                   ADD         R2,R3
    00001A50 1F37                   MOV.L       R3,@(28,R15)
          WiFi.c   706            clearBox.bottom = y * 8;
    00001A52 52F2                   MOV.L       @(8,R15),R2
          WiFi.c   707    
          WiFi.c   708            if (key == 30004 || key == 30002) { // EXE Key
    00001A54 9349                   MOV.W       L1391+4,R3 ; H'7534
    00001A56 1F28                   MOV.L       R2,@(32,R15)
    00001A58 61F2                   MOV.L       @R15,R1
    00001A5A 3130                   CMP/EQ      R3,R1
    00001A5C 892E                   BT          L1315
    00001A5E 9245                   MOV.W       L1391+6,R2 ; H'7532
    00001A60 61F2                   MOV.L       @R15,R1
    00001A62 3120                   CMP/EQ      R2,R1
    00001A64 892A                   BT          L1315
          WiFi.c   709                break;
          WiFi.c   710            } else if (key == 30025) {




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 11-Jan-2019 20:05:59  PAGE   74


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001A66 63F2                   MOV.L       @R15,R3
    00001A68 3390                   CMP/EQ      R9,R3
    00001A6A 8B06                   BF          L1317
          WiFi.c   711                numChars = numChars - 1;
    00001A6C 7EFF                   ADD         #-1,R14
          WiFi.c   712                if (numChars < 0) {
    00001A6E 4E11                   CMP/PZ      R14
    00001A70 8900                   BT          L1318
          WiFi.c   713                    numChars = 0;
    00001A72 6EC3                   MOV         R12,R14
    00001A74              L1318:                            
          WiFi.c   714                }
          WiFi.c   715    
          WiFi.c   716                buf[numChars] = 0;
    00001A74 60E3                   MOV         R14,R0
    00001A76 A00B                   BRA         L1316
    00001A78 0DC4                   MOV.B       R12,@(R0,R13)
    00001A7A              L1317:                            
          WiFi.c   717            } else if (key == 30006 || key == 30007) { // shift alpha
    00001A7A 62F2                   MOV.L       @R15,R2
    00001A7C 3280                   CMP/EQ      R8,R2
    00001A7E 8907                   BT          L1316
    00001A80 9135                   MOV.W       L1391+8,R1 ; H'7537
    00001A82 63F2                   MOV.L       @R15,R3
    00001A84 3310                   CMP/EQ      R1,R3
    00001A86 8903                   BT          L1316
          WiFi.c   718    
          WiFi.c   719            } else {
          WiFi.c   720                unsigned char c = (unsigned char) key;
    00001A88 64F2                   MOV.L       @R15,R4
          WiFi.c   721                buf[numChars] = c;
    00001A8A 60E3                   MOV         R14,R0
    00001A8C 0D44                   MOV.B       R4,@(R0,R13)
          WiFi.c   722                numChars = numChars + 1;
    00001A8E 7E01                   ADD         #1,R14
    00001A90              L1316:                            
          WiFi.c   723            }
          WiFi.c   724                    
          WiFi.c   725                    
          WiFi.c   726                    
          WiFi.c   727            Bdisp_AreaClr_DDVRAM(&clearBox);
    00001A90 D31B                   MOV.L       L1391+26,R3; _Bdisp_AreaClr_DDVRAM
    00001A92 64F3                   MOV         R15,R4
    00001A94 430B                   JSR         @R3
    00001A96 7414                   ADD         #20,R4
          WiFi.c   728            locate(x, y);
    00001A98 D21A                   MOV.L       L1391+30,R2; _locate
    00001A9A 65A3                   MOV         R10,R5
    00001A9C 420B                   JSR         @R2
    00001A9E 64B3                   MOV         R11,R4
          WiFi.c   729            Print(buf);
    00001AA0 D319                   MOV.L       L1391+34,R3; _Print
    00001AA2 430B                   JSR         @R3
    00001AA4 64D3                   MOV         R13,R4
          WiFi.c   730            if(search==true){
    00001AA6 50F1                   MOV.L       @(4,R15),R0
    00001AA8 8801                   CMP/EQ      #1,R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 11-Jan-2019 20:05:59  PAGE   75


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001AAA 8BC3                   BF          L1312
          WiFi.c   731                 Bdisp_DrawLineVRAM(0,7,127,7);
    00001AAC D217                   MOV.L       L1391+38,R2; _Bdisp_DrawLineVRAM
    00001AAE E707                   MOV         #7,R7
    00001AB0 E67F                   MOV         #127,R6
    00001AB2 6573                   MOV         R7,R5
    00001AB4 420B                   JSR         @R2
    00001AB6 E400                   MOV         #0,R4
    00001AB8 AFBC                   BRA         L1312
    00001ABA 0009                   NOP
    00001ABC              L1315:                            
          WiFi.c   732            }
          WiFi.c   733        }
          WiFi.c   734    }
    00001ABC 7F24                   ADD         #36,R15
    00001ABE 4F26                   LDS.L       @R15+,PR
    00001AC0 68F6                   MOV.L       @R15+,R8
    00001AC2 69F6                   MOV.L       @R15+,R9
    00001AC4 6AF6                   MOV.L       @R15+,R10
    00001AC6 6BF6                   MOV.L       @R15+,R11
    00001AC8 6CF6                   MOV.L       @R15+,R12
    00001ACA 6DF6                   MOV.L       @R15+,R13
    00001ACC 000B                   RTS
    00001ACE 6EF6                   MOV.L       @R15+,R14
          WiFi.c   735    
          WiFi.c   736    void serialSendString(unsigned char* buffer) {
    00001AD0              _serialSendString:               ; function: serialSendString
                                                           ; frame size=8
    00001AD0 4F22                   STS.L       PR,@-R15
          WiFi.c   737        unsigned int counter = 0;
          WiFi.c   738            
          WiFi.c   739            Serial_BufferedTransmitNBytes(buffer,strlen(buffer)+1);
    00001AD2 D30F                   MOV.L       L1391+42,R3; _strlen
    00001AD4 430B                   JSR         @R3
    00001AD6 2F46                   MOV.L       R4,@-R15
    00001AD8 64F2                   MOV.L       @R15,R4
    00001ADA 6503                   MOV         R0,R5
    00001ADC D30D                   MOV.L       L1391+46,R3; _Serial_BufferedTransmitNBytes
    00001ADE 7F04                   ADD         #4,R15
    00001AE0 7501                   ADD         #1,R5
    00001AE2 432B                   JMP         @R3
    00001AE4 4F26                   LDS.L       @R15+,PR
    00001AE6              L1391:                            
    00001AE6 01F4                   .DATA.W     H'01F4
    00001AE8 7536                   .DATA.W     H'7536
    00001AEA 7534                   .DATA.W     H'7534
    00001AEC 7532                   .DATA.W     H'7532
    00001AEE 7537                   .DATA.W     H'7537
    00001AF0 <00000000>             .DATA.L     _buf
    00001AF4 <00000000>             .DATA.L     _memset
    00001AF8 <00000000>             .DATA.L     _Keyboard_ClrBuffer
    00001AFC <00000000>             .DATA.L     _GetKey
    00001B00 <00000000>             .DATA.L     _Bdisp_AreaClr_DDVRAM
    00001B04 <00000000>             .DATA.L     _locate
    00001B08 <00000000>             .DATA.L     _Print
    00001B0C <00000000>             .DATA.L     _Bdisp_DrawLineVRAM
    00001B10 <00000000>             .DATA.L     _strlen




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 11-Jan-2019 20:05:59  PAGE   76


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001B14 <00000000>             .DATA.L     _Serial_BufferedTransmitNBytes
          WiFi.c   740    }
          WiFi.c   741    
          WiFi.c   742    void serialReadString(unsigned char* buffer){ //überarbeitet
    00001B18              _serialReadString:               ; function: serialReadString
                                                           ; frame size=4
    00001B18 2F46                   MOV.L       R4,@-R15
          WiFi.c   743            serialReadStringTimeout(100, buffer);
    00001B1A 6543                   MOV         R4,R5
    00001B1C E464                   MOV         #100,R4
    00001B1E 7F04                   ADD         #4,R15
          WiFi.c   744    }
          WiFi.c   745    
          WiFi.c   746    void serialReadStringTimeout(int timeout, unsigned char* buffer) { //überarbeitet
    00001B20              _serialReadStringTimeout:        ; function: serialReadStringTimeout
                                                           ; frame size=40
    00001B20 2FE6                   MOV.L       R14,@-R15
    00001B22 2FD6                   MOV.L       R13,@-R15
    00001B24 2FC6                   MOV.L       R12,@-R15
    00001B26 6D53                   MOV         R5,R13
          WiFi.c   747        unsigned int counter = 0;
          WiFi.c   748        int lastTicks = RTC_GetTicks();
    00001B28 D318                   MOV.L       L1392,R3   ; _RTC_GetTicks
    00001B2A EC00                   MOV         #0,R12
    00001B2C 2FB6                   MOV.L       R11,@-R15
    00001B2E 2FA6                   MOV.L       R10,@-R15
    00001B30 2F96                   MOV.L       R9,@-R15
    00001B32 2F86                   MOV.L       R8,@-R15
    00001B34 4F22                   STS.L       PR,@-R15
    00001B36 7FF8                   ADD         #-8,R15
    00001B38 1F41                   MOV.L       R4,@(4,R15)
    00001B3A 430B                   JSR         @R3
    00001B3C 6EC3                   MOV         R12,R14
    00001B3E 6A03                   MOV         R0,R10
          WiFi.c   749        memset(buffer, 0, sizeof buffer);
    00001B40 D213                   MOV.L       L1392+4,R2 ; _memset
    00001B42 E604                   MOV         #4,R6
    00001B44 65E3                   MOV         R14,R5
    00001B46 420B                   JSR         @R2
    00001B48 64D3                   MOV         R13,R4
    00001B4A D812                   MOV.L       L1392+8,R8 ; _Serial_ReadOneByte
    00001B4C D912                   MOV.L       L1392+12,R9; _Serial_GetReceivedBytesAvailable
    00001B4E DB13                   MOV.L       L1392+16,R11; _RTC_Elapsed_ms
          WiFi.c   750    
          WiFi.c   751        while(true) {
    00001B50              L1325:                            
          WiFi.c   752            
          WiFi.c   753            if (Serial_GetReceivedBytesAvailable() > 0) {
    00001B50 490B                   JSR         @R9
    00001B52 0009                   NOP
    00001B54 4015                   CMP/PL      R0
    00001B56 8B08                   BF          L1326
          WiFi.c   754                unsigned char c;
          WiFi.c   755                Serial_ReadOneByte(&c);
    00001B58 480B                   JSR         @R8
    00001B5A 64F3                   MOV         R15,R4
          WiFi.c   756    




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 11-Jan-2019 20:05:59  PAGE   77


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          WiFi.c   757                buffer[counter] = c;
    00001B5C 63F0                   MOV.B       @R15,R3
    00001B5E 60D3                   MOV         R13,R0
    00001B60 0E34                   MOV.B       R3,@(R0,R14)
          WiFi.c   758                counter = counter + 1;
          WiFi.c   759    
          WiFi.c   760                if (c == 0) {
    00001B62 62F0                   MOV.B       @R15,R2
    00001B64 2228                   TST         R2,R2
    00001B66 8D07                   BT/S        L1328
    00001B68 7E01                   ADD         #1,R14
    00001B6A              L1326:                            
          WiFi.c   761                    return;
          WiFi.c   762                }
          WiFi.c   763            }
          WiFi.c   764    
          WiFi.c   765            if (RTC_Elapsed_ms(lastTicks, timeout)) { // 100 ms timeout Standard
    00001B6A 55F1                   MOV.L       @(4,R15),R5
    00001B6C 4B0B                   JSR         @R11
    00001B6E 64A3                   MOV         R10,R4
    00001B70 2008                   TST         R0,R0
    00001B72 89ED                   BT          L1325
          WiFi.c   766                buffer[counter]=0;
    00001B74 60D3                   MOV         R13,R0
    00001B76 0EC4                   MOV.B       R12,@(R0,R14)
          WiFi.c   767                return;
    00001B78              L1328:                            
          WiFi.c   768            }
          WiFi.c   769        }
          WiFi.c   770    }
    00001B78 7F08                   ADD         #8,R15
    00001B7A 4F26                   LDS.L       @R15+,PR
    00001B7C 68F6                   MOV.L       @R15+,R8
    00001B7E 69F6                   MOV.L       @R15+,R9
    00001B80 6AF6                   MOV.L       @R15+,R10
    00001B82 6BF6                   MOV.L       @R15+,R11
    00001B84 6CF6                   MOV.L       @R15+,R12
    00001B86 6DF6                   MOV.L       @R15+,R13
    00001B88 000B                   RTS
    00001B8A 6EF6                   MOV.L       @R15+,R14
    00001B8C              L1392:                            
    00001B8C <00000000>             .DATA.L     _RTC_GetTicks
    00001B90 <00000000>             .DATA.L     _memset
    00001B94 <00000000>             .DATA.L     _Serial_ReadOneByte
    00001B98 <00000000>             .DATA.L     _Serial_GetReceivedBytesAvailable
    00001B9C <00000000>             .DATA.L     _RTC_Elapsed_ms
          WiFi.c   771    
          WiFi.c   772    char keyToChar(int key, bool shift, bool alpha) {
    00001BA0              _keyToChar:                      ; function: keyToChar
                                                           ; frame size=0
          WiFi.c   773        unsigned char c = 1;
          WiFi.c   774    
          WiFi.c   775        if (shift) {
    00001BA0 2558                   TST         R5,R5
    00001BA2 8D02                   BT/S        L1393
    00001BA4 E701                   MOV         #1,R7
    00001BA6 A097                   BRA         L1331




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 11-Jan-2019 20:05:59  PAGE   78


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001BA8 0009                   NOP
    00001BAA              L1393:                            
          WiFi.c   776    
          WiFi.c   777        } else if (alpha) {
    00001BAA 2668                   TST         R6,R6
    00001BAC 8B01                   BF          L1394
    00001BAE A092                   BRA         L1332
    00001BB0 0009                   NOP
    00001BB2              L1394:                            
          WiFi.c   778            switch (key) {
    00001BB2 6043                   MOV         R4,R0
    00001BB4 9141                   MOV.W       L1395,R1   ; H'7531
    00001BB6 3010                   CMP/EQ      R1,R0
    00001BB8 8B01                   BF          L1396
    00001BBA A054                   BRA         L1033
    00001BBC 0009                   NOP
    00001BBE              L1396:                            
    00001BBE 913D                   MOV.W       L1395+2,R1 ; H'0095
    00001BC0 3010                   CMP/EQ      R1,R0
    00001BC2 8B01                   BF          L1397
    00001BC4 A051                   BRA         L1034
    00001BC6 0009                   NOP
    00001BC8              L1397:                            
    00001BC8 9139                   MOV.W       L1395+4,R1 ; H'0085
    00001BCA 3010                   CMP/EQ      R1,R0
    00001BCC 8B01                   BF          L1398
    00001BCE A04E                   BRA         L1035
    00001BD0 0009                   NOP
    00001BD2              L1398:                            
    00001BD2 9135                   MOV.W       L1395+6,R1 ; H'0081
    00001BD4 3010                   CMP/EQ      R1,R0
    00001BD6 894C                   BT          L1036
    00001BD8 9133                   MOV.W       L1395+8,R1 ; H'0082
    00001BDA 3010                   CMP/EQ      R1,R0
    00001BDC 894B                   BT          L1037
    00001BDE 9131                   MOV.W       L1395+10,R1; H'0083
    00001BE0 3010                   CMP/EQ      R1,R0
    00001BE2 894A                   BT          L1038
    00001BE4 912F                   MOV.W       L1395+12,R1; H'00BB
    00001BE6 3010                   CMP/EQ      R1,R0
    00001BE8 8949                   BT          L1039
    00001BEA 912D                   MOV.W       L1395+14,R1; H'755E
    00001BEC 3010                   CMP/EQ      R1,R0
    00001BEE 8948                   BT          L1040
    00001BF0 8828                   CMP/EQ      #40,R0
    00001BF2 8948                   BT          L1041
    00001BF4 8829                   CMP/EQ      #41,R0
    00001BF6 8948                   BT          L1042
    00001BF8 882C                   CMP/EQ      #44,R0
    00001BFA 8948                   BT          L1043
    00001BFC 880E                   CMP/EQ      #14,R0
    00001BFE 8948                   BT          L1044
    00001C00 8837                   CMP/EQ      #55,R0
    00001C02 8948                   BT          L1045
    00001C04 8838                   CMP/EQ      #56,R0
    00001C06 8948                   BT          L1046
    00001C08 8839                   CMP/EQ      #57,R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 11-Jan-2019 20:05:59  PAGE   79


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001C0A 8948                   BT          L1047
    00001C0C 8834                   CMP/EQ      #52,R0
    00001C0E 8948                   BT          L1048
    00001C10 8835                   CMP/EQ      #53,R0
    00001C12 8948                   BT          L1049
    00001C14 8836                   CMP/EQ      #54,R0
    00001C16 8948                   BT          L1050
    00001C18 9117                   MOV.W       L1395+16,R1; H'00A9
    00001C1A 3010                   CMP/EQ      R1,R0
    00001C1C 8947                   BT          L1051
    00001C1E 9115                   MOV.W       L1395+18,R1; H'00B9
    00001C20 3010                   CMP/EQ      R1,R0
    00001C22 8946                   BT          L1052
    00001C24 8831                   CMP/EQ      #49,R0
    00001C26 8946                   BT          L1053
    00001C28 8832                   CMP/EQ      #50,R0
    00001C2A 8946                   BT          L1054
    00001C2C 8833                   CMP/EQ      #51,R0
    00001C2E 8946                   BT          L1055
    00001C30 910D                   MOV.W       L1395+20,R1; H'0089
    00001C32 3010                   CMP/EQ      R1,R0
    00001C34 8945                   BT          L1056
    00001C36 A00B                   BRA         L1366
    00001C38 0009                   NOP
    00001C3A              L1395:                            
    00001C3A 7531                   .DATA.W     H'7531
    00001C3C 0095                   .DATA.W     H'0095
    00001C3E 0085                   .DATA.W     H'0085
    00001C40 0081                   .DATA.W     H'0081
    00001C42 0082                   .DATA.W     H'0082
    00001C44 0083                   .DATA.W     H'0083
    00001C46 00BB                   .DATA.W     H'00BB
    00001C48 755E                   .DATA.W     H'755E
    00001C4A 00A9                   .DATA.W     H'00A9
    00001C4C 00B9                   .DATA.W     H'00B9
    00001C4E 0089                   .DATA.W     H'0089
    00001C50              L1366:                            
    00001C50 9144                   MOV.W       L1399,R1   ; H'0099
    00001C52 3010                   CMP/EQ      R1,R0
    00001C54 8937                   BT          L1057
    00001C56 8830                   CMP/EQ      #48,R0
    00001C58 8937                   BT          L1058
    00001C5A 882E                   CMP/EQ      #46,R0
    00001C5C 8937                   BT          L1059
    00001C5E 880F                   CMP/EQ      #15,R0
    00001C60 8937                   BT          L1060
    00001C62 A039                   BRA         L1331
    00001C64 0009                   NOP
    00001C66              L1033:                           ; case label 
          WiFi.c   779                case 30001:
          WiFi.c   780                    c = 'A';
          WiFi.c   781                    break;
    00001C66 A037                   BRA         L1331
    00001C68 E741                   MOV         #65,R7
    00001C6A              L1034:                           ; case label 
          WiFi.c   782                case 149:
          WiFi.c   783                    c = 'B';




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 11-Jan-2019 20:05:59  PAGE   80


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          WiFi.c   784                    break;
    00001C6A A035                   BRA         L1331
    00001C6C E742                   MOV         #66,R7
    00001C6E              L1035:                           ; case label 
          WiFi.c   785                case 133:
          WiFi.c   786                    c = 'C';
          WiFi.c   787                    break;
    00001C6E A033                   BRA         L1331
    00001C70 E743                   MOV         #67,R7
    00001C72              L1036:                           ; case label 
          WiFi.c   788                case 129:
          WiFi.c   789                    c = 'D';
          WiFi.c   790                    break;
    00001C72 A031                   BRA         L1331
    00001C74 E744                   MOV         #68,R7
    00001C76              L1037:                           ; case label 
          WiFi.c   791                case 130:
          WiFi.c   792                    c = 'E';
          WiFi.c   793                    break;
    00001C76 A02F                   BRA         L1331
    00001C78 E745                   MOV         #69,R7
    00001C7A              L1038:                           ; case label 
          WiFi.c   794                case 131:
          WiFi.c   795                    c = 'F';
          WiFi.c   796                    break;
    00001C7A A02D                   BRA         L1331
    00001C7C E746                   MOV         #70,R7
    00001C7E              L1039:                           ; case label 
          WiFi.c   797                case 187:
          WiFi.c   798                    c = 'G';
          WiFi.c   799                    break;
    00001C7E A02B                   BRA         L1331
    00001C80 E747                   MOV         #71,R7
    00001C82              L1040:                           ; case label 
          WiFi.c   800                case 30046:
          WiFi.c   801                    c = 'H';
          WiFi.c   802                    break;
    00001C82 A029                   BRA         L1331
    00001C84 E748                   MOV         #72,R7
    00001C86              L1041:                           ; case label 
          WiFi.c   803                case 40:
          WiFi.c   804                    c = 'I';
          WiFi.c   805                    break;
    00001C86 A027                   BRA         L1331
    00001C88 E749                   MOV         #73,R7
    00001C8A              L1042:                           ; case label 
          WiFi.c   806                case 41:
          WiFi.c   807                    c = 'J';
          WiFi.c   808                    break;
    00001C8A A025                   BRA         L1331
    00001C8C E74A                   MOV         #74,R7
    00001C8E              L1043:                           ; case label 
          WiFi.c   809                case 44:
          WiFi.c   810                    c = 'K';
          WiFi.c   811                    break;
    00001C8E A023                   BRA         L1331
    00001C90 E74B                   MOV         #75,R7




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 11-Jan-2019 20:05:59  PAGE   81


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001C92              L1044:                           ; case label 
          WiFi.c   812                case 14:
          WiFi.c   813                    c = 'L';
          WiFi.c   814                    break;
    00001C92 A021                   BRA         L1331
    00001C94 E74C                   MOV         #76,R7
    00001C96              L1045:                           ; case label 
          WiFi.c   815                case 55:
          WiFi.c   816                    c = 'M';
          WiFi.c   817                    break;
    00001C96 A01F                   BRA         L1331
    00001C98 E74D                   MOV         #77,R7
    00001C9A              L1046:                           ; case label 
          WiFi.c   818                case 56:
          WiFi.c   819                    c = 'N';
          WiFi.c   820                    break;
    00001C9A A01D                   BRA         L1331
    00001C9C E74E                   MOV         #78,R7
    00001C9E              L1047:                           ; case label 
          WiFi.c   821                case 57:
          WiFi.c   822                    c = 'O';
          WiFi.c   823                    break;
    00001C9E A01B                   BRA         L1331
    00001CA0 E74F                   MOV         #79,R7
    00001CA2              L1048:                           ; case label 
          WiFi.c   824                case 52:
          WiFi.c   825                    c = 'P';
          WiFi.c   826                    break;
    00001CA2 A019                   BRA         L1331
    00001CA4 E750                   MOV         #80,R7
    00001CA6              L1049:                           ; case label 
          WiFi.c   827                case 53:
          WiFi.c   828                    c = 'Q';
          WiFi.c   829                    break;
    00001CA6 A017                   BRA         L1331
    00001CA8 E751                   MOV         #81,R7
    00001CAA              L1050:                           ; case label 
          WiFi.c   830                case 54:
          WiFi.c   831                    c = 'R';
          WiFi.c   832                    break;
    00001CAA A015                   BRA         L1331
    00001CAC E752                   MOV         #82,R7
    00001CAE              L1051:                           ; case label 
          WiFi.c   833                case 169:
          WiFi.c   834                    c = 'S';
          WiFi.c   835                    break;
    00001CAE A013                   BRA         L1331
    00001CB0 E753                   MOV         #83,R7
    00001CB2              L1052:                           ; case label 
          WiFi.c   836                case 185:
          WiFi.c   837                    c = 'T';
          WiFi.c   838                    break;
    00001CB2 A011                   BRA         L1331
    00001CB4 E754                   MOV         #84,R7
    00001CB6              L1053:                           ; case label 
          WiFi.c   839                case 49:
          WiFi.c   840                    c = 'U';




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 11-Jan-2019 20:05:59  PAGE   82


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          WiFi.c   841                    break;
    00001CB6 A00F                   BRA         L1331
    00001CB8 E755                   MOV         #85,R7
    00001CBA              L1054:                           ; case label 
          WiFi.c   842                case 50:
          WiFi.c   843                    c = 'V';
          WiFi.c   844                    break;
    00001CBA A00D                   BRA         L1331
    00001CBC E756                   MOV         #86,R7
    00001CBE              L1055:                           ; case label 
          WiFi.c   845                case 51:
          WiFi.c   846                    c = 'W';
          WiFi.c   847                    break;
    00001CBE A00B                   BRA         L1331
    00001CC0 E757                   MOV         #87,R7
    00001CC2              L1056:                           ; case label 
          WiFi.c   848                case 137:
          WiFi.c   849                    c = 'X';
          WiFi.c   850                    break;
    00001CC2 A009                   BRA         L1331
    00001CC4 E758                   MOV         #88,R7
    00001CC6              L1057:                           ; case label 
          WiFi.c   851                case 153:
          WiFi.c   852                    c = 'Y';
          WiFi.c   853                    break;
    00001CC6 A007                   BRA         L1331
    00001CC8 E759                   MOV         #89,R7
    00001CCA              L1058:                           ; case label 
          WiFi.c   854                case 48:
          WiFi.c   855                    c = 'Z';
          WiFi.c   856                    break;
    00001CCA A005                   BRA         L1331
    00001CCC E75A                   MOV         #90,R7
    00001CCE              L1059:                           ; case label 
          WiFi.c   857                case 46:
          WiFi.c   858                    c = ' ';
          WiFi.c   859                    break;
    00001CCE A003                   BRA         L1331
    00001CD0 E720                   MOV         #32,R7
    00001CD2              L1060:                           ; case label 
          WiFi.c   860                case 15:
          WiFi.c   861                    c = '\"';
          WiFi.c   862                    break;
    00001CD2 A001                   BRA         L1331
    00001CD4 E722                   MOV         #34,R7
    00001CD6              L1332:                            
          WiFi.c   863            }
          WiFi.c   864        } else {
          WiFi.c   865            c = (unsigned char) key;
    00001CD6 6743                   MOV         R4,R7
    00001CD8              L1331:                            
          WiFi.c   866        }
          WiFi.c   867    
          WiFi.c   868        return c;
          WiFi.c   869    }
    00001CD8 000B                   RTS
    00001CDA 6073                   MOV         R7,R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 11-Jan-2019 20:05:59  PAGE   83


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001CDC              L1399:                            
    00001CDC 0099                   .DATA.W     H'0099
          WiFi.c   870    
          WiFi.c   871    int getKey() {
    00001CDE              _getKey:                         ; function: getKey
                                                           ; frame size=52
    00001CDE 2FE6                   MOV.L       R14,@-R15
    00001CE0 2FD6                   MOV.L       R13,@-R15
    00001CE2 2FC6                   MOV.L       R12,@-R15
    00001CE4 2FB6                   MOV.L       R11,@-R15
    00001CE6 2FA6                   MOV.L       R10,@-R15
    00001CE8 2F96                   MOV.L       R9,@-R15
    00001CEA 2F86                   MOV.L       R8,@-R15
    00001CEC 4F22                   STS.L       PR,@-R15
    00001CEE 7FF4                   ADD         #-12,R15
          WiFi.c   872        int col, row;
          WiFi.c   873        int lastKeyTicks, lastClrTicks;
          WiFi.c   874        unsigned short keycode;
          WiFi.c   875    
          WiFi.c   876        Bdisp_PutDisp_DD();
    00001CF0 D377                   MOV.L       L1400,R3   ; _Bdisp_PutDisp_DD
    00001CF2 430B                   JSR         @R3
    00001CF4 0009                   NOP
          WiFi.c   877    
          WiFi.c   878        Keyboard_ClrBuffer(); // clear the buffer to prevent strange behaviour when hitting the menu key
    00001CF6 DB77                   MOV.L       L1400+4,R11; _Keyboard_ClrBuffer
    00001CF8 4B0B                   JSR         @R11
    00001CFA 0009                   NOP
    00001CFC D876                   MOV.L       L1400+8,R8 ; _Serial_Close
    00001CFE EE00                   MOV         #0,R14
    00001D00 D976                   MOV.L       L1400+12,R9; _RTC_GetTicks
    00001D02 DA77                   MOV.L       L1400+16,R10; _RTC_Elapsed_ms
    00001D04 DD77                   MOV.L       L1400+20,R13; _Keyboard_GetKeyWait
          WiFi.c   879    
          WiFi.c   880        while(true) {
    00001D06              L1337:                            
          WiFi.c   881            lastKeyTicks = RTC_GetTicks();
    00001D06 490B                   JSR         @R9
    00001D08 0009                   NOP
    00001D0A 6C03                   MOV         R0,R12
          WiFi.c   882            while(!RTC_Elapsed_ms(lastKeyTicks, 100)) {
    00001D0C              L1338:                            
    00001D0C E564                   MOV         #100,R5
    00001D0E 4A0B                   JSR         @R10
    00001D10 64C3                   MOV         R12,R4
    00001D12 2008                   TST         R0,R0
    00001D14 89FA                   BT          L1338
          WiFi.c   883            }
          WiFi.c   884    
          WiFi.c   885            if (Keyboard_GetKeyWait(&col, &row, 1, 0, 0, &keycode)) {
    00001D16 63F3                   MOV         R15,R3
    00001D18 7308                   ADD         #8,R3
    00001D1A E700                   MOV         #0,R7
    00001D1C 2F36                   MOV.L       R3,@-R15
    00001D1E E601                   MOV         #1,R6
    00001D20 2FE6                   MOV.L       R14,@-R15
    00001D22 65F3                   MOV         R15,R5




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 11-Jan-2019 20:05:59  PAGE   84


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001D24 750C                   ADD         #12,R5
    00001D26 64F3                   MOV         R15,R4
    00001D28 4D0B                   JSR         @R13
    00001D2A 7408                   ADD         #8,R4
    00001D2C 2008                   TST         R0,R0
    00001D2E 8D16                   BT/S        L1340
    00001D30 7F08                   ADD         #8,R15
          WiFi.c   886                if (col == 4 && row == 9) { // MENU key was pressed
    00001D32 60F2                   MOV.L       @R15,R0
    00001D34 8804                   CMP/EQ      #4,R0
    00001D36 8B16                   BF          L1343
    00001D38 50F1                   MOV.L       @(4,R15),R0
    00001D3A 8809                   CMP/EQ      #9,R0
    00001D3C 8B13                   BF          L1343
          WiFi.c   887                    Serial_Close(1);
    00001D3E 480B                   JSR         @R8
    00001D40 E401                   MOV         #1,R4
          WiFi.c   888                    Keyboard_GetKeyWait(&col, &row, 0, 0, 0, &keycode);
    00001D42 62F3                   MOV         R15,R2
    00001D44 7208                   ADD         #8,R2
    00001D46 E700                   MOV         #0,R7
    00001D48 2F26                   MOV.L       R2,@-R15
    00001D4A 6673                   MOV         R7,R6
    00001D4C 2FE6                   MOV.L       R14,@-R15
    00001D4E 65F3                   MOV         R15,R5
    00001D50 750C                   ADD         #12,R5
    00001D52 64F3                   MOV         R15,R4
    00001D54 4D0B                   JSR         @R13
    00001D56 7408                   ADD         #8,R4
          WiFi.c   889                    openSerial();
    00001D58 D363                   MOV.L       L1400+24,R3; _openSerial
    00001D5A 430B                   JSR         @R3
    00001D5C 7F08                   ADD         #8,R15
    00001D5E              L1340:                            
          WiFi.c   890                } else {
          WiFi.c   891                    break;
          WiFi.c   892                }
          WiFi.c   893            }
          WiFi.c   894    
          WiFi.c   895            Keyboard_ClrBuffer();
    00001D5E 4B0B                   JSR         @R11
    00001D60 0009                   NOP
    00001D62 AFD0                   BRA         L1337
    00001D64 0009                   NOP
    00001D66              L1343:                            
          WiFi.c   896        }
          WiFi.c   897    
          WiFi.c   898        Keyboard_ClrBuffer();
    00001D66 4B0B                   JSR         @R11
    00001D68 0009                   NOP
          WiFi.c   899    
          WiFi.c   900        return (row - 1) * 7 + col - 1;
    00001D6A 50F1                   MOV.L       @(4,R15),R0
    00001D6C 62F2                   MOV.L       @R15,R2
    00001D6E 70FF                   ADD         #-1,R0
    00001D70 6303                   MOV         R0,R3
    00001D72 4008                   SHLL2       R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 11-Jan-2019 20:05:59  PAGE   85


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001D74 4000                   SHLL        R0
    00001D76 3038                   SUB         R3,R0
    00001D78 302C                   ADD         R2,R0
    00001D7A 70FF                   ADD         #-1,R0
          WiFi.c   901    }
    00001D7C 7F0C                   ADD         #12,R15
    00001D7E 4F26                   LDS.L       @R15+,PR
    00001D80 68F6                   MOV.L       @R15+,R8
    00001D82 69F6                   MOV.L       @R15+,R9
    00001D84 6AF6                   MOV.L       @R15+,R10
    00001D86 6BF6                   MOV.L       @R15+,R11
    00001D88 6CF6                   MOV.L       @R15+,R12
    00001D8A 6DF6                   MOV.L       @R15+,R13
    00001D8C 000B                   RTS
    00001D8E 6EF6                   MOV.L       @R15+,R14
          WiFi.c   902    
          WiFi.c   903    void drawProgressBar(int y, float value) {
    00001D90              _drawProgressBar:                ; function: drawProgressBar
                                                           ; frame size=72
                                                           ; used runtime library name:
                                                           ; __muld, __stod, __dtoi
    00001D90 2FE6                   MOV.L       R14,@-R15
          WiFi.c   904        int length = (int) (121.0  * value);
    00001D92 6053                   MOV         R5,R0
    00001D94 D355                   MOV.L       L1400+28,R3; __stod
    00001D96 6E43                   MOV         R4,R14
    00001D98 2FD6                   MOV.L       R13,@-R15
    00001D9A 2FC6                   MOV.L       R12,@-R15
    00001D9C 4F22                   STS.L       PR,@-R15
    00001D9E 7FE4                   ADD         #-28,R15
    00001DA0 7FF0                   ADD         #-16,R15
    00001DA2 430B                   JSR         @R3
    00001DA4 2FF6                   MOV.L       R15,@-R15
    00001DA6 E200                   MOV         #0,R2
    00001DA8 D152                   MOV.L       L1400+36,R1; __muld
    00001DAA 2F26                   MOV.L       R2,@-R15
    00001DAC D250                   MOV.L       L1400+32,R2; H'405E4000
    00001DAE 2F26                   MOV.L       R2,@-R15
    00001DB0 63F3                   MOV         R15,R3
    00001DB2 7310                   ADD         #16,R3
    00001DB4 410B                   JSR         @R1
    00001DB6 2F36                   MOV.L       R3,@-R15
    00001DB8 D24F                   MOV.L       L1400+40,R2; __dtoi
    00001DBA 420B                   JSR         @R2
    00001DBC 0009                   NOP
          WiFi.c   905        DISPBOX dispBox;
          WiFi.c   906    
          WiFi.c   907        dispBox.left = 1;
    00001DBE E301                   MOV         #1,R3
    00001DC0 2F02                   MOV.L       R0,@R15
          WiFi.c   908        dispBox.top = y;
          WiFi.c   909        dispBox.right = 126;
          WiFi.c   910        dispBox.bottom = y + 5;
    00001DC2 6CE3                   MOV         R14,R12
    00001DC4 1F33                   MOV.L       R3,@(12,R15)
          WiFi.c   911    
          WiFi.c   912         Bdisp_AreaClr_DD(&dispBox);




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 11-Jan-2019 20:05:59  PAGE   86


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001DC6 64F3                   MOV         R15,R4
    00001DC8 1FE4                   MOV.L       R14,@(16,R15)
    00001DCA E37E                   MOV         #126,R3
    00001DCC 1F35                   MOV.L       R3,@(20,R15)
    00001DCE 7C05                   ADD         #5,R12
    00001DD0 D34A                   MOV.L       L1400+44,R3; _Bdisp_AreaClr_DD
    00001DD2 1FC6                   MOV.L       R12,@(24,R15)
    00001DD4 430B                   JSR         @R3
    00001DD6 740C                   ADD         #12,R4
          WiFi.c   913    
          WiFi.c   914        Bdisp_DrawLineVRAM(1, y, 126, y);
    00001DD8 DD49                   MOV.L       L1400+48,R13; _Bdisp_DrawLineVRAM
    00001DDA 67E3                   MOV         R14,R7
    00001DDC E67E                   MOV         #126,R6
    00001DDE 65E3                   MOV         R14,R5
    00001DE0 4D0B                   JSR         @R13
    00001DE2 E401                   MOV         #1,R4
          WiFi.c   915        Bdisp_DrawLineVRAM(1, y + 5, 126, y + 5);
    00001DE4 67C3                   MOV         R12,R7
    00001DE6 E67E                   MOV         #126,R6
    00001DE8 65C3                   MOV         R12,R5
    00001DEA 4D0B                   JSR         @R13
    00001DEC E401                   MOV         #1,R4
          WiFi.c   916        Bdisp_DrawLineVRAM(1, y, 1, y + 5);
    00001DEE 67C3                   MOV         R12,R7
    00001DF0 E601                   MOV         #1,R6
    00001DF2 65E3                   MOV         R14,R5
    00001DF4 4D0B                   JSR         @R13
    00001DF6 6463                   MOV         R6,R4
          WiFi.c   917        Bdisp_DrawLineVRAM(126, y, 126, y + 5);
    00001DF8 67C3                   MOV         R12,R7
    00001DFA E67E                   MOV         #126,R6
    00001DFC 65E3                   MOV         R14,R5
    00001DFE 4D0B                   JSR         @R13
    00001E00 6463                   MOV         R6,R4
          WiFi.c   918    
          WiFi.c   919        Bdisp_DrawLineVRAM(3, y + 2, 3 + length, y + 2);
    00001E02 67E3                   MOV         R14,R7
    00001E04 7702                   ADD         #2,R7
    00001E06 1F72                   MOV.L       R7,@(8,R15)
    00001E08 66F2                   MOV.L       @R15,R6
    00001E0A 7603                   ADD         #3,R6
    00001E0C 1F61                   MOV.L       R6,@(4,R15)
    00001E0E 55F2                   MOV.L       @(8,R15),R5
    00001E10 4D0B                   JSR         @R13
    00001E12 E403                   MOV         #3,R4
          WiFi.c   920        Bdisp_DrawLineVRAM(3, y + 3, 3 + length, y + 3);
    00001E14 67E3                   MOV         R14,R7
    00001E16 7703                   ADD         #3,R7
    00001E18 2F72                   MOV.L       R7,@R15
    00001E1A 6573                   MOV         R7,R5
    00001E1C 56F1                   MOV.L       @(4,R15),R6
    00001E1E 4D0B                   JSR         @R13
    00001E20 E403                   MOV         #3,R4
          WiFi.c   921    
          WiFi.c   922        Bdisp_PutDispArea_DD(&dispBox);
    00001E22 64F3                   MOV         R15,R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 11-Jan-2019 20:05:59  PAGE   87


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001E24 D337                   MOV.L       L1400+52,R3; _Bdisp_PutDispArea_DD
    00001E26 430B                   JSR         @R3
    00001E28 740C                   ADD         #12,R4
          WiFi.c   923    }
    00001E2A 7F1C                   ADD         #28,R15
    00001E2C 4F26                   LDS.L       @R15+,PR
    00001E2E 6CF6                   MOV.L       @R15+,R12
    00001E30 6DF6                   MOV.L       @R15+,R13
    00001E32 000B                   RTS
    00001E34 6EF6                   MOV.L       @R15+,R14
          WiFi.c   924    
          WiFi.c   925    void sendData(unsigned char* buffer, int length){
    00001E36              _sendData:                       ; function: sendData
                                                           ; frame size=80
    00001E36 2FE6                   MOV.L       R14,@-R15
    00001E38 2FD6                   MOV.L       R13,@-R15
    00001E3A 2FC6                   MOV.L       R12,@-R15
    00001E3C 2FB6                   MOV.L       R11,@-R15
    00001E3E 6B53                   MOV         R5,R11
    00001E40 DC31                   MOV.L       L1400+56,R12; _Serial_BufferedTransmitNBytes
    00001E42 2FA6                   MOV.L       R10,@-R15
    00001E44 2F96                   MOV.L       R9,@-R15
    00001E46 2F86                   MOV.L       R8,@-R15
    00001E48 4F22                   STS.L       PR,@-R15
    00001E4A E801                   MOV         #1,R8
    00001E4C 7FD0                   ADD         #-48,R15
    00001E4E 69F3                   MOV         R15,R9
    00001E50 2F42                   MOV.L       R4,@R15
    00001E52 7904                   ADD         #4,R9
          WiFi.c   926            do{
    00001E54              L1345:                            
          WiFi.c   927                    unsigned char cs[4];
          WiFi.c   928                    unsigned char* len[10];
          WiFi.c   929                    int counter=0;
          WiFi.c   930                    int transmitCount;
          WiFi.c   931                    
          WiFi.c   932                    sendCommand("DATA");
    00001E54 D42D                   MOV.L       L1400+60,R4; L469
    00001E56 D32E                   MOV.L       L1400+64,R3; _sendCommand
    00001E58 430B                   JSR         @R3
    00001E5A ED00                   MOV         #0,R13
          WiFi.c   933                    
          WiFi.c   934                    itoa(length,10,len);
    00001E5C 6693                   MOV         R9,R6
    00001E5E E50A                   MOV         #10,R5
    00001E60 B085                   BSR         _itoa
    00001E62 64B3                   MOV         R11,R4
          WiFi.c   935            
          WiFi.c   936                    Serial_BufferedTransmitNBytes(len,10);
    00001E64 E50A                   MOV         #10,R5
    00001E66 4C0B                   JSR         @R12
    00001E68 6493                   MOV         R9,R4
          WiFi.c   937                    checksum(buffer,length,cs);
    00001E6A 66F3                   MOV         R15,R6
    00001E6C 762C                   ADD         #44,R6
    00001E6E 65B3                   MOV         R11,R5
    00001E70 B058                   BSR         _checksum




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 11-Jan-2019 20:05:59  PAGE   88


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001E72 64F2                   MOV.L       @R15,R4
          WiFi.c   938                    Serial_BufferedTransmitNBytes(cs,4);
    00001E74 E504                   MOV         #4,R5
    00001E76 64F3                   MOV         R15,R4
    00001E78 4C0B                   JSR         @R12
    00001E7A 742C                   ADD         #44,R4
          WiFi.c   939                    
          WiFi.c   940                    while(counter<length){
    00001E7C A012                   BRA         L1346
    00001E7E 0009                   NOP
    00001E80              L1347:                            
    00001E80 6AF2                   MOV.L       @R15,R10
          WiFi.c   941                            transmitCount=length-counter;
    00001E82 6EB3                   MOV         R11,R14
    00001E84 3ED8                   SUB         R13,R14
          WiFi.c   942                            while(Serial_BufferedTransmitNBytes(&buffer[counter],transmitCount)!=0){
    00001E86 A007                   BRA         L1348
    00001E88 3ADC                   ADD         R13,R10
    00001E8A              L1349:                            
          WiFi.c   943                                    transmitCount=(int)transmitCount/2;
    00001E8A E300                   MOV         #0,R3
    00001E8C 33E7                   CMP/GT      R14,R3
    00001E8E 3E3E                   ADDC        R3,R14
    00001E90 4E21                   SHAR        R14
          WiFi.c   944                                    if(transmitCount==0){
    00001E92 2EE8                   TST         R14,R14
    00001E94 8B00                   BF          L1348
          WiFi.c   945                                            transmitCount=1;
    00001E96 6E83                   MOV         R8,R14
    00001E98              L1348:                            
    00001E98 65E3                   MOV         R14,R5
    00001E9A 4C0B                   JSR         @R12
    00001E9C 64A3                   MOV         R10,R4
    00001E9E 2008                   TST         R0,R0
    00001EA0 8BF3                   BF          L1349
          WiFi.c   946                                    }
          WiFi.c   947                            }
          WiFi.c   948                            counter+=transmitCount;
    00001EA2 3DEC                   ADD         R14,R13
    00001EA4              L1346:                            
    00001EA4 3DB3                   CMP/GE      R11,R13
    00001EA6 8BEB                   BF          L1347
          WiFi.c   949                    }
          WiFi.c   950                    
          WiFi.c   951                    receiveStatus();
    00001EA8 D31A                   MOV.L       L1400+68,R3; _receiveStatus
    00001EAA 430B                   JSR         @R3
    00001EAC 0009                   NOP
          WiFi.c   952            }while(memcmp(status,"OK",2)==0);
    00001EAE D51A                   MOV.L       L1400+72,R5; L482
    00001EB0 D41A                   MOV.L       L1400+76,R4; _status
    00001EB2 D21B                   MOV.L       L1400+80,R2; _memcmp
    00001EB4 420B                   JSR         @R2
    00001EB6 E602                   MOV         #2,R6
    00001EB8 2008                   TST         R0,R0
    00001EBA 89CB                   BT          L1345
          WiFi.c   953    }




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 11-Jan-2019 20:05:59  PAGE   89


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001EBC 7F30                   ADD         #48,R15
    00001EBE 4F26                   LDS.L       @R15+,PR
    00001EC0 68F6                   MOV.L       @R15+,R8
    00001EC2 69F6                   MOV.L       @R15+,R9
    00001EC4 6AF6                   MOV.L       @R15+,R10
    00001EC6 6BF6                   MOV.L       @R15+,R11
    00001EC8 6CF6                   MOV.L       @R15+,R12
    00001ECA 6DF6                   MOV.L       @R15+,R13
    00001ECC 000B                   RTS
    00001ECE 6EF6                   MOV.L       @R15+,R14
    00001ED0              L1400:                            
    00001ED0 <00000000>             .DATA.L     _Bdisp_PutDisp_DD
    00001ED4 <00000000>             .DATA.L     _Keyboard_ClrBuffer
    00001ED8 <00000000>             .DATA.L     _Serial_Close
    00001EDC <00000000>             .DATA.L     _RTC_GetTicks
    00001EE0 <00000000>             .DATA.L     _RTC_Elapsed_ms
    00001EE4 <00000000>             .DATA.L     _Keyboard_GetKeyWait
    00001EE8 <00000000>             .DATA.L     _openSerial
    00001EEC <00000000>             .DATA.L     __stod
    00001EF0 405E4000               .DATA.L     H'405E4000
    00001EF4 <00000000>             .DATA.L     __muld
    00001EF8 <00000000>             .DATA.L     __dtoi
    00001EFC <00000000>             .DATA.L     _Bdisp_AreaClr_DD
    00001F00 <00000000>             .DATA.L     _Bdisp_DrawLineVRAM
    00001F04 <00000000>             .DATA.L     _Bdisp_PutDispArea_DD
    00001F08 <00000000>             .DATA.L     _Serial_BufferedTransmitNBytes
    00001F0C <00000000>             .DATA.L     L469
    00001F10 <00000000>             .DATA.L     _sendCommand
    00001F14 <00000000>             .DATA.L     _receiveStatus
    00001F18 <00000000>             .DATA.L     L482
    00001F1C <00000000>             .DATA.L     _status
    00001F20 <00000000>             .DATA.L     _memcmp
          WiFi.c   954    
          WiFi.c   955    void checksum(unsigned char* data,int length, unsigned char* csbuffer){
    00001F24              _checksum:                       ; function: checksum
                                                           ; frame size=40
                                                           ; used runtime library name:
                                                           ; __modls
    00001F24 2FE6                   MOV.L       R14,@-R15
          WiFi.c   956            int i;
          WiFi.c   957            int checksum=0;
    00001F26 E700                   MOV         #0,R7
    00001F28 4F22                   STS.L       PR,@-R15
          WiFi.c   958            unsigned char* checksumBuf[5];
          WiFi.c   959            
          WiFi.c   960            for(i=0;i<length;i=i+1){
    00001F2A 4515                   CMP/PL      R5
    00001F2C 7FE8                   ADD         #-24,R15
    00001F2E 6E73                   MOV         R7,R14
    00001F30 2F62                   MOV.L       R6,@R15
    00001F32 8F06                   BF/S        L1351
    00001F34 6673                   MOV         R7,R6
    00001F36              L1352:                            
    00001F36 7601                   ADD         #1,R6
          WiFi.c   961                    checksum+=(int)data[i];
    00001F38 6344                   MOV.B       @R4+,R3
    00001F3A 3653                   CMP/GE      R5,R6




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 11-Jan-2019 20:05:59  PAGE   90


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001F3C 633C                   EXTU.B      R3,R3
    00001F3E 8FFA                   BF/S        L1352
    00001F40 3E3C                   ADD         R3,R14
    00001F42              L1351:                            
          WiFi.c   962            }
          WiFi.c   963            
          WiFi.c   964            checksum=checksum%10000;
    00001F42 906E                   MOV.W       L1401,R0   ; H'2710
    00001F44 D337                   MOV.L       L1401+2,R3 ; __modls
    00001F46 430B                   JSR         @R3
    00001F48 61E3                   MOV         R14,R1
    00001F4A 6E03                   MOV         R0,R14
          WiFi.c   965            
          WiFi.c   966            sprintf(checksumBuf,"%04d",checksum);
    00001F4C 2F06                   MOV.L       R0,@-R15
    00001F4E D236                   MOV.L       L1401+6,R2 ; L940
    00001F50 D336                   MOV.L       L1401+10,R3; _sprintf
    00001F52 2F26                   MOV.L       R2,@-R15
    00001F54 64F3                   MOV         R15,R4
    00001F56 430B                   JSR         @R3
    00001F58 740C                   ADD         #12,R4
          WiFi.c   967            memcpy(csbuffer,checksumBuf,4);
    00001F5A E604                   MOV         #4,R6
    00001F5C D334                   MOV.L       L1401+14,R3; _memcpy
    00001F5E 65F3                   MOV         R15,R5
    00001F60 750C                   ADD         #12,R5
    00001F62 430B                   JSR         @R3
    00001F64 54F2                   MOV.L       @(8,R15),R4
          WiFi.c   968            //itoa(checksum,4,csbuffer);
          WiFi.c   969    }
    00001F66 7F20                   ADD         #32,R15
    00001F68 4F26                   LDS.L       @R15+,PR
    00001F6A 000B                   RTS
    00001F6C 6EF6                   MOV.L       @R15+,R14
          WiFi.c   970    
          WiFi.c   971    void itoa(int integer,int len,unsigned char* data){
    00001F6E              _itoa:                           ; function: itoa
                                                           ; frame size=32
                                                           ; used runtime library name:
                                                           ; __divls
    00001F6E 2FE6                   MOV.L       R14,@-R15
    00001F70 2FD6                   MOV.L       R13,@-R15
    00001F72 2FC6                   MOV.L       R12,@-R15
    00001F74 2FB6                   MOV.L       R11,@-R15
    00001F76 6C43                   MOV         R4,R12
    00001F78 2FA6                   MOV.L       R10,@-R15
    00001F7A 6A53                   MOV         R5,R10
          WiFi.c   972            int i=0;
          WiFi.c   973            int z=0;
          WiFi.c   974            
          WiFi.c   975            for(i=len-1;i>=0;i=i-1){
    00001F7C DB2D                   MOV.L       L1401+18,R11; _pow
    00001F7E 6EA3                   MOV         R10,R14
    00001F80 4F22                   STS.L       PR,@-R15
    00001F82 7EFF                   ADD         #-1,R14
    00001F84 4F12                   STS.L       MACL,@-R15
    00001F86 4E11                   CMP/PZ      R14




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 11-Jan-2019 20:05:59  PAGE   91


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001F88 7FFC                   ADD         #-4,R15
    00001F8A 8F17                   BF/S        L1353
    00001F8C 2F62                   MOV.L       R6,@R15
    00001F8E              L1354:                            
          WiFi.c   976                    z=(int)(integer/pow(10,i));
    00001F8E 65E3                   MOV         R14,R5
    00001F90 4B0B                   JSR         @R11
    00001F92 E40A                   MOV         #10,R4
    00001F94 D228                   MOV.L       L1401+22,R2; __divls
    00001F96 420B                   JSR         @R2
    00001F98 61C3                   MOV         R12,R1
    00001F9A 6D03                   MOV         R0,R13
          WiFi.c   977                    data[len-1-i]=z+48;
    00001F9C 60F2                   MOV.L       @R15,R0
    00001F9E 62D3                   MOV         R13,R2
    00001FA0 63A3                   MOV         R10,R3
    00001FA2 33E8                   SUB         R14,R3
    00001FA4 73FF                   ADD         #-1,R3
    00001FA6 7230                   ADD         #48,R2
    00001FA8 0324                   MOV.B       R2,@(R0,R3)
          WiFi.c   978                    integer=integer-(z*pow(10,i));
    00001FAA 65E3                   MOV         R14,R5
    00001FAC 4B0B                   JSR         @R11
    00001FAE E40A                   MOV         #10,R4
    00001FB0 0D07                   MUL.L       R0,R13
    00001FB2 7EFF                   ADD         #-1,R14
    00001FB4 0D1A                   STS         MACL,R13
    00001FB6 4E11                   CMP/PZ      R14
    00001FB8 8DE9                   BT/S        L1354
    00001FBA 3CD8                   SUB         R13,R12
    00001FBC              L1353:                            
          WiFi.c   979            }
          WiFi.c   980    }
    00001FBC 7F04                   ADD         #4,R15
    00001FBE 4F16                   LDS.L       @R15+,MACL
    00001FC0 4F26                   LDS.L       @R15+,PR
    00001FC2 6AF6                   MOV.L       @R15+,R10
    00001FC4 6BF6                   MOV.L       @R15+,R11
    00001FC6 6CF6                   MOV.L       @R15+,R12
    00001FC8 6DF6                   MOV.L       @R15+,R13
    00001FCA 000B                   RTS
    00001FCC 6EF6                   MOV.L       @R15+,R14
          WiFi.c   981    
          WiFi.c   982    void drawImage(unsigned char* d){
    00001FCE              _drawImage:                      ; function: drawImage
                                                           ; frame size=52
    00001FCE 2FE6                   MOV.L       R14,@-R15
    00001FD0 2FD6                   MOV.L       R13,@-R15
    00001FD2 2FC6                   MOV.L       R12,@-R15
    00001FD4 2FB6                   MOV.L       R11,@-R15
    00001FD6 2FA6                   MOV.L       R10,@-R15
    00001FD8 2F96                   MOV.L       R9,@-R15
    00001FDA 2F86                   MOV.L       R8,@-R15
    00001FDC 4F22                   STS.L       PR,@-R15
    00001FDE 7FEC                   ADD         #-20,R15
          WiFi.c   983            unsigned int startTicks = RTC_GetTicks();
    00001FE0 D316                   MOV.L       L1401+26,R3; _RTC_GetTicks




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 11-Jan-2019 20:05:59  PAGE   92


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001FE2 430B                   JSR         @R3
    00001FE4 2F42                   MOV.L       R4,@R15
          WiFi.c   984            unsigned int width;
          WiFi.c   985            unsigned int lineLengthBit;
          WiFi.c   986            unsigned int heigth;
          WiFi.c   987            unsigned int line;
          WiFi.c   988            unsigned int y;
          WiFi.c   989            unsigned int bitCounter;
          WiFi.c   990            
          WiFi.c   991            unsigned int xOffset=5;
          WiFi.c   992            unsigned int yOffset=5;
          WiFi.c   993            
          WiFi.c   994            unsigned int i;
          WiFi.c   995            unsigned int counter;
          WiFi.c   996            
          WiFi.c   997            unsigned int startOffset;
          WiFi.c   998            
          WiFi.c   999            unsigned short  actuallyReceived;
          WiFi.c  1000            //unsigned char* d;
          WiFi.c  1001            unsigned char currentByteToRead;
          WiFi.c  1002            unsigned char modifiedByte;
          WiFi.c  1003            
          WiFi.c  1004            //d=receiveData(60000,&actuallyReceived);
          WiFi.c  1005            //d=testPicture;
          WiFi.c  1006            
          WiFi.c  1007            Bdisp_AllClr_DDVRAM;
          WiFi.c  1008            
          WiFi.c  1009            startOffset=(int)d[10];
          WiFi.c  1010            width=(int)d[18];
          WiFi.c  1011            heigth=(int)d[22];
          WiFi.c  1012            
          WiFi.c  1013            counter=startOffset;
          WiFi.c  1014            lineLengthBit=width+(32-(width%32));
    00001FE6 E31F                   MOV         #31,R3
    00001FE8 6EF2                   MOV.L       @R15,R14
    00001FEA E800                   MOV         #0,R8
    00001FEC 84EA                   MOV.B       @(10,R14),R0
    00001FEE 690C                   EXTU.B      R0,R9
    00001FF0 E012                   MOV         #18,R0
    00001FF2 04EC                   MOV.B       @(R0,R14),R4
    00001FF4 644C                   EXTU.B      R4,R4
    00001FF6 E016                   MOV         #22,R0
    00001FF8 06EC                   MOV.B       @(R0,R14),R6
    00001FFA 2349                   AND         R4,R3
    00001FFC 666C                   EXTU.B      R6,R6
    00001FFE 6543                   MOV         R4,R5
    00002000 3538                   SUB         R3,R5
    00002002 7520                   ADD         #32,R5
          WiFi.c  1015            
          WiFi.c  1016            for(i=heigth;i>0;i=i-1){
    00002004 6B63                   MOV         R6,R11
    00002006 4509                   SHLR2       R5
    00002008 4501                   SHLR        R5
    0000200A A042                   BRA         L1355
    0000200C 1F54                   MOV.L       R5,@(16,R15)
    0000200E              L1356:                            
          WiFi.c  1017                    for(y=0;y<(lineLengthBit/8);y++){




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 11-Jan-2019 20:05:59  PAGE   93


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000200E 6A83                   MOV         R8,R10
    00002010 6CF2                   MOV.L       @R15,R12
    00002012 63B3                   MOV         R11,R3
    00002014 3C9C                   ADD         R9,R12
    00002016 7305                   ADD         #5,R3
    00002018 1F32                   MOV.L       R3,@(8,R15)
    0000201A 62B3                   MOV         R11,R2
    0000201C 7205                   ADD         #5,R2
    0000201E A034                   BRA         L1357
    00002020 1F21                   MOV.L       R2,@(4,R15)
    00002022              L1401:                            
    00002022 2710                   .DATA.W     H'2710
    00002024 <00000000>             .DATA.L     __modls
    00002028 <00000000>             .DATA.L     L940
    0000202C <00000000>             .DATA.L     _sprintf
    00002030 <00000000>             .DATA.L     _memcpy
    00002034 <00000000>             .DATA.L     _pow
    00002038 <00000000>             .DATA.L     __divls
    0000203C <00000000>             .DATA.L     _RTC_GetTicks
    00002040              L1358:                            
          WiFi.c  1018                            currentByteToRead=d[counter];
    00002040 60C0                   MOV.B       @R12,R0
          WiFi.c  1019                            for(bitCounter=0;bitCounter<8;bitCounter=bitCounter+1){
    00002042 6E83                   MOV         R8,R14
    00002044 80FC                   MOV.B       R0,@(12,R15)
    00002046 6DA3                   MOV         R10,R13
    00002048 4D08                   SHLL2       R13
    0000204A 4D00                   SHLL        R13
    0000204C              L1359:                            
          WiFi.c  1020                                    modifiedByte=currentByteToRead<<bitCounter;
    0000204C 84FC                   MOV.B       @(12,R15),R0
          WiFi.c  1021                                    modifiedByte=modifiedByte>>7;
    0000204E E2F9                   MOV         #-7,R2
    00002050 600C                   EXTU.B      R0,R0
    00002052 40ED                   SHLD        R14,R0
    00002054 6403                   MOV         R0,R4
    00002056 634C                   EXTU.B      R4,R3
    00002058 432D                   SHLD        R2,R3
    0000205A 6433                   MOV         R3,R4
          WiFi.c  1022                                    if(modifiedByte==1){
    0000205C 604C                   EXTU.B      R4,R0
    0000205E 8801                   CMP/EQ      #1,R0
    00002060 8B0C                   BF          L1360
          WiFi.c  1023                                            Bdisp_AreaReverseVRAM(y*8+bitCounter+yOffset,i+xOffset,y*8+bitCoun
                         +ter+yOffset,i+xOffset);
    00002062 66D3                   MOV         R13,R6
    00002064 55F1                   MOV.L       @(4,R15),R5
    00002066 64D3                   MOV         R13,R4
    00002068 D311                   MOV.L       L1402+2,R3 ; _Bdisp_AreaReverseVRAM
    0000206A 36EC                   ADD         R14,R6
    0000206C 57F2                   MOV.L       @(8,R15),R7
    0000206E 34EC                   ADD         R14,R4
    00002070 7605                   ADD         #5,R6
    00002072 430B                   JSR         @R3
    00002074 7405                   ADD         #5,R4
          WiFi.c  1024                                            Bdisp_PutDisp_DD();
    00002076 D20F                   MOV.L       L1402+6,R2 ; _Bdisp_PutDisp_DD




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 11-Jan-2019 20:05:59  PAGE   94


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00002078 420B                   JSR         @R2
    0000207A 0009                   NOP
    0000207C              L1360:                            
    0000207C 7E01                   ADD         #1,R14
    0000207E E308                   MOV         #8,R3
    00002080 3E32                   CMP/HS      R3,R14
    00002082 8BE3                   BF          L1359
          WiFi.c  1025                                    }
          WiFi.c  1026                            }
          WiFi.c  1027                            counter=counter+1;
    00002084 7901                   ADD         #1,R9
    00002086 7C01                   ADD         #1,R12
    00002088 7A01                   ADD         #1,R10
    0000208A              L1357:                            
    0000208A 53F4                   MOV.L       @(16,R15),R3
    0000208C 3A32                   CMP/HS      R3,R10
    0000208E 8BD7                   BF          L1358
    00002090 7BFF                   ADD         #-1,R11
    00002092              L1355:                            
    00002092 E300                   MOV         #0,R3
    00002094 3B36                   CMP/HI      R3,R11
    00002096 89BA                   BT          L1356
          WiFi.c  1028                    }
          WiFi.c  1029            }
          WiFi.c  1030            Bdisp_PutDisp_DD();
    00002098 D106                   MOV.L       L1402+6,R1 ; _Bdisp_PutDisp_DD
    0000209A 7F14                   ADD         #20,R15
    0000209C 4F26                   LDS.L       @R15+,PR
    0000209E 68F6                   MOV.L       @R15+,R8
    000020A0 69F6                   MOV.L       @R15+,R9
    000020A2 6AF6                   MOV.L       @R15+,R10
    000020A4 6BF6                   MOV.L       @R15+,R11
    000020A6 6CF6                   MOV.L       @R15+,R12
    000020A8 6DF6                   MOV.L       @R15+,R13
    000020AA 412B                   JMP         @R1
    000020AC 6EF6                   MOV.L       @R15+,R14
    000020AE              L1402:                            
    000020AE 0000                   .DATA.W     0
    000020B0 <00000000>             .DATA.L     _Bdisp_AreaReverseVRAM
    000020B4 <00000000>             .DATA.L     _Bdisp_PutDisp_DD
          WiFi.c  1031    }
          WiFi.c  1032    
          WiFi.c  1033    
          WiFi.c  1034    //****************************************************************************
          WiFi.c  1035    //**************                                              ****************
          WiFi.c  1036    //**************                 Notice!                      ****************
          WiFi.c  1037    //**************                                              ****************
          WiFi.c  1038    //**************  Please do not change the following source.  ****************
          WiFi.c  1039    //**************                                              ****************
          WiFi.c  1040    //****************************************************************************
          WiFi.c  1041    
          WiFi.c  1042    
          WiFi.c  1043    #pragma section _BR_Size
          WiFi.c  1044    unsigned long BR_Size;
          WiFi.c  1045    #pragma section
          WiFi.c  1046    
          WiFi.c  1047    




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 11-Jan-2019 20:05:59  PAGE   95


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          WiFi.c  1048    #pragma section _TOP
          WiFi.c  1049    
          WiFi.c  1050    //****************************************************************************
          WiFi.c  1051    //  InitializeSystem
          WiFi.c  1052    //
          WiFi.c  1053    //  param   :   isAppli   : 1 = Application / 0 = eActivity
          WiFi.c  1054    //              OptionNum : Option Number (only eActivity)
          WiFi.c  1055    //
          WiFi.c  1056    //  retval  :   1 = No error / 0 = Error
          WiFi.c  1057    //
          WiFi.c  1058    //****************************************************************************
          WiFi.c  1059    int InitializeSystem(int isAppli, unsigned short OptionNum)
P_T 00000000              _InitializeSystem:               ; function: InitializeSystem
                                                           ; frame size=0
          WiFi.c  1060    {
          WiFi.c  1061        return INIT_ADDIN_APPLICATION(isAppli, OptionNum);
    00000000 D301                   MOV.L       L1403+2,R3 ; _INIT_ADDIN_APPLICATION
    00000002 432B                   JMP         @R3
    00000004 0009                   NOP
    00000006              L1403:                            
    00000006 0000                   .DATA.W     0
    00000008 <00000000>             .DATA.L     _INIT_ADDIN_APPLICATION
          WiFi.c  1062    }
          WiFi.c  1063    
          WiFi.c  1064    #pragma section
          WiFi.c  1065    
C   00000000              L469:
    00000000 44415441               .SDATA      "DATA"
    00000004 00                     .DATA.B     H'00
    00000005 00000001               .RES.B      1
    00000006 00000002               .RES.W      1
    00000008              L480:
    00000008 4445                   .SDATA      "DE"
    0000000A 00                     .DATA.B     H'00
    0000000B 00000001               .RES.B      1
    0000000C              L482:
    0000000C 4F4B                   .SDATA      "OK"
    0000000E 00                     .DATA.B     H'00
    0000000F 00000001               .RES.B      1
    00000010              L503:
    00000010 4E45544441             .SDATA      "NETDATA"
             5441         
    00000017 00                     .DATA.B     H'00
    00000018              L505:
    00000018 4E45544441             .SDATA      "NETDATAUDP"
             5441554450   
    00000022 00                     .DATA.B     H'00
    00000023 00000001               .RES.B      1
    00000024              L506:
    00000024 2575                   .SDATA      "%u"
    00000026 00                     .DATA.B     H'00
    00000027 00000001               .RES.B      1
    00000028              L551:
    00000028 4745544E45             .SDATA      "GETNETS"
             5453         
    0000002F 00                     .DATA.B     H'00
    00000030              L567:




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 11-Jan-2019 20:05:59  PAGE   96


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000030 434F4E4E45             .SDATA      "CONNECT"
             4354         
    00000037 00                     .DATA.B     H'00
    00000038              L568:
    00000038 2564                   .SDATA      "%d"
    0000003A 00                     .DATA.B     H'00
    0000003B 00000001               .RES.B      1
    0000003C              L572:
    0000003C 444953434F             .SDATA      "DISCONNECT"
             4E4E454354   
    00000046 00                     .DATA.B     H'00
    00000047 00000001               .RES.B      1
    00000048              L578:
    00000048 4745544E45             .SDATA      "GETNETINFO"
             54494E464F   
    00000052 00                     .DATA.B     H'00
    00000053 00000001               .RES.B      1
    00000054              L590:
    00000054 5354415254             .SDATA      "STARTAP"
             4150         
    0000005B 00                     .DATA.B     H'00
    0000005C              L594:
    0000005C 53544F5041             .SDATA      "STOPAP"
             50           
    00000062 00                     .DATA.B     H'00
    00000063 00000001               .RES.B      1
    00000064              L600:
    00000064 5543                   .SDATA      "UC"
    00000066 00                     .DATA.B     H'00
    00000067 00000001               .RES.B      1
    00000068              L602:
    00000068 544F                   .SDATA      "TO"
    0000006A 00                     .DATA.B     H'00
    0000006B 00000001               .RES.B      1
    0000006C              L604:
    0000006C 4F46                   .SDATA      "OF"
    0000006E 00                     .DATA.B     H'00
    0000006F              L628:
    0000006F E69B00                 .DATA.B     H'E6,H'9B,H'00
    00000072              L630:
    00000072 E69200                 .DATA.B     H'E6,H'92,H'00
    00000075              L632:
    00000075 E69300                 .DATA.B     H'E6,H'93,H'00
    00000078              _filename:                       ; static: filename
    00000078 005C005C00             .DATA.W     H'005C,H'005C,H'0066,H'006C,H'0073,H'0030,H'005C,H'0054,H'0045,H'0053,H'0054,H'002E,
             66006C0073 +                       H'0067,H'0031,H'0061,H'0000
             0030005C00   
             5400450053   
             0054002E00   
             6700310061   
             0000         
    00000098              L722:
    00000098 436F6E6E65             .SDATA      "Connect"
             6374         
    0000009F 00                     .DATA.B     H'00
    000000A0              L723:
    000000A0 446973636F             .SDATA      "Disconnect"




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 11-Jan-2019 20:05:59  PAGE   97


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             6E6E656374   
    000000AA 00                     .DATA.B     H'00
    000000AB 00000001               .RES.B      1
    000000AC              L724:
    000000AC 42726F7773             .SDATA      "Browse"
             65           
    000000B2 00                     .DATA.B     H'00
    000000B3 00000001               .RES.B      1
    000000B4              L725:
    000000B4 4765742062             .SDATA      "Get by ID"
             79204944     
    000000BD 00                     .DATA.B     H'00
    000000BE 00000002               .RES.W      1
    000000C0              L734:
    000000C0 5363616E6E             .SDATA      "Scanning..."
             696E672E2E   
             2E           
    000000CB 00                     .DATA.B     H'00
    000000CC              L772:
    000000CC 53656C6563             .SDATA      "Select Network:"
             74204E6574   
             776F726B3A   
    000000DB 00                     .DATA.B     H'00
    000000DC              L780:
    000000DC 5061737377             .SDATA      "Password:"
             6F72643A     
    000000E5 00                     .DATA.B     H'00
    000000E6 00000002               .RES.W      1
    000000E8              L795:
    000000E8 5345415243             .SDATA      "SEARCH"
             48           
    000000EE 00                     .DATA.B     H'00
    000000EF 00000001               .RES.B      1
    000000F0              L798:
    000000F0 4B45494E20             .SDATA      "KEIN ERGEBNIS GEFUNDEN"
             4552474542   
             4E49532047   
             4546554E44   
             454E         
    00000106 00                     .DATA.B     H'00
    00000107 00000001               .RES.B      1
    00000108              L838:
    00000108 4745544150             .SDATA      "GETAPPINFO"
             50494E464F   
    00000112 00                     .DATA.B     H'00
    00000113 00000001               .RES.B      1
    00000114              L848:
    00000114 444F574E4C             .SDATA      "DOWNLOAD"
             4F4144       
    0000011C 00                     .DATA.B     H'00
    0000011D 00000001               .RES.B      1
    0000011E 00000002               .RES.W      1
    00000120              L861:
    00000120 446F776E6C             .SDATA      "Downloading..."
             6F6164696E   
             672E2E2E     
    0000012E 00                     .DATA.B     H'00




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 11-Jan-2019 20:05:59  PAGE   98


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000012F 00000001               .RES.B      1
    00000130              L862:
    00000130 25642F2564             .SDATA      "%d/%d"
    00000135 00                     .DATA.B     H'00
    00000136 00000002               .RES.W      1
    00000138              L940:
    00000138 25303464               .SDATA      "%04d"
    0000013C 00                     .DATA.B     H'00
D   00000000              _network:                        ; static: network
    00000000 00000000               .DATA.L     H'00000000
    00000004 00000000               .DATA.L     H'00000000
    00000008 00000000               .DATA.L     H'00000000
    0000000C              _arrowRight:                     ; static: arrowRight
    0000000C E69B00                 .DATA.B     H'E6,H'9B,H'00
    0000000F              _loupe:                          ; static: loupe
    0000000F E65000                 .DATA.B     H'E6,H'50,H'00
    00000012              _checkSumDebug:                  ; static: checkSumDebug
    00000012 41307A3632             .DATA.B     H'41,H'30,H'7A,H'36,H'32,H'70,H'65,H'6E,H'69,H'53
             70656E6953   
    0000001C              _testPicture:                    ; static: testPicture
    0000001C 424D8A0000             .DATA.B     H'42,H'4D,H'8A,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'3E,H'00,H'00,H'00,H'28,H'00,
             0000000000 +                       H'00,H'00,H'1E,H'00,H'00,H'00,H'13,H'00,H'00,H'00,H'01,H'00,H'01,H'00,H'00,H'00,
             3E00000028 +                       H'00,H'00,H'4C,H'00,H'00,H'00,H'C3,H'0E,H'00,H'00,H'C3,H'0E,H'00,H'00,H'00,H'00,
             0000001E00 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'FF,H'FF,H'FF,H'00,H'00,H'00,H'00,H'00,H'7F,H'FF,
             0000130000 +                       H'FF,H'FC,H'00,H'00,H'01,H'FC,H'3F,H'07,H'E1,H'FC,H'21,H'04,H'21,H'FC,H'21,H'04,
             0001000100 +                       H'21,H'FC,H'27,H'DF,H'21,H'FC,H'25,H'55,H'21,H'FC,H'3F,H'57,H'E0,H'04,H'04,H'51,
             000000004C +                       H'00,H'04,H'07,H'DF,H'01,H'84,H'00,H'00,H'02,H'44,H'70,H'EE,H'38,H'44,H'49,H'09,
             000000C30E +                       H'49,H'C4,H'45,H'E9,H'4A,H'44,H'45,H'2E,H'4A,H'44,H'44,H'C8,H'49,H'C4,H'48,H'08,
             0000C30E00 +                       H'00,H'04,H'70,H'08,H'00,H'04,H'00,H'00,H'00,H'00
             0000000000   
             00000000FF   
             FFFF000000   
             00007FFFFF   
             FC000001FC   
             3F07E1FC21   
             0421FC2104   
             21FC27DF21   
             FC255521FC   
             3F57E00404   
             51000407DF   
             0184000002   
             4470EE3844   
             490949C445   
             E94A44452E   
             4A4444C849   
             C448080004   
             7008000400   
             000000       
    000000A6 00000002               .RES.W      1
    000000A8              _shouldRequestNetInfo:           ; static: shouldRequestNetInfo
    000000A8 00000001               .DATA.L     H'00000001
B   00000000              _buf:                            ; static: buf
    00000000 000001F4               .RES.B      500
    000001F4              _status:                         ; static: status
    000001F4 00000004               .RES.B      4
    000001F8              _checkSumDebugBuffer:            ; static: checkSumDebugBuffer
    000001F8 0000000B               .RES.B      11




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 11-Jan-2019 20:05:59  PAGE   99


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

B_B 00000000              _BR_Size:                        ; static: BR_Size
    00000000 00000004               .RES.L      1



























































SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 11-Jan-2019 20:05:59  PAGE    1


******** STATISTICS INFORMATION ********


********** ERROR INFORMATION ***********

NUMBER OF ERRORS:           0
NUMBER OF WARNINGS:        64




******* SOURCE LINE INFORMATION ********

COMPILED SOURCE LINE:     1065



******* SECTION SIZE INFORMATION *******

PROGRAM  SECTION (P):                               000020B8 Byte(s)
PROGRAM  SECTION (P_BR_Size):                       00000000 Byte(s)
PROGRAM  SECTION (P_TOP):                           0000000C Byte(s)
CONSTANT SECTION (C):                               0000013D Byte(s)
CONSTANT SECTION (C_BR_Size):                       00000000 Byte(s)
CONSTANT SECTION (C_TOP):                           00000000 Byte(s)
DATA     SECTION (D):                               000000AC Byte(s)
DATA     SECTION (D_BR_Size):                       00000000 Byte(s)
DATA     SECTION (D_TOP):                           00000000 Byte(s)
BSS      SECTION (B):                               00000203 Byte(s)
BSS      SECTION (B_BR_Size):                       00000004 Byte(s)
BSS      SECTION (B_TOP):                           00000000 Byte(s)

 TOTAL PROGRAM SIZE: 000024B4 Byte(s)



********** LABEL INFORMATION ***********

NUMBER OF EXTERNAL REFERENCE SYMBOLS:           65
NUMBER OF EXTERNAL DEFINITION SYMBOLS:          65
NUMBER OF INTERNAL/EXTERNAL SYMBOLS:           416






















*** COMMAND PARAMETER ***


  -subcommand=C:\Users\Max\AppData\Local\Temp\hmk34E5.tmp 

