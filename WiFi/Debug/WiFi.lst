SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 05-Aug-2018 14:17:19  PAGE    1

************ OBJECT LISTING ************

FILE NAME: A:\_Austuasch\TheRealSlimWifi\WiFi\WiFi.c

SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          WiFi.c     1    /*****************************************************************/
          WiFi.c     2    /*                                                               */
          WiFi.c     3    /*   CASIO fx-9860G SDK Library                                  */
          WiFi.c     4    /*                                                               */
          WiFi.c     5    /*   File name : [ProjectName].c                                 */
          WiFi.c     6    /*                                                               */
          WiFi.c     7    /*   Copyright (c) 2006 CASIO COMPUTER CO., LTD.                 */
          WiFi.c     8    /*                                                               */
          WiFi.c     9    /*****************************************************************/
          WiFi.c    10    #include "fxlib.h"
          WiFi.c    11    #include "stdio.h"
          WiFi.c    12    
          WiFi.c    13    // custom types
          WiFi.c    14    
          WiFi.c    15    typedef int bool;
          WiFi.c    16    #define true 1
          WiFi.c    17    #define false 0
          WiFi.c    18    
          WiFi.c    19    struct Network {
          WiFi.c    20        bool isConnected;
          WiFi.c    21        unsigned char* ssid;
          WiFi.c    22        int rssi;
          WiFi.c    23    } network = {false, NULL, 0};
          WiFi.c    24    // prototypes
          WiFi.c    25    
          WiFi.c    26    int openSerial();
          WiFi.c    27    void drawInfoBar();
          WiFi.c    28    void drawBubble(int x, int y, int filled);
          WiFi.c    29    void getNetworkInfo();
          WiFi.c    30    void connectToNetwork();
          WiFi.c    31    void disconnect();
          WiFi.c    32    void browseFiles();
          WiFi.c    33    void downloadFile();
          WiFi.c    34    void getAppByID();
          WiFi.c    35    void sendCommand(unsigned char*);
          WiFi.c    36    void receiveStatus();
          WiFi.c    37    void receiveStatusTimeout(int timeout);
          WiFi.c    38    void readString(int x, int y, bool search);
          WiFi.c    39    void serialSendString(unsigned char* buffer);
          WiFi.c    40    void serialReadString(unsigned char* buffer);
          WiFi.c    41    void serialReadStringTimeout(int timeout,unsigned char* buffer);
          WiFi.c    42    char keyToChar(int key, bool shift, bool alpha);
          WiFi.c    43    int getKey();
          WiFi.c    44    void drawProgressBar(int y, float value);
          WiFi.c    45    void sendData(unsigned char* buffer, int length);
          WiFi.c    46    void checksum(unsigned char* data,int length, unsigned char* csbuffer);
          WiFi.c    47    void itoa(int integer,int len,unsigned char* data);
          WiFi.c    48    void drawBrowseResults(unsigned char* results);
          WiFi.c    49    int showAppInfo();
          WiFi.c    50    void sendAcknowledgement(unsigned char* state);
          WiFi.c    51    unsigned char* receiveData(int timeout,unsigned short* transmitted);
          WiFi.c    52    void drawImage();
          WiFi.c    53    
          WiFi.c    54    // syscalls




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 05-Aug-2018 14:17:19  PAGE    2


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          WiFi.c    55    
          WiFi.c    56    int Serial_Open(unsigned char *mode);
          WiFi.c    57    int Serial_Close(int mode);
          WiFi.c    58    int Serial_ReadOneByte(unsigned char *result);
          WiFi.c    59    int Serial_ReadNBytes(unsigned char *result, int max_size, short *actually_transferred);
          WiFi.c    60    int Serial_GetReceivedBytesAvailable();
          WiFi.c    61    int Serial_ClearReceiveBuffer();
          WiFi.c    62    int Serial_BufferedTransmitOneByte(unsigned char byte_to_transmit);
          WiFi.c    63    int Serial_BufferedTransmitNBytes(unsigned char* bytes_to_transmit, int requested_count);
          WiFi.c    64    int Serial_ClearTransmitBuffer();
          WiFi.c    65    
          WiFi.c    66    int Keyboard_GetPressedKey(short* matrixcode);
          WiFi.c    67    int Keyboard_GetKeyWait(int*column, int*row, int type_of_waiting, int timeout_period, int menu, unsigned s
                         +hort*keycode );
          WiFi.c    68    int Keyboard_PRGM_GetKey( unsigned char*result );
          WiFi.c    69    int Keyboard_KeyDown();
          WiFi.c    70    void Keyboard_ClrBuffer();
          WiFi.c    71    
          WiFi.c    72    int App_RegisterAddins();
          WiFi.c    73    
          WiFi.c    74    int RTC_GetTicks();
          WiFi.c    75    int RTC_Elapsed_ms( int start_value, int duration_in_ms );
          WiFi.c    76    
          WiFi.c    77    int isAnyKeyPressed();
          WiFi.c    78    
          WiFi.c    79    int PRGM_GetKey();
          WiFi.c    80    
          WiFi.c    81    // structs
          WiFi.c    82    //Network network = {false, NULL, 0};
          WiFi.c    83    
          WiFi.c    84    unsigned char arrowRight[3] = {0xE6, 0x9B, 0};
          WiFi.c    85    unsigned char loupe[3]={0xE6,0x50,0};
          WiFi.c    86    unsigned char buf[500];
          WiFi.c    87    unsigned char status[4];
          WiFi.c    88    
          WiFi.c    89    unsigned char checkSumDebug[10]={'A','0','z','6','2','p','e','n','i','S'};
          WiFi.c    90    unsigned char checkSumDebugBuffer[11];
          WiFi.c    91    
          WiFi.c    92    unsigned char testPicture[138]={0x42,0x4d,0x8a,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x3e,0x00,0x00,0x00,0x28
                         +,0x00,0x00,0x00,0x1e,0x00,0x00,0x00,0x13,0x00,0x00,0x00,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x4c,0x00,
                         +0x00,0x00,0xc3,0x0e,0x00,0x00,0xc3,0x0e,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0xff,0
                         +x00,0x00,0x00,0x00,0x00,0x7f,0xff,0xff,0xfc,0x00,0x00,0x01,0xfc,0x3f,0x07,0xe1,0xfc,0x21,0x04,0x21,0xfc,0x
                         +21,0x04,0x21,0xfc,0x27,0xdf,0x21,0xfc,0x25,0x55,0x21,0xfc,0x3f,0x57,0xe0,0x04,0x04,0x51,0x00,0x04,0x07,0xd
                         +f,0x01,0x84,0x00,0x00,0x02,0x44,0x70,0xee,0x38,0x44,0x49,0x09,0x49,0xc4,0x45,0xe9,0x4a,0x44,0x45,0x2e,0x4a
                         +,0x44,0x44,0xc8,0x49,0xc4,0x48,0x08,0x00,0x04,0x70,0x08,0x00,0x04,0x00,0x00,0x00,0x00};
          WiFi.c    93    
          WiFi.c    94    bool shouldRequestNetInfo = true;
          WiFi.c    95    
          WiFi.c    96    const FONTCHARACTER filename[] = {'\\','\\','f','l','s','0','\\','T','E','S','T','.','g','1','a',0};
          WiFi.c    97    //****************************************************************************
          WiFi.c    98    //  AddIn_main (Sample program main function)
          WiFi.c    99    //
          WiFi.c   100    //  param   :   isAppli   : 1 = This application is launched by MAIN MENU.
          WiFi.c   101    //                        : 0 = This application is launched by a strip in eACT application.
          WiFi.c   102    //
          WiFi.c   103    //              OptionNum : Strip number (0~3)
          WiFi.c   104    //                         (This parameter is only used when isAppli parameter is 0.)




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 05-Aug-2018 14:17:19  PAGE    3


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          WiFi.c   105    //
          WiFi.c   106    //  retval  :   1 = No error / 0 = Error
          WiFi.c   107    //
          WiFi.c   108    //****************************************************************************
          WiFi.c   109    int AddIn_main(int isAppli, unsigned short OptionNum)
P   00000000              _AddIn_main:                     ; function: AddIn_main
                                                           ; frame size=48
    00000000 DD27                   MOV.L       L997,R13   ; _Keyboard_KeyDown
    00000002 7FD8                   ADD         #-40,R15
          WiFi.c   110    {
          WiFi.c   111        unsigned int key;
          WiFi.c   112        int selection = 0, lastTicks, lastKeyTicks;
    00000004 EA00                   MOV         #0,R10
    00000006 6EA3                   MOV         R10,R14
          WiFi.c   113        int col, row;
          WiFi.c   114        unsigned short keycode;
          WiFi.c   115        bool menu = false;
          WiFi.c   116        DISPBOX dispBox;
          WiFi.c   117    
          WiFi.c   118        while(Keyboard_KeyDown()) {
    00000008              L804:                             
    00000008 4D0B                   JSR         @R13
    0000000A 0009                   NOP
    0000000C 2008                   TST         R0,R0
    0000000E 8BFB                   BF          L804
          WiFi.c   119        }
          WiFi.c   120    
          WiFi.c   121        Bdisp_AllClr_DDVRAM();
    00000010 D324                   MOV.L       L997+4,R3  ; _Bdisp_AllClr_DDVRAM
    00000012 430B                   JSR         @R3
    00000014 0009                   NOP
    00000016 DD24                   MOV.L       L997+8,R13 ; _GetKey
          WiFi.c   122    
          WiFi.c   123    
          WiFi.c   124        while(true) {
    00000018              L807:                             
          WiFi.c   125            //GetKey(&key);
          WiFi.c   126            //sprintf(buf, "Key: %d", key);
          WiFi.c   127            //locate(2, 2);
          WiFi.c   128            //Bdisp_AllClr_DDVRAM();
          WiFi.c   129            //Print(buf);
          WiFi.c   130                    drawImage();
    00000018 D324                   MOV.L       L997+12,R3 ; _drawImage
    0000001A 430B                   JSR         @R3
    0000001C 0009                   NOP
          WiFi.c   131                    GetKey(&key);
    0000001E 64F3                   MOV         R15,R4
    00000020 4D0B                   JSR         @R13
    00000022 740C                   ADD         #12,R4
    00000024 AFF8                   BRA         L807
    00000026 0009                   NOP
    00000028              L809:                             
          WiFi.c   132        }
          WiFi.c   133    
          WiFi.c   134    
          WiFi.c   135        openSerial();
          WiFi.c   136        Serial_ClearReceiveBuffer();




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 05-Aug-2018 14:17:19  PAGE    4


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          WiFi.c   137        Serial_ClearTransmitBuffer();
          WiFi.c   138    
          WiFi.c   139        drawInfoBar();
          WiFi.c   140        lastTicks = RTC_GetTicks();
          WiFi.c   141    
          WiFi.c   142        while(1) {
          WiFi.c   143            int line;
          WiFi.c   144                    
          WiFi.c   145            dispBox.left = 0;
    00000028 1FA6                   MOV.L       R10,@(24,R15)
          WiFi.c   146            dispBox.top = 7;
    0000002A E307                   MOV         #7,R3
    0000002C 1F37                   MOV.L       R3,@(28,R15)
          WiFi.c   147            dispBox.right = 127;
    0000002E E27F                   MOV         #127,R2
    00000030 1F28                   MOV.L       R2,@(32,R15)
          WiFi.c   148            dispBox.bottom = 63;
    00000032 E33F                   MOV         #63,R3
    00000034 1F39                   MOV.L       R3,@(36,R15)
          WiFi.c   149    
          WiFi.c   150            Bdisp_AreaClr_VRAM(&dispBox);
    00000036 64F3                   MOV         R15,R4
    00000038 D31D                   MOV.L       L997+16,R3 ; _Bdisp_AreaClr_VRAM
    0000003A 430B                   JSR         @R3
    0000003C 7418                   ADD         #24,R4
          WiFi.c   151                    
          WiFi.c   152                    memset(checkSumDebugBuffer,0,11);
    0000003E E60B                   MOV         #11,R6
    00000040 D41C                   MOV.L       L997+20,R4 ; _checkSumDebugBuffer
    00000042 D21D                   MOV.L       L997+24,R2 ; _memset
    00000044 420B                   JSR         @R2
    00000046 E500                   MOV         #0,R5
          WiFi.c   153                    checksum(checkSumDebug,10,checkSumDebugBuffer);
    00000048 D61A                   MOV.L       L997+20,R6 ; _checkSumDebugBuffer
    0000004A D41C                   MOV.L       L997+28,R4 ; _checkSumDebug
    0000004C D31C                   MOV.L       L997+32,R3 ; _checksum
    0000004E 430B                   JSR         @R3
    00000050 E50A                   MOV         #10,R5
          WiFi.c   154                    locate(1,7);
    00000052 E507                   MOV         #7,R5
    00000054 4D0B                   JSR         @R13
    00000056 E401                   MOV         #1,R4
          WiFi.c   155                    Print(checkSumDebugBuffer);
    00000058 D416                   MOV.L       L997+20,R4 ; _checkSumDebugBuffer
    0000005A 4C0B                   JSR         @R12
    0000005C 0009                   NOP
          WiFi.c   156           
          WiFi.c   157            for (line = 0; line < 4; line = line + 1) {
    0000005E 6BA3                   MOV         R10,R11
    00000060              L811:                             
          WiFi.c   158                int x = 3;
          WiFi.c   159                if (line == selection) {
    00000060 3BE0                   CMP/EQ      R14,R11
    00000062 8F01                   BF/S        L812
    00000064 6493                   MOV         R9,R4
          WiFi.c   160                    x = x + 1;
    00000066 6483                   MOV         R8,R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 05-Aug-2018 14:17:19  PAGE    5


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000068              L812:                             
    00000068 65B3                   MOV         R11,R5
    0000006A 60B3                   MOV         R11,R0
    0000006C 8800                   CMP/EQ      #0,R0
    0000006E 8D08                   BT/S        L740
    00000070 7503                   ADD         #3,R5
    00000072 8801                   CMP/EQ      #1,R0
    00000074 890A                   BT          L742
    00000076 8802                   CMP/EQ      #2,R0
    00000078 890D                   BT          L744
    0000007A 8803                   CMP/EQ      #3,R0
    0000007C 8928                   BT          L746
    0000007E A02C                   BRA         L813
    00000080 0009                   NOP
    00000082              L740:                            ; case label 
          WiFi.c   161                }
          WiFi.c   162    
          WiFi.c   163                switch(line) {
          WiFi.c   164                    case 0:
          WiFi.c   165                        locate(x, 3 + line);
    00000082 4D0B                   JSR         @R13
    00000084 0009                   NOP
          WiFi.c   166                        Print((unsigned char*) "Connect");
    00000086 D40F                   MOV.L       L997+36,R4 ; L415
          WiFi.c   167                        break;
    00000088 A025                   BRA         L995
    0000008A 0009                   NOP
    0000008C              L742:                            ; case label 
          WiFi.c   168                    case 1:
          WiFi.c   169                        locate(x, 3 + line);
    0000008C 4D0B                   JSR         @R13
    0000008E 0009                   NOP
          WiFi.c   170                        Print((unsigned char*) "Disconnect");
    00000090 D40D                   MOV.L       L997+40,R4 ; L416
          WiFi.c   171                        break;
    00000092 A020                   BRA         L995
    00000094 0009                   NOP
    00000096              L744:                            ; case label 
          WiFi.c   172                    case 2:
          WiFi.c   173                        locate(x, 3 + line);
    00000096 4D0B                   JSR         @R13
    00000098 0009                   NOP
          WiFi.c   174                        Print((unsigned char*) "Browse");
    0000009A D40C                   MOV.L       L997+44,R4 ; L417
          WiFi.c   175                        break;
    0000009C A01B                   BRA         L995
    0000009E 0009                   NOP
    000000A0              L997:                             
    000000A0 <00000000>             .DATA.L     _Keyboard_KeyDown
    000000A4 <00000000>             .DATA.L     _Bdisp_AllClr_DDVRAM
    000000A8 <00000000>             .DATA.L     _GetKey
    000000AC <00000000>             .DATA.L     _drawImage
    000000B0 <00000000>             .DATA.L     _Bdisp_AreaClr_VRAM
    000000B4 <00000000>             .DATA.L     _checkSumDebugBuffer
    000000B8 <00000000>             .DATA.L     _memset
    000000BC <00000000>             .DATA.L     _checkSumDebug
    000000C0 <00000000>             .DATA.L     _checksum




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 05-Aug-2018 14:17:19  PAGE    6


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000000C4 <00000000>             .DATA.L     L415
    000000C8 <00000000>             .DATA.L     L416
    000000CC <00000000>             .DATA.L     L417
    000000D0              L746:                            ; case label 
          WiFi.c   176                     case 3:
          WiFi.c   177                        locate(x, 3 + line);
    000000D0 4D0B                   JSR         @R13
    000000D2 0009                   NOP
          WiFi.c   178                        Print((unsigned char*) "Get by ID");
    000000D4 D439                   MOV.L       L998+6,R4  ; L418
          WiFi.c   179                        break;
    000000D6              L995:                             
    000000D6 4C0B                   JSR         @R12
    000000D8 0009                   NOP
    000000DA              L813:                             
    000000DA 7B01                   ADD         #1,R11
    000000DC 3B83                   CMP/GE      R8,R11
    000000DE 8BBF                   BF          L811
          WiFi.c   180                }
          WiFi.c   181            }
          WiFi.c   182    
          WiFi.c   183            locate(2, 3 + selection);
    000000E0 65E3                   MOV         R14,R5
    000000E2 7503                   ADD         #3,R5
    000000E4 4D0B                   JSR         @R13
    000000E6 E402                   MOV         #2,R4
          WiFi.c   184            Print(arrowRight);        
    000000E8 D435                   MOV.L       L998+10,R4 ; _arrowRight
    000000EA 4C0B                   JSR         @R12
    000000EC 0009                   NOP
          WiFi.c   185    
          WiFi.c   186            receiveStatusTimeout(20);
    000000EE B6AE                   BSR         _receiveStatusTimeout
    000000F0 E414                   MOV         #20,R4
          WiFi.c   187            if(memcmp(status,"OF",2)==0){
    000000F2 D534                   MOV.L       L998+14,R5 ; L420
    000000F4 D434                   MOV.L       L998+18,R4 ; _status
    000000F6 D335                   MOV.L       L998+22,R3 ; _memcmp
    000000F8 430B                   JSR         @R3
    000000FA E602                   MOV         #2,R6
    000000FC 2008                   TST         R0,R0
    000000FE 8B02                   BF          L814
          WiFi.c   188                shouldRequestNetInfo=true;
    00000100 D233                   MOV.L       L998+26,R2 ; _shouldRequestNetInfo
    00000102 E301                   MOV         #1,R3
    00000104 2232                   MOV.L       R3,@R2
    00000106              L814:                             
          WiFi.c   189            }
          WiFi.c   190                  
          WiFi.c   191            if (RTC_Elapsed_ms(lastTicks, 2500) && shouldRequestNetInfo) {
    00000106 9556                   MOV.W       L998,R5    ; H'09C4
    00000108 D332                   MOV.L       L998+30,R3 ; _RTC_Elapsed_ms
    0000010A 430B                   JSR         @R3
    0000010C 54F5                   MOV.L       @(20,R15),R4
    0000010E 2008                   TST         R0,R0
    00000110 890B                   BT          L815
    00000112 D22F                   MOV.L       L998+26,R2 ; _shouldRequestNetInfo




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 05-Aug-2018 14:17:19  PAGE    7


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000114 6322                   MOV.L       @R2,R3
    00000116 2338                   TST         R3,R3
    00000118 8907                   BT          L815
          WiFi.c   192                
          WiFi.c   193                getNetworkInfo();
    0000011A B1C4                   BSR         _getNetworkInfo
    0000011C 0009                   NOP
          WiFi.c   194                drawInfoBar();
    0000011E B0BF                   BSR         _drawInfoBar
    00000120 0009                   NOP
          WiFi.c   195                lastTicks = RTC_GetTicks();
    00000122 D32D                   MOV.L       L998+34,R3 ; _RTC_GetTicks
    00000124 430B                   JSR         @R3
    00000126 0009                   NOP
    00000128 1F05                   MOV.L       R0,@(20,R15)
    0000012A              L815:                             
          WiFi.c   196            }
          WiFi.c   197    
          WiFi.c   198    
          WiFi.c   199            Bdisp_PutDisp_DD();
    0000012A D32C                   MOV.L       L998+38,R3 ; _Bdisp_PutDisp_DD
    0000012C 430B                   JSR         @R3
    0000012E 0009                   NOP
          WiFi.c   200                    
          WiFi.c   201            if (RTC_Elapsed_ms(lastKeyTicks, 200) && Keyboard_GetKeyWait(&col, &row, 1, 0, 0, &keycode)) {
    00000130 9542                   MOV.W       L998+2,R5  ; H'00C8
    00000132 D328                   MOV.L       L998+30,R3 ; _RTC_Elapsed_ms
    00000134 430B                   JSR         @R3
    00000136 54F4                   MOV.L       @(16,R15),R4
    00000138 2008                   TST         R0,R0
    0000013A 8B01                   BF          L999
    0000013C A096                   BRA         L816
    0000013E 0009                   NOP
    00000140              L999:                             
    00000140 63F3                   MOV         R15,R3
    00000142 7308                   ADD         #8,R3
    00000144 2F36                   MOV.L       R3,@-R15
    00000146 E200                   MOV         #0,R2
    00000148 D325                   MOV.L       L998+42,R3 ; _Keyboard_GetKeyWait
    0000014A E601                   MOV         #1,R6
    0000014C 2F26                   MOV.L       R2,@-R15
    0000014E 6723                   MOV         R2,R7
    00000150 65F3                   MOV         R15,R5
    00000152 750C                   ADD         #12,R5
    00000154 64F3                   MOV         R15,R4
    00000156 430B                   JSR         @R3
    00000158 7408                   ADD         #8,R4
    0000015A 2008                   TST         R0,R0
    0000015C 8F02                   BF/S        L1000
    0000015E 7F08                   ADD         #8,R15
    00000160 A084                   BRA         L816
    00000162 0009                   NOP
    00000164              L1000:                            
          WiFi.c   202                if (col == 4 && row == 9) { // MENU key was pressed
    00000164 60F2                   MOV.L       @R15,R0
    00000166 8804                   CMP/EQ      #4,R0
    00000168 8B15                   BF          L817




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 05-Aug-2018 14:17:19  PAGE    8


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000016A 50F1                   MOV.L       @(4,R15),R0
    0000016C 8809                   CMP/EQ      #9,R0
    0000016E 8B12                   BF          L817
          WiFi.c   203                    Serial_Close(1);
    00000170 D21C                   MOV.L       L998+46,R2 ; _Serial_Close
    00000172 420B                   JSR         @R2
    00000174 E401                   MOV         #1,R4
          WiFi.c   204                    Keyboard_GetKeyWait(&col, &row, 0, 0, 0, &keycode);
    00000176 63F3                   MOV         R15,R3
    00000178 D219                   MOV.L       L998+42,R2 ; _Keyboard_GetKeyWait
    0000017A E700                   MOV         #0,R7
    0000017C 7308                   ADD         #8,R3
    0000017E 6673                   MOV         R7,R6
    00000180 2F36                   MOV.L       R3,@-R15
    00000182 2FA6                   MOV.L       R10,@-R15
    00000184 65F3                   MOV         R15,R5
    00000186 750C                   ADD         #12,R5
    00000188 64F3                   MOV         R15,R4
    0000018A 420B                   JSR         @R2
    0000018C 7408                   ADD         #8,R4
          WiFi.c   205                    openSerial();
    0000018E B072                   BSR         _openSerial
    00000190 7F08                   ADD         #8,R15
    00000192 A060                   BRA         L818
    00000194 0009                   NOP
    00000196              L817:                             
          WiFi.c   206                } else if (col == 2 && row == 9) {
    00000196 60F2                   MOV.L       @R15,R0
    00000198 8802                   CMP/EQ      #2,R0
    0000019A 8B04                   BF          L819
    0000019C 50F1                   MOV.L       @(4,R15),R0
    0000019E 8809                   CMP/EQ      #9,R0
    000001A0 8B01                   BF          L819
          WiFi.c   207                    selection = selection - 1;
    000001A2 A058                   BRA         L818
    000001A4 7EFF                   ADD         #-1,R14
    000001A6              L819:                             
          WiFi.c   208                } else if (col == 3 && row == 8) {
    000001A6 60F2                   MOV.L       @R15,R0
    000001A8 8803                   CMP/EQ      #3,R0
    000001AA 8B54                   BF          L818
    000001AC 50F1                   MOV.L       @(4,R15),R0
    000001AE 8808                   CMP/EQ      #8,R0
    000001B0 8B1A                   BF          L821
          WiFi.c   209                    selection = selection + 1;
    000001B2 A050                   BRA         L818
    000001B4 7E01                   ADD         #1,R14
    000001B6              L998:                             
    000001B6 09C4                   .DATA.W     H'09C4
    000001B8 00C8                   .DATA.W     H'00C8
    000001BA 0000                   .DATA.W     0
    000001BC <00000000>             .DATA.L     L418
    000001C0 <00000000>             .DATA.L     _arrowRight
    000001C4 <00000000>             .DATA.L     L420
    000001C8 <00000000>             .DATA.L     _status
    000001CC <00000000>             .DATA.L     _memcmp
    000001D0 <00000000>             .DATA.L     _shouldRequestNetInfo




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 05-Aug-2018 14:17:19  PAGE    9


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000001D4 <00000000>             .DATA.L     _RTC_Elapsed_ms
    000001D8 <00000000>             .DATA.L     _RTC_GetTicks
    000001DC <00000000>             .DATA.L     _Bdisp_PutDisp_DD
    000001E0 <00000000>             .DATA.L     _Keyboard_GetKeyWait
    000001E4 <00000000>             .DATA.L     _Serial_Close
    000001E8              L821:                             
          WiFi.c   210                } else if (col == 3 && row == 2) {
    000001E8 60F2                   MOV.L       @R15,R0
    000001EA 8803                   CMP/EQ      #3,R0
    000001EC 8B33                   BF          L818
    000001EE 50F1                   MOV.L       @(4,R15),R0
    000001F0 8802                   CMP/EQ      #2,R0
    000001F2 8B30                   BF          L818
          WiFi.c   211                    switch (selection) {
    000001F4 60E3                   MOV         R14,R0
    000001F6 8800                   CMP/EQ      #0,R0
    000001F8 8907                   BT          L749
    000001FA 8801                   CMP/EQ      #1,R0
    000001FC 8915                   BT          L752
    000001FE 8802                   CMP/EQ      #2,R0
    00000200 8923                   BT          L754
    00000202 8803                   CMP/EQ      #3,R0
    00000204 8925                   BT          L755
    00000206 A026                   BRA         L818
    00000208 0009                   NOP
    0000020A              L749:                            ; case label 
          WiFi.c   212                        case 0:
          WiFi.c   213                            sendCommand("CONNECT");
    0000020A D46C                   MOV.L       L1001,R4   ; L429
    0000020C B5D1                   BSR         _sendCommand
    0000020E 0009                   NOP
          WiFi.c   214                            receiveStatus();
    00000210 B61C                   BSR         _receiveStatus
    00000212 0009                   NOP
          WiFi.c   215                                                    
          WiFi.c   216                            if (memcmp(status,"OK",2)==0){
    00000214 D56A                   MOV.L       L1001+4,R5 ; L430
    00000216 D46B                   MOV.L       L1001+8,R4 ; _status
    00000218 D26B                   MOV.L       L1001+12,R2; _memcmp
    0000021A 420B                   JSR         @R2
    0000021C E602                   MOV         #2,R6
    0000021E 2008                   TST         R0,R0
    00000220 8B19                   BF          L818
          WiFi.c   217                                connectToNetwork();
    00000222 B1DB                   BSR         _connectToNetwork
    00000224 0009                   NOP
          WiFi.c   218                            }
          WiFi.c   219                            break;
    00000226 A016                   BRA         L818
    00000228 0009                   NOP
    0000022A              L752:                            ; case label 
          WiFi.c   220                        case 1:
          WiFi.c   221                            sendCommand("DISCONNECT");
    0000022A D468                   MOV.L       L1001+16,R4; L432
    0000022C B5C1                   BSR         _sendCommand
    0000022E 0009                   NOP
          WiFi.c   222                            receiveStatus();




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 05-Aug-2018 14:17:19  PAGE   10


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000230 B60C                   BSR         _receiveStatus
    00000232 0009                   NOP
          WiFi.c   223                                                    
          WiFi.c   224                            if (memcmp(status,"OK",2)==0){
    00000234 D562                   MOV.L       L1001+4,R5 ; L430
    00000236 D463                   MOV.L       L1001+8,R4 ; _status
    00000238 D263                   MOV.L       L1001+12,R2; _memcmp
    0000023A 420B                   JSR         @R2
    0000023C E602                   MOV         #2,R6
    0000023E 2008                   TST         R0,R0
    00000240 8B09                   BF          L818
          WiFi.c   225                                disconnect();
    00000242 B2E2                   BSR         _disconnect
    00000244 0009                   NOP
          WiFi.c   226                            }
          WiFi.c   227                            break;
    00000246 A006                   BRA         L818
    00000248 0009                   NOP
    0000024A              L754:                            ; case label 
          WiFi.c   228                        case 2:
          WiFi.c   229                            browseFiles();            
    0000024A B2F9                   BSR         _browseFiles
    0000024C 0009                   NOP
          WiFi.c   230                            break;
    0000024E A002                   BRA         L818
    00000250 0009                   NOP
    00000252              L755:                            ; case label 
          WiFi.c   231                        case 3:
          WiFi.c   232                            getAppByID();
    00000252 B5AC                   BSR         _getAppByID
    00000254 0009                   NOP
          WiFi.c   233                            break;
    00000256              L818:                             
          WiFi.c   234                    }
          WiFi.c   235                }
          WiFi.c   236    
          WiFi.c   237                if (selection < 0) {
    00000256 4E11                   CMP/PZ      R14
    00000258 8901                   BT          L827
          WiFi.c   238                    selection = 3;
    0000025A A003                   BRA         L828
    0000025C 6E93                   MOV         R9,R14
    0000025E              L827:                             
          WiFi.c   239                } else if (selection > 3) {
    0000025E 3E97                   CMP/GT      R9,R14
    00000260 8B00                   BF          L828
          WiFi.c   240                    selection = 0;
    00000262 6EA3                   MOV         R10,R14
    00000264              L828:                             
          WiFi.c   241                }
          WiFi.c   242    
          WiFi.c   243                lastKeyTicks = RTC_GetTicks();
    00000264 D35A                   MOV.L       L1001+20,R3; _RTC_GetTicks
    00000266 430B                   JSR         @R3
    00000268 0009                   NOP
    0000026A 1F04                   MOV.L       R0,@(16,R15)
    0000026C              L816:                             




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 05-Aug-2018 14:17:19  PAGE   11


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          WiFi.c   244            }
          WiFi.c   245    
          WiFi.c   246            Keyboard_ClrBuffer(); // clear the buffer to prevent strange behaviour when hitting the menu key
    0000026C D359                   MOV.L       L1001+24,R3; _Keyboard_ClrBuffer
    0000026E 430B                   JSR         @R3
    00000270 0009                   NOP
    00000272 AED9                   BRA         L809
    00000274 0009                   NOP
          WiFi.c   247        }
          WiFi.c   248    
          WiFi.c   249        Serial_Close(1);
          WiFi.c   250    
          WiFi.c   251        return 1;
          WiFi.c   252    }
          WiFi.c   253    
          WiFi.c   254    int openSerial() {
    00000276              _openSerial:                     ; function: openSerial
                                                           ; frame size=12
          WiFi.c   255        unsigned char mode[6];
          WiFi.c   256        mode[0] = 0;
    00000276 E400                   MOV         #0,R4
          WiFi.c   257        mode[1] = 5; // 5
          WiFi.c   258        mode[2] = 0;
          WiFi.c   259        mode[3] = 0;
          WiFi.c   260        mode[4] = 0;
          WiFi.c   261        mode[5] = 0;
          WiFi.c   262    
          WiFi.c   263        return Serial_Open(&mode);
    00000278 D357                   MOV.L       L1001+28,R3; _Serial_Open
    0000027A E005                   MOV         #5,R0
    0000027C 4F22                   STS.L       PR,@-R15
    0000027E 7FF8                   ADD         #-8,R15
    00000280 2F40                   MOV.B       R4,@R15
    00000282 80F1                   MOV.B       R0,@(1,R15)
    00000284 6043                   MOV         R4,R0
    00000286 80F2                   MOV.B       R0,@(2,R15)
    00000288 6043                   MOV         R4,R0
    0000028A 80F3                   MOV.B       R0,@(3,R15)
    0000028C 6043                   MOV         R4,R0
    0000028E 80F4                   MOV.B       R0,@(4,R15)
    00000290 6043                   MOV         R4,R0
    00000292 80F5                   MOV.B       R0,@(5,R15)
    00000294 430B                   JSR         @R3
    00000296 64F3                   MOV         R15,R4
          WiFi.c   264    }
    00000298 7F08                   ADD         #8,R15
    0000029A 4F26                   LDS.L       @R15+,PR
    0000029C 000B                   RTS
    0000029E 0009                   NOP
          WiFi.c   265    
          WiFi.c   266    void drawInfoBar() { //überarbeitet
    000002A0              _drawInfoBar:                    ; function: drawInfoBar
                                                           ; frame size=84
                                                           ; used runtime library name:
                                                           ; __modls, __addd, __muld, __dtoi, __itod
    000002A0 2FE6                   MOV.L       R14,@-R15
    000002A2 2FD6                   MOV.L       R13,@-R15




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 05-Aug-2018 14:17:19  PAGE   12


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000002A4 2FC6                   MOV.L       R12,@-R15
          WiFi.c   267        int x, y, bubble, key;
          WiFi.c   268        DISPBOX dispBox;
          WiFi.c   269    
          WiFi.c   270        dispBox.left = 0;
          WiFi.c   271        dispBox.top = 0;
          WiFi.c   272        dispBox.right = 127;
    000002A6 EC7F                   MOV         #127,R12
          WiFi.c   273        dispBox.bottom = 6;
          WiFi.c   274    
          WiFi.c   275        Bdisp_AreaClr_VRAM(&dispBox);
    000002A8 D34C                   MOV.L       L1001+32,R3; _Bdisp_AreaClr_VRAM
    000002AA 2FB6                   MOV.L       R11,@-R15
    000002AC 2FA6                   MOV.L       R10,@-R15
    000002AE EB00                   MOV         #0,R11
    000002B0 2F96                   MOV.L       R9,@-R15
    000002B2 EA06                   MOV         #6,R10
    000002B4 2F86                   MOV.L       R8,@-R15
    000002B6 4F22                   STS.L       PR,@-R15
    000002B8 7FF0                   ADD         #-16,R15
    000002BA 2FB2                   MOV.L       R11,@R15
    000002BC 1FB1                   MOV.L       R11,@(4,R15)
    000002BE 1FC2                   MOV.L       R12,@(8,R15)
    000002C0 1FA3                   MOV.L       R10,@(12,R15)
    000002C2 430B                   JSR         @R3
    000002C4 64F3                   MOV         R15,R4
          WiFi.c   276    
          WiFi.c   277        for (y = 0; y < 7; y = y + 1) {
    000002C6 E903                   MOV         #3,R9
    000002C8 D845                   MOV.L       L1001+36,R8; _Bdisp_SetPoint_VRAM
    000002CA 6DB3                   MOV         R11,R13
    000002CC              L832:                             
          WiFi.c   278            for (x = 2 - ((y + 2) % 3); x < 127; x = x + 3) {
    000002CC D345                   MOV.L       L1001+40,R3; __modls
    000002CE 61D3                   MOV         R13,R1
    000002D0 7102                   ADD         #2,R1
    000002D2 430B                   JSR         @R3
    000002D4 6093                   MOV         R9,R0
    000002D6 EE02                   MOV         #2,R14
    000002D8 3E08                   SUB         R0,R14
    000002DA 3EC3                   CMP/GE      R12,R14
    000002DC 8906                   BT          L833
    000002DE              L834:                             
          WiFi.c   279                Bdisp_SetPoint_VRAM(x, y, 1);
    000002DE E601                   MOV         #1,R6
    000002E0 65D3                   MOV         R13,R5
    000002E2 480B                   JSR         @R8
    000002E4 64E3                   MOV         R14,R4
    000002E6 7E03                   ADD         #3,R14
    000002E8 3EC3                   CMP/GE      R12,R14
    000002EA 8BF8                   BF          L834
    000002EC              L833:                             
    000002EC 7D01                   ADD         #1,R13
    000002EE E207                   MOV         #7,R2
    000002F0 3D23                   CMP/GE      R2,R13
    000002F2 8BEB                   BF          L832
          WiFi.c   280            }




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 05-Aug-2018 14:17:19  PAGE   13


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          WiFi.c   281        }
          WiFi.c   282    
          WiFi.c   283        if (network.isConnected) {
    000002F4 DE3C                   MOV.L       L1001+44,R14; _network
    000002F6 62E2                   MOV.L       @R14,R2
    000002F8 2228                   TST         R2,R2
    000002FA 894E                   BT          L835
          WiFi.c   284            int bubbleCount = (int) (12.0 / 100.0 * (network.rssi + 100.0));
    000002FC 50E2                   MOV.L       @(8,R14),R0
    000002FE 7FE8                   ADD         #-24,R15
    00000300 D33A                   MOV.L       L1001+48,R3; __itod
    00000302 430B                   JSR         @R3
    00000304 2FF6                   MOV.L       R15,@-R15
    00000306 E200                   MOV         #0,R2
    00000308 D13A                   MOV.L       L1001+56,R1; __addd
    0000030A 2F26                   MOV.L       R2,@-R15
    0000030C D238                   MOV.L       L1001+52,R2; H'40590000
    0000030E 2F26                   MOV.L       R2,@-R15
    00000310 63F3                   MOV         R15,R3
    00000312 7310                   ADD         #16,R3
    00000314 410B                   JSR         @R1
    00000316 2F36                   MOV.L       R3,@-R15
    00000318 D237                   MOV.L       L1001+60,R2; H'EB851EB8
    0000031A 2F26                   MOV.L       R2,@-R15
    0000031C D237                   MOV.L       L1001+64,R2; H'3FBEB851
    0000031E 2F26                   MOV.L       R2,@-R15
    00000320 D137                   MOV.L       L1001+68,R1; __muld
    00000322 63F3                   MOV         R15,R3
    00000324 7310                   ADD         #16,R3
    00000326 410B                   JSR         @R1
    00000328 2F36                   MOV.L       R3,@-R15
    0000032A D236                   MOV.L       L1001+72,R2; __dtoi
    0000032C 420B                   JSR         @R2
    0000032E 0009                   NOP
          WiFi.c   285    
          WiFi.c   286            dispBox.left = 6;
    00000330 2FA2                   MOV.L       R10,@R15
    00000332 6D03                   MOV         R0,R13
          WiFi.c   287            dispBox.top = 0;
          WiFi.c   288            dispBox.right = dispBox.left + 6 * strlen(network.ssid);
    00000334 D334                   MOV.L       L1001+76,R3; _strlen
    00000336 1FB1                   MOV.L       R11,@(4,R15)
    00000338 430B                   JSR         @R3
    0000033A 54E1                   MOV.L       @(4,R14),R4
    0000033C 63F2                   MOV.L       @R15,R3
    0000033E 6203                   MOV         R0,R2
    00000340 4000                   SHLL        R0
    00000342 4208                   SHLL2       R2
    00000344 302C                   ADD         R2,R0
    00000346 303C                   ADD         R3,R0
    00000348 1F02                   MOV.L       R0,@(8,R15)
          WiFi.c   289            dispBox.bottom = 6;
    0000034A 1FA3                   MOV.L       R10,@(12,R15)
          WiFi.c   290            Bdisp_AreaClr_VRAM(&dispBox);
    0000034C D323                   MOV.L       L1001+32,R3; _Bdisp_AreaClr_VRAM
    0000034E 430B                   JSR         @R3
    00000350 64F3                   MOV         R15,R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 05-Aug-2018 14:17:19  PAGE   14


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          WiFi.c   291    
          WiFi.c   292            locate(2, 1);
    00000352 E501                   MOV         #1,R5
    00000354 D22D                   MOV.L       L1001+80,R2; _locate
    00000356 420B                   JSR         @R2
    00000358 E402                   MOV         #2,R4
          WiFi.c   293            Print(network.ssid);
    0000035A D32D                   MOV.L       L1001+84,R3; _Print
    0000035C 430B                   JSR         @R3
    0000035E 54E1                   MOV.L       @(4,R14),R4
          WiFi.c   294    
          WiFi.c   295            dispBox.left = 90;
    00000360 E25A                   MOV         #90,R2
    00000362 2F22                   MOV.L       R2,@R15
          WiFi.c   296            dispBox.top = 0;
    00000364 1FB1                   MOV.L       R11,@(4,R15)
          WiFi.c   297            dispBox.right = dispBox.left + 30;
    00000366 63F2                   MOV.L       @R15,R3
    00000368 731E                   ADD         #30,R3
    0000036A 1F32                   MOV.L       R3,@(8,R15)
          WiFi.c   298            dispBox.bottom = 6;
    0000036C 1FA3                   MOV.L       R10,@(12,R15)
          WiFi.c   299            Bdisp_AreaClr_VRAM(&dispBox);
    0000036E D31B                   MOV.L       L1001+32,R3; _Bdisp_AreaClr_VRAM
    00000370 430B                   JSR         @R3
    00000372 64F3                   MOV         R15,R4
          WiFi.c   300    
          WiFi.c   301            for (bubble = 0; bubble < 5; bubble = bubble + 1) {
    00000374 E905                   MOV         #5,R9
    00000376 6EB3                   MOV         R11,R14
    00000378              L836:                             
          WiFi.c   302                int filled = (bubble < bubbleCount);
          WiFi.c   303                drawBubble(bubble * 6 + dispBox.left + 1, 1, filled);
    00000378 62F2                   MOV.L       @R15,R2
    0000037A 3ED3                   CMP/GE      R13,R14
    0000037C 0629                   MOVT        R6
    0000037E 76FF                   ADD         #-1,R6
    00000380 666B                   NEG         R6,R6
    00000382 E501                   MOV         #1,R5
    00000384 64E3                   MOV         R14,R4
    00000386 63E3                   MOV         R14,R3
    00000388 4400                   SHLL        R4
    0000038A 4308                   SHLL2       R3
    0000038C 343C                   ADD         R3,R4
    0000038E 342C                   ADD         R2,R4
    00000390 B042                   BSR         _drawBubble
    00000392 7401                   ADD         #1,R4
    00000394 7E01                   ADD         #1,R14
    00000396 3E93                   CMP/GE      R9,R14
    00000398 8BEE                   BF          L836
    0000039A              L835:                             
          WiFi.c   304            }
          WiFi.c   305        }
          WiFi.c   306    
          WiFi.c   307        dispBox.left = 0;
    0000039A 2FB2                   MOV.L       R11,@R15
          WiFi.c   308        dispBox.top = 0;




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 05-Aug-2018 14:17:19  PAGE   15


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000039C 1FB1                   MOV.L       R11,@(4,R15)
          WiFi.c   309        dispBox.right = 127;
    0000039E 1FC2                   MOV.L       R12,@(8,R15)
          WiFi.c   310        dispBox.bottom = 6;
    000003A0 1FA3                   MOV.L       R10,@(12,R15)
          WiFi.c   311    
          WiFi.c   312        Bdisp_PutDispArea_DD(&dispBox);
    000003A2 D31C                   MOV.L       L1001+88,R3; _Bdisp_PutDispArea_DD
    000003A4 430B                   JSR         @R3
    000003A6 64F3                   MOV         R15,R4
          WiFi.c   313    }
    000003A8 7F10                   ADD         #16,R15
    000003AA 4F26                   LDS.L       @R15+,PR
    000003AC 68F6                   MOV.L       @R15+,R8
    000003AE 69F6                   MOV.L       @R15+,R9
    000003B0 6AF6                   MOV.L       @R15+,R10
    000003B2 6BF6                   MOV.L       @R15+,R11
    000003B4 6CF6                   MOV.L       @R15+,R12
    000003B6 6DF6                   MOV.L       @R15+,R13
    000003B8 000B                   RTS
    000003BA 6EF6                   MOV.L       @R15+,R14
    000003BC              L1001:                            
    000003BC <00000000>             .DATA.L     L429
    000003C0 <00000000>             .DATA.L     L430
    000003C4 <00000000>             .DATA.L     _status
    000003C8 <00000000>             .DATA.L     _memcmp
    000003CC <00000000>             .DATA.L     L432
    000003D0 <00000000>             .DATA.L     _RTC_GetTicks
    000003D4 <00000000>             .DATA.L     _Keyboard_ClrBuffer
    000003D8 <00000000>             .DATA.L     _Serial_Open
    000003DC <00000000>             .DATA.L     _Bdisp_AreaClr_VRAM
    000003E0 <00000000>             .DATA.L     _Bdisp_SetPoint_VRAM
    000003E4 <00000000>             .DATA.L     __modls
    000003E8 <00000000>             .DATA.L     _network
    000003EC <00000000>             .DATA.L     __itod
    000003F0 40590000               .DATA.L     H'40590000
    000003F4 <00000000>             .DATA.L     __addd
    000003F8 EB851EB8               .DATA.L     H'EB851EB8
    000003FC 3FBEB851               .DATA.L     H'3FBEB851
    00000400 <00000000>             .DATA.L     __muld
    00000404 <00000000>             .DATA.L     __dtoi
    00000408 <00000000>             .DATA.L     _strlen
    0000040C <00000000>             .DATA.L     _locate
    00000410 <00000000>             .DATA.L     _Print
    00000414 <00000000>             .DATA.L     _Bdisp_PutDispArea_DD
          WiFi.c   314    
          WiFi.c   315    void drawBubble(int x, int y, int filled) {
    00000418              _drawBubble:                     ; function: drawBubble
                                                           ; frame size=60
    00000418 2FE6                   MOV.L       R14,@-R15
    0000041A 6E53                   MOV         R5,R14
    0000041C 2FD6                   MOV.L       R13,@-R15
          WiFi.c   316        Bdisp_DrawLineVRAM(x + 1, y, x + 3, y);
    0000041E 67E3                   MOV         R14,R7
    00000420 2FC6                   MOV.L       R12,@-R15
    00000422 6D43                   MOV         R4,R13
    00000424 2FB6                   MOV.L       R11,@-R15




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 05-Aug-2018 14:17:19  PAGE   16


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000426 6573                   MOV         R7,R5
    00000428 DC5A                   MOV.L       L1002,R12  ; _Bdisp_DrawLineVRAM
    0000042A 64D3                   MOV         R13,R4
    0000042C 4F22                   STS.L       PR,@-R15
    0000042E 7401                   ADD         #1,R4
    00000430 7FD8                   ADD         #-40,R15
    00000432 1F65                   MOV.L       R6,@(20,R15)
    00000434 66D3                   MOV         R13,R6
    00000436 7603                   ADD         #3,R6
    00000438 1F61                   MOV.L       R6,@(4,R15)
    0000043A 4C0B                   JSR         @R12
    0000043C 1F43                   MOV.L       R4,@(12,R15)
          WiFi.c   317        Bdisp_DrawLineVRAM(x, y + 1, x + 4, y + 1);
    0000043E 67E3                   MOV         R14,R7
    00000440 7701                   ADD         #1,R7
    00000442 6BD3                   MOV         R13,R11
    00000444 1F72                   MOV.L       R7,@(8,R15)
    00000446 6573                   MOV         R7,R5
    00000448 7B04                   ADD         #4,R11
    0000044A 66B3                   MOV         R11,R6
    0000044C 4C0B                   JSR         @R12
    0000044E 64D3                   MOV         R13,R4
          WiFi.c   318        Bdisp_DrawLineVRAM(x, y + 2, x + 4, y + 2);
    00000450 67E3                   MOV         R14,R7
    00000452 7702                   ADD         #2,R7
    00000454 1F74                   MOV.L       R7,@(16,R15)
    00000456 66B3                   MOV         R11,R6
    00000458 6573                   MOV         R7,R5
    0000045A 4C0B                   JSR         @R12
    0000045C 64D3                   MOV         R13,R4
          WiFi.c   319        Bdisp_DrawLineVRAM(x, y + 3, x + 4, y + 3);
    0000045E 67E3                   MOV         R14,R7
    00000460 7703                   ADD         #3,R7
    00000462 66B3                   MOV         R11,R6
    00000464 2F72                   MOV.L       R7,@R15
    00000466 6573                   MOV         R7,R5
    00000468 4C0B                   JSR         @R12
    0000046A 64D3                   MOV         R13,R4
          WiFi.c   320        Bdisp_DrawLineVRAM(x + 1, y + 4, x + 3, y + 4);
    0000046C 67E3                   MOV         R14,R7
    0000046E 7704                   ADD         #4,R7
    00000470 1F74                   MOV.L       R7,@(16,R15)
    00000472 6573                   MOV         R7,R5
    00000474 56F1                   MOV.L       @(4,R15),R6
    00000476 4C0B                   JSR         @R12
    00000478 54F3                   MOV.L       @(12,R15),R4
          WiFi.c   321    
          WiFi.c   322        if (filled == 0) {
    0000047A 53F5                   MOV.L       @(20,R15),R3
    0000047C 2338                   TST         R3,R3
    0000047E 8B0B                   BF          L837
          WiFi.c   323            DISPBOX clearBox;
          WiFi.c   324            clearBox.left = x + 1;
    00000480 53F3                   MOV.L       @(12,R15),R3
          WiFi.c   325            clearBox.top = y + 1;
          WiFi.c   326            clearBox.right = x + 3;
          WiFi.c   327            clearBox.bottom = y + 3;




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 05-Aug-2018 14:17:19  PAGE   17


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          WiFi.c   328    
          WiFi.c   329            Bdisp_AreaClr_VRAM(&clearBox);
    00000482 64F3                   MOV         R15,R4
    00000484 1F36                   MOV.L       R3,@(24,R15)
    00000486 52F2                   MOV.L       @(8,R15),R2
    00000488 1F27                   MOV.L       R2,@(28,R15)
    0000048A 53F1                   MOV.L       @(4,R15),R3
    0000048C 1F38                   MOV.L       R3,@(32,R15)
    0000048E 62F2                   MOV.L       @R15,R2
    00000490 D341                   MOV.L       L1002+4,R3 ; _Bdisp_AreaClr_VRAM
    00000492 1F29                   MOV.L       R2,@(36,R15)
    00000494 430B                   JSR         @R3
    00000496 7418                   ADD         #24,R4
    00000498              L837:                             
          WiFi.c   330        }
          WiFi.c   331    }
    00000498 7F28                   ADD         #40,R15
    0000049A 4F26                   LDS.L       @R15+,PR
    0000049C 6BF6                   MOV.L       @R15+,R11
    0000049E 6CF6                   MOV.L       @R15+,R12
    000004A0 6DF6                   MOV.L       @R15+,R13
    000004A2 000B                   RTS
    000004A4 6EF6                   MOV.L       @R15+,R14
          WiFi.c   332    
          WiFi.c   333    void getNetworkInfo() { //überarbeitet
    000004A6              _getNetworkInfo:                 ; function: getNetworkInfo
                                                           ; frame size=84
    000004A6 2FE6                   MOV.L       R14,@-R15
    000004A8 2FD6                   MOV.L       R13,@-R15
    000004AA 2FC6                   MOV.L       R12,@-R15
    000004AC 2FB6                   MOV.L       R11,@-R15
    000004AE 2FA6                   MOV.L       R10,@-R15
    000004B0 2F96                   MOV.L       R9,@-R15
    000004B2 2F86                   MOV.L       R8,@-R15
    000004B4 4F22                   STS.L       PR,@-R15
    000004B6 7FCC                   ADD         #-52,R15
          WiFi.c   334        unsigned int key;
          WiFi.c   335        int numChars;
          WiFi.c   336        int lastTabIndex;
          WiFi.c   337    
          WiFi.c   338            unsigned char netInfo[50];
          WiFi.c   339            
          WiFi.c   340        sendCommand("GETNETINFO");
    000004B8 D438                   MOV.L       L1002+8,R4 ; L462
    000004BA B47A                   BSR         _sendCommand
    000004BC 0009                   NOP
          WiFi.c   341                   
          WiFi.c   342        receiveStatus();
    000004BE B4C5                   BSR         _receiveStatus
    000004C0 0009                   NOP
          WiFi.c   343                                                    
          WiFi.c   344        if (memcmp(status,"OK",2)==0){
    000004C2 D537                   MOV.L       L1002+12,R5; L430
    000004C4 D437                   MOV.L       L1002+16,R4; _status
    000004C6 D338                   MOV.L       L1002+20,R3; _memcmp
    000004C8 430B                   JSR         @R3
    000004CA E602                   MOV         #2,R6




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 05-Aug-2018 14:17:19  PAGE   18


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000004CC 2008                   TST         R0,R0
    000004CE 8B57                   BF          L841
          WiFi.c   345                 
          WiFi.c   346            serialReadString(netInfo);
    000004D0 6CF3                   MOV         R15,R12
    000004D2 B58D                   BSR         _serialReadString
    000004D4 64C3                   MOV         R12,R4
          WiFi.c   347    
          WiFi.c   348            if (netInfo[0] == 0) {
    000004D6 DE35                   MOV.L       L1002+24,R14; _network
    000004D8 62C0                   MOV.B       @R12,R2
    000004DA 2228                   TST         R2,R2
    000004DC 8F26                   BF/S        L839
    000004DE EB00                   MOV         #0,R11
          WiFi.c   349                network.isConnected = false;
    000004E0 2EB2                   MOV.L       R11,@R14
          WiFi.c   350                
          WiFi.c   351                 locate(21,7);
    000004E2 E507                   MOV         #7,R5
    000004E4 DD32                   MOV.L       L1002+28,R13; _locate
    000004E6 4D0B                   JSR         @R13
    000004E8 E415                   MOV         #21,R4
          WiFi.c   352                 Print((unsigned char*) "9");
    000004EA DC32                   MOV.L       L1002+32,R12; _Print
    000004EC D432                   MOV.L       L1002+36,R4; L465
    000004EE 4C0B                   JSR         @R12
    000004F0 0009                   NOP
          WiFi.c   353                 Bdisp_PutDisp_DD(); 
    000004F2 DA32                   MOV.L       L1002+40,R10; _Bdisp_PutDisp_DD
    000004F4 4A0B                   JSR         @R10
    000004F6 0009                   NOP
          WiFi.c   354    
          WiFi.c   355                if(network.ssid!=0){
    000004F8 52E1                   MOV.L       @(4,R14),R2
    000004FA 2228                   TST         R2,R2
    000004FC 8903                   BT          L840
          WiFi.c   356                    free(network.ssid);
    000004FE D330                   MOV.L       L1002+44,R3; _free
    00000500 430B                   JSR         @R3
    00000502 54E1                   MOV.L       @(4,R14),R4
          WiFi.c   357                    network.ssid=0;            
    00000504 1EB1                   MOV.L       R11,@(4,R14)
    00000506              L840:                             
          WiFi.c   358                }
          WiFi.c   359                
          WiFi.c   360                 locate(21,7);
    00000506 E507                   MOV         #7,R5
    00000508 4D0B                   JSR         @R13
    0000050A E415                   MOV         #21,R4
          WiFi.c   361                 Print((unsigned char*) "7");
    0000050C D42D                   MOV.L       L1002+48,R4; L468
    0000050E 4C0B                   JSR         @R12
    00000510 0009                   NOP
          WiFi.c   362                 Bdisp_PutDisp_DD();
    00000512 4A0B                   JSR         @R10
    00000514 0009                   NOP
          WiFi.c   363    




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 05-Aug-2018 14:17:19  PAGE   19


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          WiFi.c   364                network.rssi = 0;
          WiFi.c   365    
          WiFi.c   366                 locate(21,7);
    00000516 E507                   MOV         #7,R5
    00000518 1EB2                   MOV.L       R11,@(8,R14)
    0000051A 4D0B                   JSR         @R13
    0000051C E415                   MOV         #21,R4
          WiFi.c   367                 Print((unsigned char*) "8");
    0000051E D42A                   MOV.L       L1002+52,R4; L469
    00000520 4C0B                   JSR         @R12
    00000522 0009                   NOP
          WiFi.c   368                 Bdisp_PutDisp_DD(); 
    00000524 4A0B                   JSR         @R10
    00000526 0009                   NOP
          WiFi.c   369    
          WiFi.c   370                return;
    00000528 A02A                   BRA         L841
    0000052A 0009                   NOP
    0000052C              L839:                             
          WiFi.c   371            }
          WiFi.c   372               
          WiFi.c   373            for (numChars = 0, lastTabIndex = 0; netInfo[numChars] != 0; numChars = numChars + 1) {
    0000052C D827                   MOV.L       L1002+56,R8; _memset
    0000052E 6DB3                   MOV         R11,R13
    00000530 D927                   MOV.L       L1002+60,R9; _malloc
    00000532 A015                   BRA         L842
    00000534 6AB3                   MOV         R11,R10
    00000536              L843:                             
    00000536 6BD3                   MOV         R13,R11
    00000538 60D3                   MOV         R13,R0
    0000053A 03CC                   MOV.B       @(R0,R12),R3
    0000053C 603C                   EXTU.B      R3,R0
    0000053E 8809                   CMP/EQ      #9,R0
    00000540 8F0D                   BF/S        L844
    00000542 7B01                   ADD         #1,R11
          WiFi.c   374                if (netInfo[numChars] == '\t') {
          WiFi.c   375                    network.ssid = (unsigned char*) malloc(numChars + 1);
    00000544 490B                   JSR         @R9
    00000546 64B3                   MOV         R11,R4
    00000548 1E01                   MOV.L       R0,@(4,R14)
          WiFi.c   376                    memset(network.ssid, 0, numChars + 1);
    0000054A 66B3                   MOV         R11,R6
    0000054C E500                   MOV         #0,R5
    0000054E 480B                   JSR         @R8
    00000550 6403                   MOV         R0,R4
          WiFi.c   377                    memcpy(network.ssid, netInfo, numChars);
    00000552 66D3                   MOV         R13,R6
    00000554 D21F                   MOV.L       L1002+64,R2; _memcpy
    00000556 65C3                   MOV         R12,R5
    00000558 420B                   JSR         @R2
    0000055A 54E1                   MOV.L       @(4,R14),R4
          WiFi.c   378    
          WiFi.c   379                    lastTabIndex = numChars;
    0000055C 6AD3                   MOV         R13,R10
    0000055E              L844:                             
    0000055E 6DB3                   MOV         R11,R13
    00000560              L842:                             




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 05-Aug-2018 14:17:19  PAGE   20


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000560 60D3                   MOV         R13,R0
    00000562 03CC                   MOV.B       @(R0,R12),R3
    00000564 633C                   EXTU.B      R3,R3
    00000566 2338                   TST         R3,R3
    00000568 8BE5                   BF          L843
          WiFi.c   380                }
          WiFi.c   381            }   
          WiFi.c   382    
          WiFi.c   383            if (lastTabIndex < numChars - 1) {
    0000056A 7DFF                   ADD         #-1,R13
    0000056C 3AD3                   CMP/GE      R13,R10
    0000056E 8905                   BT          L845
          WiFi.c   384                network.rssi = atoi(&netInfo[lastTabIndex + 1]);
    00000570 D319                   MOV.L       L1002+68,R3; _atoi
    00000572 64A3                   MOV         R10,R4
    00000574 34CC                   ADD         R12,R4
    00000576 430B                   JSR         @R3
    00000578 7401                   ADD         #1,R4
    0000057A 1E02                   MOV.L       R0,@(8,R14)
    0000057C              L845:                             
          WiFi.c   385            }
          WiFi.c   386        
          WiFi.c   387            network.isConnected = true;
    0000057C E201                   MOV         #1,R2
    0000057E 2E22                   MOV.L       R2,@R14
          WiFi.c   388                    
          WiFi.c   389        }   
          WiFi.c   390    }
    00000580              L841:                             
    00000580 7F34                   ADD         #52,R15
    00000582 4F26                   LDS.L       @R15+,PR
    00000584 68F6                   MOV.L       @R15+,R8
    00000586 69F6                   MOV.L       @R15+,R9
    00000588 6AF6                   MOV.L       @R15+,R10
    0000058A 6BF6                   MOV.L       @R15+,R11
    0000058C 6CF6                   MOV.L       @R15+,R12
    0000058E 6DF6                   MOV.L       @R15+,R13
    00000590 000B                   RTS
    00000592 6EF6                   MOV.L       @R15+,R14
    00000594              L1002:                            
    00000594 <00000000>             .DATA.L     _Bdisp_DrawLineVRAM
    00000598 <00000000>             .DATA.L     _Bdisp_AreaClr_VRAM
    0000059C <00000000>             .DATA.L     L462
    000005A0 <00000000>             .DATA.L     L430
    000005A4 <00000000>             .DATA.L     _status
    000005A8 <00000000>             .DATA.L     _memcmp
    000005AC <00000000>             .DATA.L     _network
    000005B0 <00000000>             .DATA.L     _locate
    000005B4 <00000000>             .DATA.L     _Print
    000005B8 <00000000>             .DATA.L     L465
    000005BC <00000000>             .DATA.L     _Bdisp_PutDisp_DD
    000005C0 <00000000>             .DATA.L     _free
    000005C4 <00000000>             .DATA.L     L468
    000005C8 <00000000>             .DATA.L     L469
    000005CC <00000000>             .DATA.L     _memset
    000005D0 <00000000>             .DATA.L     _malloc
    000005D4 <00000000>             .DATA.L     _memcpy




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 05-Aug-2018 14:17:19  PAGE   21


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000005D8 <00000000>             .DATA.L     _atoi
          WiFi.c   391    
          WiFi.c   392    void connectToNetwork() {    
    000005DC              _connectToNetwork:               ; function: connectToNetwork
                                                           ; frame size=84
                                                           ; used runtime library name:
                                                           ; __modls
    000005DC 2FE6                   MOV.L       R14,@-R15
    000005DE 2FD6                   MOV.L       R13,@-R15
    000005E0 2FC6                   MOV.L       R12,@-R15
          WiFi.c   393    
          WiFi.c   394        unsigned int key;
          WiFi.c   395        int counter = 0, lines = 0, lineBegin = 0, selection = 0, scroll = 0, lastTicks, a = 0, numChars = 0;
    000005E2 ED00                   MOV         #0,R13
          WiFi.c   396        unsigned char text[22];
          WiFi.c   397    
          WiFi.c   398        Serial_ClearReceiveBuffer();
    000005E4 D330                   MOV.L       L1003+4,R3 ; _Serial_ClearReceiveBuffer
    000005E6 6ED3                   MOV         R13,R14
    000005E8 2FB6                   MOV.L       R11,@-R15
    000005EA 6CD3                   MOV         R13,R12
    000005EC 2FA6                   MOV.L       R10,@-R15
    000005EE 2F96                   MOV.L       R9,@-R15
    000005F0 2F86                   MOV.L       R8,@-R15
    000005F2 4F22                   STS.L       PR,@-R15
    000005F4 7FD4                   ADD         #-44,R15
    000005F6 430B                   JSR         @R3
    000005F8 2FD2                   MOV.L       R13,@R15
          WiFi.c   399    
          WiFi.c   400        
          WiFi.c   401        lastTicks = RTC_GetTicks();
    000005FA D22C                   MOV.L       L1003+8,R2 ; _RTC_GetTicks
    000005FC 420B                   JSR         @R2
    000005FE 0009                   NOP
    00000600 1F03                   MOV.L       R0,@(12,R15)
          WiFi.c   402        counter = 0;
    00000602 6AC3                   MOV         R12,R10
    00000604 D82A                   MOV.L       L1003+12,R8; _Print
    00000606 DB2B                   MOV.L       L1003+16,R11; _buf
          WiFi.c   403    
          WiFi.c   404        while(1) {
    00000608              L847:                             
          WiFi.c   405            if (RTC_Elapsed_ms(lastTicks, 250) || counter == 0) {
    00000608 954C                   MOV.W       L1003,R5   ; H'00FA
    0000060A D32B                   MOV.L       L1003+20,R3; _RTC_Elapsed_ms
    0000060C 430B                   JSR         @R3
    0000060E 54F3                   MOV.L       @(12,R15),R4
    00000610 2008                   TST         R0,R0
    00000612 8B01                   BF          L849
    00000614 2AA8                   TST         R10,R10
    00000616 8B25                   BF          L848
    00000618              L849:                             
          WiFi.c   406                counter = counter + 1;
          WiFi.c   407                counter = (counter - 1) % 5 + 1;
    00000618 D328                   MOV.L       L1003+24,R3; __modls
    0000061A 7A01                   ADD         #1,R10
    0000061C 61A3                   MOV         R10,R1




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 05-Aug-2018 14:17:19  PAGE   22


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000061E 71FF                   ADD         #-1,R1
    00000620 430B                   JSR         @R3
    00000622 E005                   MOV         #5,R0
          WiFi.c   408                lastTicks = RTC_GetTicks();
    00000624 D221                   MOV.L       L1003+8,R2 ; _RTC_GetTicks
    00000626 6A03                   MOV         R0,R10
    00000628 420B                   JSR         @R2
    0000062A 7A01                   ADD         #1,R10
          WiFi.c   409    
          WiFi.c   410                Bdisp_AllClr_DDVRAM();
    0000062C D324                   MOV.L       L1003+28,R3; _Bdisp_AllClr_DDVRAM
    0000062E 430B                   JSR         @R3
    00000630 1F03                   MOV.L       R0,@(12,R15)
          WiFi.c   411                locate(1, 1);
    00000632 E501                   MOV         #1,R5
    00000634 D223                   MOV.L       L1003+32,R2; _locate
    00000636 420B                   JSR         @R2
    00000638 6453                   MOV         R5,R4
          WiFi.c   412                Print((unsigned char*) "Scanning");
    0000063A D423                   MOV.L       L1003+36,R4; L489
    0000063C 480B                   JSR         @R8
    0000063E 0009                   NOP
          WiFi.c   413                for (a = 0; a < counter; a = a + 1) {
    00000640 4A15                   CMP/PL      R10
    00000642 8F0C                   BF/S        L850
    00000644 69D3                   MOV         R13,R9
    00000646              L851:                             
          WiFi.c   414                    locate(a + 1, 2);
    00000646 E502                   MOV         #2,R5
    00000648 D31E                   MOV.L       L1003+32,R3; _locate
    0000064A 6493                   MOV         R9,R4
    0000064C 7401                   ADD         #1,R4
    0000064E 430B                   JSR         @R3
    00000650 1F41                   MOV.L       R4,@(4,R15)
          WiFi.c   415                    Print((unsigned char*) ".");
    00000652 D41E                   MOV.L       L1003+40,R4; L491
    00000654 480B                   JSR         @R8
    00000656 0009                   NOP
    00000658 59F1                   MOV.L       @(4,R15),R9
    0000065A 39A3                   CMP/GE      R10,R9
    0000065C 8BF3                   BF          L851
    0000065E              L850:                             
          WiFi.c   416                }
          WiFi.c   417                Bdisp_PutDisp_DD();
    0000065E D21C                   MOV.L       L1003+44,R2; _Bdisp_PutDisp_DD
    00000660 420B                   JSR         @R2
    00000662 0009                   NOP
    00000664              L848:                             
          WiFi.c   418            }
          WiFi.c   419    
          WiFi.c   420            if (Serial_GetReceivedBytesAvailable() > 0) {
    00000664 D31B                   MOV.L       L1003+48,R3; _Serial_GetReceivedBytesAvailable
    00000666 430B                   JSR         @R3
    00000668 0009                   NOP
    0000066A 4015                   CMP/PL      R0
    0000066C 8BCC                   BF          L847
          WiFi.c   421                unsigned char c;




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 05-Aug-2018 14:17:19  PAGE   23


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          WiFi.c   422                Serial_ReadOneByte(&c);
    0000066E 64F3                   MOV         R15,R4
    00000670 D319                   MOV.L       L1003+52,R3; _Serial_ReadOneByte
    00000672 430B                   JSR         @R3
    00000674 7410                   ADD         #16,R4
          WiFi.c   423    
          WiFi.c   424                if (c == 0) {
    00000676 E010                   MOV         #16,R0
    00000678 02FC                   MOV.B       @(R0,R15),R2
    0000067A 2228                   TST         R2,R2
    0000067C 8908                   BT          L856
          WiFi.c   425                    break;
          WiFi.c   426                } else {
          WiFi.c   427                    buf[numChars] = c;
    0000067E 61F3                   MOV         R15,R1
    00000680 60F2                   MOV.L       @R15,R0
    00000682 7110                   ADD         #16,R1
    00000684 6310                   MOV.B       @R1,R3
    00000686 0B34                   MOV.B       R3,@(R0,R11)
          WiFi.c   428                    numChars = numChars + 1;
    00000688 62F2                   MOV.L       @R15,R2
    0000068A 7201                   ADD         #1,R2
    0000068C AFBC                   BRA         L847
    0000068E 2F22                   MOV.L       R2,@R15
    00000690              L856:                             
          WiFi.c   429                }
          WiFi.c   430            }
          WiFi.c   431        }
          WiFi.c   432    
          WiFi.c   433        do {
          WiFi.c   434                    
          WiFi.c   435                    Bdisp_AllClr_DDVRAM();
    00000690 D30B                   MOV.L       L1003+28,R3; _Bdisp_AllClr_DDVRAM
    00000692 430B                   JSR         @R3
    00000694 0009                   NOP
          WiFi.c   436    
          WiFi.c   437            for (counter = 0, lines = 0, lineBegin = 0; buf[counter] != 0; counter = counter + 1) {
    00000696 69D3                   MOV         R13,R9
    00000698 2FD2                   MOV.L       R13,@R15
    0000069A 63C3                   MOV         R12,R3
    0000069C 6AD3                   MOV         R13,R10
    0000069E 7308                   ADD         #8,R3
    000006A0 A044                   BRA         L857
    000006A2 1F33                   MOV.L       R3,@(12,R15)
    000006A4              L1003:                            
    000006A4 00FA                   .DATA.W     H'00FA
    000006A6 0000                   .DATA.W     0
    000006A8 <00000000>             .DATA.L     _Serial_ClearReceiveBuffer
    000006AC <00000000>             .DATA.L     _RTC_GetTicks
    000006B0 <00000000>             .DATA.L     _Print
    000006B4 <00000000>             .DATA.L     _buf
    000006B8 <00000000>             .DATA.L     _RTC_Elapsed_ms
    000006BC <00000000>             .DATA.L     __modls
    000006C0 <00000000>             .DATA.L     _Bdisp_AllClr_DDVRAM
    000006C4 <00000000>             .DATA.L     _locate
    000006C8 <00000000>             .DATA.L     L489
    000006CC <00000000>             .DATA.L     L491




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 05-Aug-2018 14:17:19  PAGE   24


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000006D0 <00000000>             .DATA.L     _Bdisp_PutDisp_DD
    000006D4 <00000000>             .DATA.L     _Serial_GetReceivedBytesAvailable
    000006D8 <00000000>             .DATA.L     _Serial_ReadOneByte
    000006DC              L858:                             
    000006DC 6393                   MOV         R9,R3
    000006DE 7301                   ADD         #1,R3
    000006E0 1F31                   MOV.L       R3,@(4,R15)
    000006E2 6093                   MOV         R9,R0
    000006E4 02BC                   MOV.B       @(R0,R11),R2
    000006E6 602C                   EXTU.B      R2,R0
    000006E8 880A                   CMP/EQ      #10,R0
    000006EA 8B1E                   BF          L859
          WiFi.c   438                if (buf[counter] == '\n') {
          WiFi.c   439                    lines = lines + 1;
    000006EC 7A01                   ADD         #1,R10
          WiFi.c   440    
          WiFi.c   441                    if (lines > scroll && lines <= scroll + 8) {
    000006EE 3AC7                   CMP/GT      R12,R10
    000006F0 8B19                   BF          L860
    000006F2 52F3                   MOV.L       @(12,R15),R2
    000006F4 3A27                   CMP/GT      R2,R10
    000006F6 8916                   BT          L860
          WiFi.c   442                        memset(text, 0, sizeof text);
    000006F8 D323                   MOV.L       L1004+4,R3 ; _memset
    000006FA E616                   MOV         #22,R6
    000006FC E500                   MOV         #0,R5
    000006FE 64F3                   MOV         R15,R4
    00000700 430B                   JSR         @R3
    00000702 7414                   ADD         #20,R4
          WiFi.c   443                        memcpy(text, &buf[lineBegin], counter - lineBegin);
    00000704 63F2                   MOV.L       @R15,R3
    00000706 6693                   MOV         R9,R6
    00000708 D220                   MOV.L       L1004+8,R2 ; _memcpy
    0000070A 64F3                   MOV         R15,R4
    0000070C 3638                   SUB         R3,R6
    0000070E 6533                   MOV         R3,R5
    00000710 35BC                   ADD         R11,R5
    00000712 420B                   JSR         @R2
    00000714 7414                   ADD         #20,R4
          WiFi.c   444    
          WiFi.c   445                        locate(1, lines - scroll);
    00000716 65A3                   MOV         R10,R5
    00000718 D31D                   MOV.L       L1004+12,R3; _locate
    0000071A 35C8                   SUB         R12,R5
    0000071C 430B                   JSR         @R3
    0000071E E401                   MOV         #1,R4
          WiFi.c   446                        Print(text);
    00000720 64F3                   MOV         R15,R4
    00000722 480B                   JSR         @R8
    00000724 7414                   ADD         #20,R4
    00000726              L860:                             
          WiFi.c   447                    }
          WiFi.c   448    
          WiFi.c   449                    lineBegin = counter + 1;
    00000726 52F1                   MOV.L       @(4,R15),R2
    00000728 2F22                   MOV.L       R2,@R15
    0000072A              L859:                             




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 05-Aug-2018 14:17:19  PAGE   25


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000072A 59F1                   MOV.L       @(4,R15),R9
    0000072C              L857:                             
    0000072C 6093                   MOV         R9,R0
    0000072E 03BC                   MOV.B       @(R0,R11),R3
    00000730 633C                   EXTU.B      R3,R3
    00000732 2338                   TST         R3,R3
    00000734 8BD2                   BF          L858
          WiFi.c   450                }
          WiFi.c   451            }
          WiFi.c   452    
          WiFi.c   453            Bdisp_AreaReverseVRAM(0, 8 * (selection - scroll), 127, 8 * (selection - scroll) + 7);
    00000736 69E3                   MOV         R14,R9
    00000738 D316                   MOV.L       L1004+16,R3; _Bdisp_AreaReverseVRAM
    0000073A E67F                   MOV         #127,R6
    0000073C 39C8                   SUB         R12,R9
    0000073E 4908                   SHLL2       R9
    00000740 4900                   SHLL        R9
    00000742 6793                   MOV         R9,R7
    00000744 7707                   ADD         #7,R7
    00000746 6593                   MOV         R9,R5
    00000748 430B                   JSR         @R3
    0000074A E400                   MOV         #0,R4
          WiFi.c   454    
          WiFi.c   455            GetKey(&key);
    0000074C D212                   MOV.L       L1004+20,R2; _GetKey
    0000074E 64F3                   MOV         R15,R4
    00000750 420B                   JSR         @R2
    00000752 7408                   ADD         #8,R4
          WiFi.c   456    
          WiFi.c   457            if (key == 30018) {
    00000754 9316                   MOV.W       L1004,R3   ; H'7542
    00000756 52F2                   MOV.L       @(8,R15),R2
    00000758 3230                   CMP/EQ      R3,R2
    0000075A 8B01                   BF          L861
          WiFi.c   458                selection = selection - 1;
    0000075C A005                   BRA         L862
    0000075E 7EFF                   ADD         #-1,R14
    00000760              L861:                             
          WiFi.c   459            } else if (key == 30023) {
    00000760 9111                   MOV.W       L1004+2,R1 ; H'7547
    00000762 52F2                   MOV.L       @(8,R15),R2
    00000764 3210                   CMP/EQ      R1,R2
    00000766 8B00                   BF          L862
          WiFi.c   460                selection = selection + 1;
    00000768 7E01                   ADD         #1,R14
    0000076A              L862:                             
          WiFi.c   461            }
          WiFi.c   462    
          WiFi.c   463            if (selection < 0) {
    0000076A 4E11                   CMP/PZ      R14
    0000076C 8901                   BT          L864
          WiFi.c   464                selection = 0;
    0000076E A019                   BRA         L865
    00000770 6ED3                   MOV         R13,R14
    00000772              L864:                             
          WiFi.c   465            } else if (selection >= lines) {
    00000772 3EA3                   CMP/GE      R10,R14




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 05-Aug-2018 14:17:19  PAGE   26


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000774 8B02                   BF          L866
          WiFi.c   466                selection = lines - 1;
    00000776 6EA3                   MOV         R10,R14
    00000778 A014                   BRA         L865
    0000077A 7EFF                   ADD         #-1,R14
    0000077C              L866:                             
          WiFi.c   467            } else {
          WiFi.c   468                if (selection < scroll) {
    0000077C 3EC3                   CMP/GE      R12,R14
    0000077E 890D                   BT          L868
          WiFi.c   469                    scroll = scroll - 1;
    00000780 A010                   BRA         L865
    00000782 7CFF                   ADD         #-1,R12
    00000784              L1004:                            
    00000784 7542                   .DATA.W     H'7542
    00000786 7547                   .DATA.W     H'7547
    00000788 <00000000>             .DATA.L     _memset
    0000078C <00000000>             .DATA.L     _memcpy
    00000790 <00000000>             .DATA.L     _locate
    00000794 <00000000>             .DATA.L     _Bdisp_AreaReverseVRAM
    00000798 <00000000>             .DATA.L     _GetKey
    0000079C              L868:                             
          WiFi.c   470                } else if (selection >= 8 + scroll) {
    0000079C 53F3                   MOV.L       @(12,R15),R3
    0000079E 3E33                   CMP/GE      R3,R14
    000007A0 8B00                   BF          L865
          WiFi.c   471                    scroll = scroll + 1;
    000007A2 7C01                   ADD         #1,R12
    000007A4              L865:                             
          WiFi.c   472                }
          WiFi.c   473            }
          WiFi.c   474        } while(key != 30004);
    000007A4 933A                   MOV.W       L1005,R3   ; H'7534
    000007A6 52F2                   MOV.L       @(8,R15),R2
    000007A8 3230                   CMP/EQ      R3,R2
    000007AA 8901                   BT          L1006
    000007AC AF70                   BRA         L856
    000007AE 0009                   NOP
    000007B0              L1006:                            
          WiFi.c   475            
          WiFi.c   476            Bdisp_AllClr_DDVRAM();
    000007B0 D31B                   MOV.L       L1005+4,R3 ; _Bdisp_AllClr_DDVRAM
    000007B2 430B                   JSR         @R3
    000007B4 0009                   NOP
          WiFi.c   477    
          WiFi.c   478            memset(buf, 0, sizeof buf);
    000007B6 E500                   MOV         #0,R5
    000007B8 D21A                   MOV.L       L1005+8,R2 ; _memset
    000007BA 9630                   MOV.W       L1005+2,R6 ; H'01F4
    000007BC 420B                   JSR         @R2
    000007BE 64B3                   MOV         R11,R4
          WiFi.c   479        sprintf(buf, "%d", selection);      
    000007C0 2FE6                   MOV.L       R14,@-R15
    000007C2 D319                   MOV.L       L1005+12,R3; L507
    000007C4 D219                   MOV.L       L1005+16,R2; _sprintf
    000007C6 2F36                   MOV.L       R3,@-R15
    000007C8 420B                   JSR         @R2




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 05-Aug-2018 14:17:19  PAGE   27


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000007CA 64B3                   MOV         R11,R4
          WiFi.c   480        serialSendString(buf);
    000007CC B405                   BSR         _serialSendString
    000007CE 64B3                   MOV         R11,R4
          WiFi.c   481    
          WiFi.c   482        Bdisp_AllClr_DDVRAM();
    000007D0 D213                   MOV.L       L1005+4,R2 ; _Bdisp_AllClr_DDVRAM
    000007D2 420B                   JSR         @R2
    000007D4 0009                   NOP
          WiFi.c   483    
          WiFi.c   484        locate(1, 1);
    000007D6 E501                   MOV         #1,R5
    000007D8 D315                   MOV.L       L1005+20,R3; _locate
    000007DA 430B                   JSR         @R3
    000007DC 6453                   MOV         R5,R4
          WiFi.c   485        Print((unsigned char*) "Password:");
    000007DE D415                   MOV.L       L1005+24,R4; L508
    000007E0 480B                   JSR         @R8
    000007E2 0009                   NOP
          WiFi.c   486    
          WiFi.c   487        readString(1, 3,false);
    000007E4 E600                   MOV         #0,R6
    000007E6 E503                   MOV         #3,R5
    000007E8 B365                   BSR         _readString
    000007EA E401                   MOV         #1,R4
          WiFi.c   488        serialSendString(buf);
    000007EC B3F5                   BSR         _serialSendString
    000007EE 64B3                   MOV         R11,R4
          WiFi.c   489    
          WiFi.c   490        shouldRequestNetInfo=false;
    000007F0 D311                   MOV.L       L1005+28,R3; _shouldRequestNetInfo
    000007F2 E200                   MOV         #0,R2
    000007F4 2322                   MOV.L       R2,@R3
          WiFi.c   491    }
    000007F6 7F34                   ADD         #52,R15
    000007F8 4F26                   LDS.L       @R15+,PR
    000007FA 68F6                   MOV.L       @R15+,R8
    000007FC 69F6                   MOV.L       @R15+,R9
    000007FE 6AF6                   MOV.L       @R15+,R10
    00000800 6BF6                   MOV.L       @R15+,R11
    00000802 6CF6                   MOV.L       @R15+,R12
    00000804 6DF6                   MOV.L       @R15+,R13
    00000806 000B                   RTS
    00000808 6EF6                   MOV.L       @R15+,R14
          WiFi.c   492    
          WiFi.c   493    void disconnect() {
    0000080A              _disconnect:                     ; function: disconnect
                                                           ; frame size=4
    0000080A 4F22                   STS.L       PR,@-R15
          WiFi.c   494        Serial_BufferedTransmitOneByte((unsigned char) 114);
    0000080C D30B                   MOV.L       L1005+32,R3; _Serial_BufferedTransmitOneByte
    0000080E 430B                   JSR         @R3
    00000810 E472                   MOV         #114,R4
          WiFi.c   495        shouldRequestNetInfo=false;
    00000812 E200                   MOV         #0,R2
    00000814 D308                   MOV.L       L1005+28,R3; _shouldRequestNetInfo
          WiFi.c   496    }




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 05-Aug-2018 14:17:19  PAGE   28


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000816 4F26                   LDS.L       @R15+,PR
    00000818 000B                   RTS
    0000081A 2322                   MOV.L       R2,@R3
    0000081C              L1005:                            
    0000081C 7534                   .DATA.W     H'7534
    0000081E 01F4                   .DATA.W     H'01F4
    00000820 <00000000>             .DATA.L     _Bdisp_AllClr_DDVRAM
    00000824 <00000000>             .DATA.L     _memset
    00000828 <00000000>             .DATA.L     L507
    0000082C <00000000>             .DATA.L     _sprintf
    00000830 <00000000>             .DATA.L     _locate
    00000834 <00000000>             .DATA.L     L508
    00000838 <00000000>             .DATA.L     _shouldRequestNetInfo
    0000083C <00000000>             .DATA.L     _Serial_BufferedTransmitOneByte
          WiFi.c   497    
          WiFi.c   498    void browseFiles() {
    00000840              _browseFiles:                    ; function: browseFiles
                                                           ; frame size=48
    00000840 2FE6                   MOV.L       R14,@-R15
    00000842 2FD6                   MOV.L       R13,@-R15
    00000844 2FC6                   MOV.L       R12,@-R15
    00000846 2FB6                   MOV.L       R11,@-R15
    00000848 4F22                   STS.L       PR,@-R15
    0000084A 7FE4                   ADD         #-28,R15
          WiFi.c   499        unsigned int key;
          WiFi.c   500        int counter = 0, lines = 0, lineBegin = 0, selection = 0, scroll = 0, i;
          WiFi.c   501        unsigned char text[22];
          WiFi.c   502    
          WiFi.c   503            unsigned char* result;
          WiFi.c   504            
          WiFi.c   505            Bdisp_AllClr_DDVRAM();
    0000084C D137                   MOV.L       L1007+4,R1 ; _Bdisp_AllClr_DDVRAM
    0000084E 410B                   JSR         @R1
    00000850 0009                   NOP
          WiFi.c   506            locate(21,1);
    00000852 E501                   MOV         #1,R5
    00000854 DB36                   MOV.L       L1007+8,R11; _locate
    00000856 4B0B                   JSR         @R11
    00000858 E415                   MOV         #21,R4
          WiFi.c   507            Print(loupe);
    0000085A D436                   MOV.L       L1007+12,R4; _loupe
    0000085C D336                   MOV.L       L1007+16,R3; _Print
    0000085E 430B                   JSR         @R3
    00000860 0009                   NOP
          WiFi.c   508            locate(1,1);
    00000862 E501                   MOV         #1,R5
    00000864 4B0B                   JSR         @R11
    00000866 6453                   MOV         R5,R4
          WiFi.c   509            Bdisp_DrawLineVRAM(0,7,127,7);
    00000868 D234                   MOV.L       L1007+20,R2; _Bdisp_DrawLineVRAM
    0000086A E707                   MOV         #7,R7
    0000086C E67F                   MOV         #127,R6
    0000086E 6573                   MOV         R7,R5
    00000870 420B                   JSR         @R2
    00000872 E400                   MOV         #0,R4
          WiFi.c   510            Bdisp_PutDisp_DD;
          WiFi.c   511            readString(1,1,true);




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 05-Aug-2018 14:17:19  PAGE   29


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000874 E601                   MOV         #1,R6
    00000876 6563                   MOV         R6,R5
    00000878 B31D                   BSR         _readString
    0000087A 6463                   MOV         R6,R4
          WiFi.c   512            
          WiFi.c   513            memcpy(text,buf,strlen(buf)+1);
    0000087C DD30                   MOV.L       L1007+24,R13; _strlen
    0000087E 6CF3                   MOV         R15,R12
    00000880 DE30                   MOV.L       L1007+28,R14; _buf
    00000882 7C04                   ADD         #4,R12
    00000884 4D0B                   JSR         @R13
    00000886 64E3                   MOV         R14,R4
    00000888 D22F                   MOV.L       L1007+32,R2; _memcpy
    0000088A 6603                   MOV         R0,R6
    0000088C 7601                   ADD         #1,R6
    0000088E 65E3                   MOV         R14,R5
    00000890 420B                   JSR         @R2
    00000892 64C3                   MOV         R12,R4
          WiFi.c   514            
          WiFi.c   515            Serial_ClearReceiveBuffer();
    00000894 D32D                   MOV.L       L1007+36,R3; _Serial_ClearReceiveBuffer
    00000896 430B                   JSR         @R3
    00000898 0009                   NOP
          WiFi.c   516        Serial_ClearTransmitBuffer();
    0000089A D22D                   MOV.L       L1007+40,R2; _Serial_ClearTransmitBuffer
    0000089C 420B                   JSR         @R2
    0000089E 0009                   NOP
          WiFi.c   517            
          WiFi.c   518            sendCommand("SEARCH");
    000008A0 D42C                   MOV.L       L1007+44,R4; L520
    000008A2 B286                   BSR         _sendCommand
    000008A4 0009                   NOP
          WiFi.c   519            receiveStatus();                                        
    000008A6 B2D1                   BSR         _receiveStatus
    000008A8 0009                   NOP
          WiFi.c   520            if (memcmp(status,"OK",2)!=0){
    000008AA D52B                   MOV.L       L1007+48,R5; L430
    000008AC D42B                   MOV.L       L1007+52,R4; _status
    000008AE D32C                   MOV.L       L1007+56,R3; _memcmp
    000008B0 430B                   JSR         @R3
    000008B2 E602                   MOV         #2,R6
    000008B4 2008                   TST         R0,R0
    000008B6 8B30                   BF          L872
          WiFi.c   521                    return;
          WiFi.c   522            }           
          WiFi.c   523            Serial_BufferedTransmitNBytes(text,strlen(text)+1);
    000008B8 4D0B                   JSR         @R13
    000008BA 64C3                   MOV         R12,R4
    000008BC D329                   MOV.L       L1007+60,R3; _Serial_BufferedTransmitNBytes
    000008BE 6503                   MOV         R0,R5
    000008C0 7501                   ADD         #1,R5
    000008C2 430B                   JSR         @R3
    000008C4 64C3                   MOV         R12,R4
          WiFi.c   524            
          WiFi.c   525        //Bdisp_AllClr_DDVRAM();
          WiFi.c   526    
          WiFi.c   527        serialReadStringTimeout(30000,buf);




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 05-Aug-2018 14:17:19  PAGE   30


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000008C6 942F                   MOV.W       L1007,R4   ; H'7530
    000008C8 B396                   BSR         _serialReadStringTimeout
    000008CA 65E3                   MOV         R14,R5
          WiFi.c   528            result=(unsigned char*)malloc(strlen(buf)+1);
    000008CC 4D0B                   JSR         @R13
    000008CE 64E3                   MOV         R14,R4
    000008D0 D325                   MOV.L       L1007+64,R3; _malloc
    000008D2 6403                   MOV         R0,R4
    000008D4 430B                   JSR         @R3
    000008D6 7401                   ADD         #1,R4
    000008D8 6C03                   MOV         R0,R12
          WiFi.c   529            memcpy(result,buf,strlen(buf)+1);
    000008DA 4D0B                   JSR         @R13
    000008DC 64E3                   MOV         R14,R4
    000008DE 6603                   MOV         R0,R6
    000008E0 D219                   MOV.L       L1007+32,R2; _memcpy
    000008E2 65E3                   MOV         R14,R5
    000008E4 7601                   ADD         #1,R6
    000008E6 420B                   JSR         @R2
    000008E8 64C3                   MOV         R12,R4
          WiFi.c   530            
          WiFi.c   531            if(strlen(buf)==0){
    000008EA 4D0B                   JSR         @R13
    000008EC 64E3                   MOV         R14,R4
    000008EE 2008                   TST         R0,R0
    000008F0 8B11                   BF          L873
          WiFi.c   532                    Bdisp_AllClr_DDVRAM();
    000008F2 D20E                   MOV.L       L1007+4,R2 ; _Bdisp_AllClr_DDVRAM
    000008F4 420B                   JSR         @R2
    000008F6 0009                   NOP
          WiFi.c   533                    locate(0,3);
    000008F8 E503                   MOV         #3,R5
    000008FA 4B0B                   JSR         @R11
    000008FC E400                   MOV         #0,R4
          WiFi.c   534                    Print((unsigned char*)"KEIN ERGEBNIS GEFUNDEN");
    000008FE D41B                   MOV.L       L1007+68,R4; L523
    00000900 D30D                   MOV.L       L1007+16,R3; _Print
    00000902 430B                   JSR         @R3
    00000904 0009                   NOP
          WiFi.c   535                    Bdisp_PutDisp_DD();
    00000906 D21A                   MOV.L       L1007+72,R2; _Bdisp_PutDisp_DD
    00000908 420B                   JSR         @R2
    0000090A 0009                   NOP
          WiFi.c   536                    GetKey(&key);
    0000090C D319                   MOV.L       L1007+76,R3; _GetKey
    0000090E 430B                   JSR         @R3
    00000910 64F3                   MOV         R15,R4
          WiFi.c   537                    return;
    00000912 A002                   BRA         L872
    00000914 0009                   NOP
    00000916              L873:                             
          WiFi.c   538            }
          WiFi.c   539            drawBrowseResults(result);
    00000916 B02F                   BSR         _drawBrowseResults
    00000918 64C3                   MOV         R12,R4
          WiFi.c   540    }
    0000091A              L872:                             




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 05-Aug-2018 14:17:19  PAGE   31


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000091A 7F1C                   ADD         #28,R15
    0000091C 4F26                   LDS.L       @R15+,PR
    0000091E 6BF6                   MOV.L       @R15+,R11
    00000920 6CF6                   MOV.L       @R15+,R12
    00000922 6DF6                   MOV.L       @R15+,R13
    00000924 000B                   RTS
    00000926 6EF6                   MOV.L       @R15+,R14
    00000928              L1007:                            
    00000928 7530                   .DATA.W     H'7530
    0000092A 0000                   .DATA.W     0
    0000092C <00000000>             .DATA.L     _Bdisp_AllClr_DDVRAM
    00000930 <00000000>             .DATA.L     _locate
    00000934 <00000000>             .DATA.L     _loupe
    00000938 <00000000>             .DATA.L     _Print
    0000093C <00000000>             .DATA.L     _Bdisp_DrawLineVRAM
    00000940 <00000000>             .DATA.L     _strlen
    00000944 <00000000>             .DATA.L     _buf
    00000948 <00000000>             .DATA.L     _memcpy
    0000094C <00000000>             .DATA.L     _Serial_ClearReceiveBuffer
    00000950 <00000000>             .DATA.L     _Serial_ClearTransmitBuffer
    00000954 <00000000>             .DATA.L     L520
    00000958 <00000000>             .DATA.L     L430
    0000095C <00000000>             .DATA.L     _status
    00000960 <00000000>             .DATA.L     _memcmp
    00000964 <00000000>             .DATA.L     _Serial_BufferedTransmitNBytes
    00000968 <00000000>             .DATA.L     _malloc
    0000096C <00000000>             .DATA.L     L523
    00000970 <00000000>             .DATA.L     _Bdisp_PutDisp_DD
    00000974 <00000000>             .DATA.L     _GetKey
          WiFi.c   541    
          WiFi.c   542    void drawBrowseResults(unsigned char* results) {
    00000978              _drawBrowseResults:              ; function: drawBrowseResults
                                                           ; frame size=88
    00000978 2FE6                   MOV.L       R14,@-R15
          WiFi.c   543            int counter = 0, lines = 0, lineBegin = 0, selection = 0, scroll = 0, i;
    0000097A EE00                   MOV         #0,R14
          WiFi.c   544            unsigned char text[22];
          WiFi.c   545            unsigned int key;
          WiFi.c   546            
          WiFi.c   547            unsigned int dl=0;
          WiFi.c   548    
          WiFi.c   549            Bdisp_AllClr_DDVRAM();
    0000097C D345                   MOV.L       L1008+4,R3 ; _Bdisp_AllClr_DDVRAM
    0000097E 2FD6                   MOV.L       R13,@-R15
    00000980 2FC6                   MOV.L       R12,@-R15
    00000982 6DE3                   MOV         R14,R13
    00000984 2FB6                   MOV.L       R11,@-R15
    00000986 2FA6                   MOV.L       R10,@-R15
    00000988 2F96                   MOV.L       R9,@-R15
    0000098A 2F86                   MOV.L       R8,@-R15
    0000098C 4F22                   STS.L       PR,@-R15
    0000098E 7FC8                   ADD         #-56,R15
    00000990 1F41                   MOV.L       R4,@(4,R15)
    00000992 430B                   JSR         @R3
    00000994 6CE3                   MOV         R14,R12
          WiFi.c   550            locate(21, 1);
    00000996 E501                   MOV         #1,R5




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 05-Aug-2018 14:17:19  PAGE   32


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000998 D23F                   MOV.L       L1008+8,R2 ; _locate
    0000099A 420B                   JSR         @R2
    0000099C E415                   MOV         #21,R4
          WiFi.c   551            Print(loupe);
    0000099E D43F                   MOV.L       L1008+12,R4; _loupe
    000009A0 D33F                   MOV.L       L1008+16,R3; _Print
    000009A2 430B                   JSR         @R3
    000009A4 0009                   NOP
          WiFi.c   552            locate(1, 1);
    000009A6 E501                   MOV         #1,R5
    000009A8 D23B                   MOV.L       L1008+8,R2 ; _locate
    000009AA 420B                   JSR         @R2
    000009AC 6453                   MOV         R5,R4
          WiFi.c   553            Bdisp_DrawLineVRAM(0, 7, 127, 7);
    000009AE E707                   MOV         #7,R7
    000009B0 D33C                   MOV.L       L1008+20,R3; _Bdisp_DrawLineVRAM
    000009B2 E67F                   MOV         #127,R6
    000009B4 6573                   MOV         R7,R5
    000009B6 430B                   JSR         @R3
    000009B8 64C3                   MOV         R12,R4
    000009BA 6AF3                   MOV         R15,R10
    000009BC 7A20                   ADD         #32,R10
    000009BE 62A3                   MOV         R10,R2
    000009C0 1F22                   MOV.L       R2,@(8,R15)
          WiFi.c   554            Bdisp_PutDisp_DD;
          WiFi.c   555            
          WiFi.c   556            do {
    000009C2              L874:                             
          WiFi.c   557                    DISPBOX listArea;
          WiFi.c   558                    listArea.left = 0;
          WiFi.c   559                    listArea.top = 8;
    000009C2 E308                   MOV         #8,R3
    000009C4 1FE4                   MOV.L       R14,@(16,R15)
          WiFi.c   560                    listArea.right = 127;
    000009C6 E27F                   MOV         #127,R2
    000009C8 1F35                   MOV.L       R3,@(20,R15)
          WiFi.c   561                    listArea.bottom = 63;
          WiFi.c   562    
          WiFi.c   563                    Bdisp_AreaClr_VRAM(&listArea);
    000009CA 64F3                   MOV         R15,R4
    000009CC 1F26                   MOV.L       R2,@(24,R15)
    000009CE E33F                   MOV         #63,R3
    000009D0 1F37                   MOV.L       R3,@(28,R15)
    000009D2 D335                   MOV.L       L1008+24,R3; _Bdisp_AreaClr_VRAM
    000009D4 430B                   JSR         @R3
    000009D6 7410                   ADD         #16,R4
          WiFi.c   564    
          WiFi.c   565                    for (counter = 0, lines = 0, lineBegin = 0; results[counter] != 0; counter = counter + 1) 
                         +{
    000009D8 6BE3                   MOV         R14,R11
    000009DA 69E3                   MOV         R14,R9
    000009DC 68E3                   MOV         R14,R8
    000009DE 62C3                   MOV         R12,R2
    000009E0 7207                   ADD         #7,R2
    000009E2 A035                   BRA         L875
    000009E4 1F23                   MOV.L       R2,@(12,R15)
    000009E6              L876:                             




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 05-Aug-2018 14:17:19  PAGE   33


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          WiFi.c   566                            if (results[counter] == '\n') {
    000009E6 50F1                   MOV.L       @(4,R15),R0
    000009E8 03BC                   MOV.B       @(R0,R11),R3
    000009EA 603C                   EXTU.B      R3,R0
    000009EC 880A                   CMP/EQ      #10,R0
    000009EE 8B2E                   BF          L877
          WiFi.c   567                                    lines = lines + 1;
    000009F0 7901                   ADD         #1,R9
          WiFi.c   568    
          WiFi.c   569                                    if (lines > scroll && lines <= scroll + 7) {
    000009F2 39C7                   CMP/GT      R12,R9
    000009F4 8B29                   BF          L878
    000009F6 53F3                   MOV.L       @(12,R15),R3
    000009F8 3937                   CMP/GT      R3,R9
    000009FA 8926                   BT          L878
          WiFi.c   570                                            memset(text, 0, sizeof text);
    000009FC D32B                   MOV.L       L1008+28,R3; _memset
    000009FE E616                   MOV         #22,R6
    00000A00 E500                   MOV         #0,R5
    00000A02 430B                   JSR         @R3
    00000A04 64A3                   MOV         R10,R4
          WiFi.c   571                                            memcpy(text, &results[lineBegin], counter - lineBegin);
    00000A06 66B3                   MOV         R11,R6
    00000A08 55F1                   MOV.L       @(4,R15),R5
    00000A0A 3688                   SUB         R8,R6
    00000A0C D328                   MOV.L       L1008+32,R3; _memcpy
    00000A0E 358C                   ADD         R8,R5
    00000A10 430B                   JSR         @R3
    00000A12 64A3                   MOV         R10,R4
    00000A14 54F2                   MOV.L       @(8,R15),R4
    00000A16 67B3                   MOV         R11,R7
          WiFi.c   572    
          WiFi.c   573                                            for (i = 0; i < counter - lineBegin; i = i + 1) {
    00000A18 65E3                   MOV         R14,R5
    00000A1A 3788                   SUB         R8,R7
    00000A1C 4715                   CMP/PL      R7
    00000A1E 8F0B                   BF/S        L879
    00000A20 6643                   MOV         R4,R6
    00000A22              L880:                             
          WiFi.c   574                                                    if (text[i] == '\t') {
    00000A22 6060                   MOV.B       @R6,R0
    00000A24 600C                   EXTU.B      R0,R0
    00000A26 8809                   CMP/EQ      #9,R0
    00000A28 8F02                   BF/S        L881
    00000A2A 7501                   ADD         #1,R5
          WiFi.c   575                                                            text[i] = ' ';
    00000A2C E220                   MOV         #32,R2
    00000A2E 2420                   MOV.B       R2,@R4
    00000A30              L881:                             
    00000A30 7401                   ADD         #1,R4
    00000A32 3573                   CMP/GE      R7,R5
    00000A34 8FF5                   BF/S        L880
    00000A36 7601                   ADD         #1,R6
    00000A38              L879:                             
          WiFi.c   576                                                    }
          WiFi.c   577                                            }
          WiFi.c   578    




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 05-Aug-2018 14:17:19  PAGE   34


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          WiFi.c   579                                            locate(1, 1 + lines - scroll);
    00000A38 D317                   MOV.L       L1008+8,R3 ; _locate
    00000A3A 6593                   MOV         R9,R5
    00000A3C 35C8                   SUB         R12,R5
    00000A3E 7501                   ADD         #1,R5
    00000A40 430B                   JSR         @R3
    00000A42 E401                   MOV         #1,R4
          WiFi.c   580                                            Print(text);
    00000A44 D216                   MOV.L       L1008+16,R2; _Print
    00000A46 420B                   JSR         @R2
    00000A48 64A3                   MOV         R10,R4
    00000A4A              L878:                             
          WiFi.c   581                                    }
          WiFi.c   582    
          WiFi.c   583                                    lineBegin = counter + 1;
    00000A4A 68B3                   MOV         R11,R8
    00000A4C 7801                   ADD         #1,R8
    00000A4E              L877:                             
    00000A4E 7B01                   ADD         #1,R11
    00000A50              L875:                             
    00000A50 50F1                   MOV.L       @(4,R15),R0
    00000A52 03BC                   MOV.B       @(R0,R11),R3
    00000A54 633C                   EXTU.B      R3,R3
    00000A56 2338                   TST         R3,R3
    00000A58 8BC5                   BF          L876
          WiFi.c   584                            }
          WiFi.c   585                    }
          WiFi.c   586    
          WiFi.c   587                    Bdisp_AreaReverseVRAM(0, 8 * (selection - scroll + 1), 127, 8 * (selection - scroll + 1) +
                         + 7);
    00000A5A 6BD3                   MOV         R13,R11
    00000A5C D315                   MOV.L       L1008+36,R3; _Bdisp_AreaReverseVRAM
    00000A5E E67F                   MOV         #127,R6
    00000A60 3BC8                   SUB         R12,R11
    00000A62 7B01                   ADD         #1,R11
    00000A64 4B08                   SHLL2       R11
    00000A66 4B00                   SHLL        R11
    00000A68 67B3                   MOV         R11,R7
    00000A6A 7707                   ADD         #7,R7
    00000A6C 65B3                   MOV         R11,R5
    00000A6E 430B                   JSR         @R3
    00000A70 E400                   MOV         #0,R4
          WiFi.c   588    
          WiFi.c   589                    GetKey(&key);
    00000A72 D211                   MOV.L       L1008+40,R2; _GetKey
    00000A74 420B                   JSR         @R2
    00000A76 64F3                   MOV         R15,R4
          WiFi.c   590    
          WiFi.c   591                    if (key == 30018) {
    00000A78 930A                   MOV.W       L1008,R3   ; H'7542
    00000A7A 62F2                   MOV.L       @R15,R2
    00000A7C 3230                   CMP/EQ      R3,R2
    00000A7E 8B01                   BF          L882
          WiFi.c   592                            selection = selection - 1;
    00000A80 A028                   BRA         L883
    00000A82 7DFF                   ADD         #-1,R13
    00000A84              L882:                             




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 05-Aug-2018 14:17:19  PAGE   35


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          WiFi.c   593                    }
          WiFi.c   594                    else if (key == 30023) {
    00000A84 9105                   MOV.W       L1008+2,R1 ; H'7547
    00000A86 62F2                   MOV.L       @R15,R2
    00000A88 3210                   CMP/EQ      R1,R2
    00000A8A 8B17                   BF          L884
          WiFi.c   595                            selection = selection + 1;
    00000A8C A022                   BRA         L883
    00000A8E 7D01                   ADD         #1,R13
    00000A90              L1008:                            
    00000A90 7542                   .DATA.W     H'7542
    00000A92 7547                   .DATA.W     H'7547
    00000A94 <00000000>             .DATA.L     _Bdisp_AllClr_DDVRAM
    00000A98 <00000000>             .DATA.L     _locate
    00000A9C <00000000>             .DATA.L     _loupe
    00000AA0 <00000000>             .DATA.L     _Print
    00000AA4 <00000000>             .DATA.L     _Bdisp_DrawLineVRAM
    00000AA8 <00000000>             .DATA.L     _Bdisp_AreaClr_VRAM
    00000AAC <00000000>             .DATA.L     _memset
    00000AB0 <00000000>             .DATA.L     _memcpy
    00000AB4 <00000000>             .DATA.L     _Bdisp_AreaReverseVRAM
    00000AB8 <00000000>             .DATA.L     _GetKey
    00000ABC              L884:                             
          WiFi.c   596                    }
          WiFi.c   597                    else if (key == 30009) {
    00000ABC 9267                   MOV.W       L1009,R2   ; H'7539
    00000ABE 60F2                   MOV.L       @R15,R0
    00000AC0 3020                   CMP/EQ      R2,R0
    00000AC2 8B03                   BF          L886
          WiFi.c   598                            browseFiles();
    00000AC4 BEBC                   BSR         _browseFiles
    00000AC6 0009                   NOP
          WiFi.c   599                            return;
    00000AC8 A057                   BRA         L887
    00000ACA 0009                   NOP
    00000ACC              L886:                             
          WiFi.c   600                    }
          WiFi.c   601                    else if (key == 30002) {
    00000ACC 9360                   MOV.W       L1009+2,R3 ; H'7532
    00000ACE 60F2                   MOV.L       @R15,R0
    00000AD0 3030                   CMP/EQ      R3,R0
    00000AD2 8952                   BT          L887
    00000AD4              L883:                             
          WiFi.c   602                            return;
          WiFi.c   603                    }
          WiFi.c   604    
          WiFi.c   605                    if (selection < 0) {
    00000AD4 4D11                   CMP/PZ      R13
    00000AD6 8901                   BT          L890
          WiFi.c   606                            selection = 0;
    00000AD8 A00E                   BRA         L891
    00000ADA 6DE3                   MOV         R14,R13
    00000ADC              L890:                             
          WiFi.c   607                    }
          WiFi.c   608                    else if (selection >= lines) {
    00000ADC 3D93                   CMP/GE      R9,R13
    00000ADE 8B02                   BF          L892




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 05-Aug-2018 14:17:19  PAGE   36


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          WiFi.c   609                            selection = lines - 1;
    00000AE0 6D93                   MOV         R9,R13
    00000AE2 A009                   BRA         L891
    00000AE4 7DFF                   ADD         #-1,R13
    00000AE6              L892:                             
          WiFi.c   610                    }
          WiFi.c   611                    else {
          WiFi.c   612                            if (selection < scroll) {
    00000AE6 3DC3                   CMP/GE      R12,R13
    00000AE8 8901                   BT          L894
          WiFi.c   613                                    scroll = scroll - 1;
    00000AEA A005                   BRA         L891
    00000AEC 7CFF                   ADD         #-1,R12
    00000AEE              L894:                             
          WiFi.c   614                            }
          WiFi.c   615                            else if (selection >= 8 + scroll) {
    00000AEE 63C3                   MOV         R12,R3
    00000AF0 7308                   ADD         #8,R3
    00000AF2 3D33                   CMP/GE      R3,R13
    00000AF4 8B00                   BF          L891
          WiFi.c   616                                    scroll = scroll + 1;
    00000AF6 7C01                   ADD         #1,R12
    00000AF8              L891:                             
          WiFi.c   617                            }
          WiFi.c   618                    }
          WiFi.c   619            } while (key != 30004);
    00000AF8 934B                   MOV.W       L1009+4,R3 ; H'7534
    00000AFA 62F2                   MOV.L       @R15,R2
    00000AFC 3230                   CMP/EQ      R3,R2
    00000AFE 8901                   BT          L1010
    00000B00 AF5F                   BRA         L874
    00000B02 0009                   NOP
    00000B04              L1010:                            
          WiFi.c   620    
          WiFi.c   621            for (counter = 0, lines = 0, lineBegin = 0; buf[counter] != 0; counter = counter + 1) {
    00000B04 9846                   MOV.W       L1009+6,R8 ; H'01F4
    00000B06 6BE3                   MOV         R14,R11
    00000B08 DC23                   MOV.L       L1009+10,R12; _buf
    00000B0A 66E3                   MOV         R14,R6
    00000B0C A029                   BRA         L897
    00000B0E 69E3                   MOV         R14,R9
    00000B10              L898:                             
    00000B10 65B3                   MOV         R11,R5
    00000B12 35CC                   ADD         R12,R5
    00000B14 6050                   MOV.B       @R5,R0
    00000B16 64B3                   MOV         R11,R4
    00000B18 600C                   EXTU.B      R0,R0
    00000B1A 880A                   CMP/EQ      #10,R0
    00000B1C 8F02                   BF/S        L899
    00000B1E 7401                   ADD         #1,R4
          WiFi.c   622                    if (buf[counter] == '\n') {
          WiFi.c   623                            lines = lines + 1;
    00000B20 7601                   ADD         #1,R6
          WiFi.c   624                            lineBegin = counter + 1;
    00000B22 6943                   MOV         R4,R9
    00000B24              L899:                             
          WiFi.c   625                    }




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 05-Aug-2018 14:17:19  PAGE   37


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          WiFi.c   626    
          WiFi.c   627                    if (lines >= selection && buf[counter] == '\t') {
    00000B24 36D3                   CMP/GE      R13,R6
    00000B26 8B1B                   BF          L900
    00000B28 6050                   MOV.B       @R5,R0
    00000B2A 600C                   EXTU.B      R0,R0
    00000B2C 8809                   CMP/EQ      #9,R0
    00000B2E 8B17                   BF          L900
          WiFi.c   628                            memset(text, 0, sizeof text);
    00000B30 D21A                   MOV.L       L1009+14,R2; _memset
    00000B32 E616                   MOV         #22,R6
    00000B34 E500                   MOV         #0,R5
    00000B36 420B                   JSR         @R2
    00000B38 64A3                   MOV         R10,R4
          WiFi.c   629                            memcpy(text, &buf[lineBegin], counter - lineBegin);
    00000B3A 66B3                   MOV         R11,R6
    00000B3C D318                   MOV.L       L1009+18,R3; _memcpy
    00000B3E 6593                   MOV         R9,R5
    00000B40 3698                   SUB         R9,R6
    00000B42 35CC                   ADD         R12,R5
    00000B44 430B                   JSR         @R3
    00000B46 64A3                   MOV         R10,R4
          WiFi.c   630    
          WiFi.c   631                            memset(buf, 0, sizeof buf);
    00000B48 D214                   MOV.L       L1009+14,R2; _memset
    00000B4A 6683                   MOV         R8,R6
    00000B4C E500                   MOV         #0,R5
    00000B4E 420B                   JSR         @R2
    00000B50 64C3                   MOV         R12,R4
          WiFi.c   632                            memcpy(buf, text, sizeof text);
    00000B52 E616                   MOV         #22,R6
    00000B54 D312                   MOV.L       L1009+18,R3; _memcpy
    00000B56 65A3                   MOV         R10,R5
    00000B58 430B                   JSR         @R3
    00000B5A 64C3                   MOV         R12,R4
          WiFi.c   633    
          WiFi.c   634                            break;
    00000B5C A006                   BRA         L901
    00000B5E 0009                   NOP
    00000B60              L900:                             
    00000B60 6B43                   MOV         R4,R11
    00000B62              L897:                             
    00000B62 60B3                   MOV         R11,R0
    00000B64 03CC                   MOV.B       @(R0,R12),R3
    00000B66 633C                   EXTU.B      R3,R3
    00000B68 2338                   TST         R3,R3
    00000B6A 8BD1                   BF          L898
    00000B6C              L901:                             
          WiFi.c   635                    }
          WiFi.c   636            }
          WiFi.c   637            
          WiFi.c   638            dl=showAppInfo();
    00000B6C B01A                   BSR         _showAppInfo
    00000B6E 0009                   NOP
    00000B70 6403                   MOV         R0,R4
          WiFi.c   639            if(dl==0){
    00000B72 2448                   TST         R4,R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 05-Aug-2018 14:17:19  PAGE   38


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000B74 8B01                   BF          L887
          WiFi.c   640                    drawBrowseResults(results);
    00000B76 BEFF                   BSR         _drawBrowseResults
    00000B78 54F1                   MOV.L       @(4,R15),R4
          WiFi.c   641            }
          WiFi.c   642            return;
          WiFi.c   643            //downloadFile();
          WiFi.c   644    }
    00000B7A              L887:                             
    00000B7A 7F38                   ADD         #56,R15
    00000B7C 4F26                   LDS.L       @R15+,PR
    00000B7E 68F6                   MOV.L       @R15+,R8
    00000B80 69F6                   MOV.L       @R15+,R9
    00000B82 6AF6                   MOV.L       @R15+,R10
    00000B84 6BF6                   MOV.L       @R15+,R11
    00000B86 6CF6                   MOV.L       @R15+,R12
    00000B88 6DF6                   MOV.L       @R15+,R13
    00000B8A 000B                   RTS
    00000B8C 6EF6                   MOV.L       @R15+,R14
    00000B8E              L1009:                            
    00000B8E 7539                   .DATA.W     H'7539
    00000B90 7532                   .DATA.W     H'7532
    00000B92 7534                   .DATA.W     H'7534
    00000B94 01F4                   .DATA.W     H'01F4
    00000B96 0000                   .DATA.W     0
    00000B98 <00000000>             .DATA.L     _buf
    00000B9C <00000000>             .DATA.L     _memset
    00000BA0 <00000000>             .DATA.L     _memcpy
          WiFi.c   645    
          WiFi.c   646    int showAppInfo(){
    00000BA4              _showAppInfo:                    ; function: showAppInfo
                                                           ; frame size=16
    00000BA4 4F22                   STS.L       PR,@-R15
          WiFi.c   647            unsigned int key=0;
    00000BA6 E300                   MOV         #0,R3
          WiFi.c   648            
          WiFi.c   649            unsigned char* picture;
          WiFi.c   650            unsigned short transmitted;
          WiFi.c   651            unsigned char* infoText;
          WiFi.c   652            unsigned char* appName;
          WiFi.c   653            unsigned char* author;
          WiFi.c   654            unsigned char* downloadCount;
          WiFi.c   655            
          WiFi.c   656            sendCommand("GETAPPINFO");
    00000BA8 D437                   MOV.L       L1011+10,R4; L563
    00000BAA 7FF4                   ADD         #-12,R15
    00000BAC 2F32                   MOV.L       R3,@R15
    00000BAE B100                   BSR         _sendCommand
    00000BB0 0009                   NOP
          WiFi.c   657            receiveStatus();
    00000BB2 B14B                   BSR         _receiveStatus
    00000BB4 0009                   NOP
          WiFi.c   658            
          WiFi.c   659            receiveStatusTimeout(20);
    00000BB6 B14A                   BSR         _receiveStatusTimeout
    00000BB8 E414                   MOV         #20,R4
          WiFi.c   660            if(memcmp(status,"OK",2)!=0){




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 05-Aug-2018 14:17:19  PAGE   39


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000BBA D534                   MOV.L       L1011+14,R5; L430
    00000BBC D434                   MOV.L       L1011+18,R4; _status
    00000BBE D235                   MOV.L       L1011+22,R2; _memcmp
    00000BC0 420B                   JSR         @R2
    00000BC2 E602                   MOV         #2,R6
    00000BC4 2008                   TST         R0,R0
    00000BC6 8B12                   BF          L738
          WiFi.c   661                    return 0;
          WiFi.c   662            }
          WiFi.c   663            
          WiFi.c   664            Bdisp_AllClr_DDVRAM();
    00000BC8 D333                   MOV.L       L1011+26,R3; _Bdisp_AllClr_DDVRAM
    00000BCA 430B                   JSR         @R3
    00000BCC 0009                   NOP
          WiFi.c   665            
          WiFi.c   666            picture=receiveData(5000,&transmitted);
    00000BCE 65F3                   MOV         R15,R5
    00000BD0 9455                   MOV.W       L1011,R4   ; H'1388
    00000BD2 B46E                   BSR         _receiveData
    00000BD4 7504                   ADD         #4,R5
    00000BD6 1F02                   MOV.L       R0,@(8,R15)
          WiFi.c   667            serialReadString(infoText);
    00000BD8 B20A                   BSR         _serialReadString
    00000BDA 64F3                   MOV         R15,R4
          WiFi.c   668            
          WiFi.c   669            drawImage(picture);
    00000BDC B538                   BSR         _drawImage
    00000BDE 54F2                   MOV.L       @(8,R15),R4
          WiFi.c   670            
          WiFi.c   671            
          WiFi.c   672            GetKey(&key);
    00000BE0 D22E                   MOV.L       L1011+30,R2; _GetKey
    00000BE2 420B                   JSR         @R2
    00000BE4 64F3                   MOV         R15,R4
          WiFi.c   673    
          WiFi.c   674            if (key == 30002) {
    00000BE6 934B                   MOV.W       L1011+2,R3 ; H'7532
    00000BE8 62F2                   MOV.L       @R15,R2
    00000BEA 3230                   CMP/EQ      R3,R2
    00000BEC 8B03                   BF          L905
    00000BEE              L738:
          WiFi.c   675                    return 0;
    00000BEE 7F0C                   ADD         #12,R15
    00000BF0 4F26                   LDS.L       @R15+,PR
    00000BF2 000B                   RTS
    00000BF4 E000                   MOV         #0,R0
    00000BF6              L905:                             
          WiFi.c   676            }
          WiFi.c   677            else if (key == 30004) {
    00000BF6 9244                   MOV.W       L1011+4,R2 ; H'7534
    00000BF8 61F2                   MOV.L       @R15,R1
    00000BFA 3120                   CMP/EQ      R2,R1
    00000BFC 8B02                   BF          L904
          WiFi.c   678                    downloadFile();
    00000BFE B005                   BSR         _downloadFile
    00000C00 0009                   NOP
          WiFi.c   679                    return 1;




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 05-Aug-2018 14:17:19  PAGE   40


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000C02 E001                   MOV         #1,R0
          WiFi.c   680            }
          WiFi.c   681    }
    00000C04              L904:                             
    00000C04 7F0C                   ADD         #12,R15
    00000C06 4F26                   LDS.L       @R15+,PR
    00000C08 000B                   RTS
    00000C0A 0009                   NOP
          WiFi.c   682    
          WiFi.c   683    void downloadFile() {
    00000C0C              _downloadFile:                   ; function: downloadFile
                                                           ; frame size=336
                                                           ; used runtime library name:
                                                           ; __muld, __divdr, __dtos, __utod
    00000C0C 2FE6                   MOV.L       R14,@-R15
    00000C0E 2FD6                   MOV.L       R13,@-R15
    00000C10 2FC6                   MOV.L       R12,@-R15
    00000C12 2FB6                   MOV.L       R11,@-R15
    00000C14 2FA6                   MOV.L       R10,@-R15
          WiFi.c   684        int fileHandle;
          WiFi.c   685        unsigned int counter = 0, contentLength = 0;
    00000C16 EA00                   MOV         #0,R10
          WiFi.c   686        unsigned char data[256];
          WiFi.c   687        short dataSize;
          WiFi.c   688    
          WiFi.c   689            sendCommand("DOWNLOAD");
    00000C18 D421                   MOV.L       L1011+34,R4; L573
    00000C1A 2F96                   MOV.L       R9,@-R15
    00000C1C 2F86                   MOV.L       R8,@-R15
    00000C1E 4F22                   STS.L       PR,@-R15
    00000C20 9030                   MOV.W       L1011+6,R0 ; H'FEF4
    00000C22 3F0C                   ADD         R0,R15
    00000C24 B0C5                   BSR         _sendCommand
    00000C26 6DA3                   MOV         R10,R13
          WiFi.c   690                   
          WiFi.c   691        receiveStatus();
    00000C28 B110                   BSR         _receiveStatus
    00000C2A 0009                   NOP
          WiFi.c   692                                                    
          WiFi.c   693        if (memcmp(status,"OK",2)!=0){
    00000C2C D517                   MOV.L       L1011+14,R5; L430
    00000C2E D418                   MOV.L       L1011+18,R4; _status
    00000C30 D318                   MOV.L       L1011+22,R3; _memcmp
    00000C32 430B                   JSR         @R3
    00000C34 E602                   MOV         #2,R6
    00000C36 2008                   TST         R0,R0
    00000C38 8901                   BT          L1012
    00000C3A A0AD                   BRA         L909
    00000C3C 0009                   NOP
    00000C3E              L1012:                            
          WiFi.c   694                    return;
          WiFi.c   695        }
          WiFi.c   696        serialSendString(buf);
    00000C3E DE19                   MOV.L       L1011+38,R14; _buf
    00000C40 B1CB                   BSR         _serialSendString
    00000C42 64E3                   MOV         R14,R4
          WiFi.c   697    




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 05-Aug-2018 14:17:19  PAGE   41


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          WiFi.c   698        Bdisp_AllClr_DDVRAM();
    00000C44 D214                   MOV.L       L1011+26,R2; _Bdisp_AllClr_DDVRAM
    00000C46 420B                   JSR         @R2
    00000C48 0009                   NOP
          WiFi.c   699    
          WiFi.c   700        memset(buf, 0, sizeof buf);
    00000C4A E500                   MOV         #0,R5
    00000C4C D316                   MOV.L       L1011+42,R3; _memset
    00000C4E 961A                   MOV.W       L1011+8,R6 ; H'01F4
    00000C50 430B                   JSR         @R3
    00000C52 64E3                   MOV         R14,R4
    00000C54 DB15                   MOV.L       L1011+46,R11; _Serial_GetReceivedBytesAvailable
    00000C56 DC16                   MOV.L       L1011+50,R12; _Serial_ReadOneByte
          WiFi.c   701    
          WiFi.c   702        while(1) {
    00000C58              L911:                             
          WiFi.c   703            if (Serial_GetReceivedBytesAvailable() > 0) {
    00000C58 4B0B                   JSR         @R11
    00000C5A 0009                   NOP
    00000C5C 4015                   CMP/PL      R0
    00000C5E 8BFB                   BF          L911
          WiFi.c   704                unsigned char c;
          WiFi.c   705                Serial_ReadOneByte(&c);
    00000C60 64F3                   MOV         R15,R4
    00000C62 4C0B                   JSR         @R12
    00000C64 7404                   ADD         #4,R4
          WiFi.c   706    
          WiFi.c   707                if (c == 0) {
    00000C66 84F4                   MOV.B       @(4,R15),R0
    00000C68 2008                   TST         R0,R0
    00000C6A 8923                   BT          L914
          WiFi.c   708                    break;
          WiFi.c   709                } else {
          WiFi.c   710                    buf[counter] = c;
    00000C6C 60E3                   MOV         R14,R0
    00000C6E 63E3                   MOV         R14,R3
    00000C70 33DC                   ADD         R13,R3
    00000C72 62F3                   MOV         R15,R2
    00000C74 7204                   ADD         #4,R2
    00000C76 6220                   MOV.B       @R2,R2
    00000C78 2320                   MOV.B       R2,@R3
    00000C7A AFED                   BRA         L911
          WiFi.c   711                    counter = counter + 1;
    00000C7C 7D01                   ADD         #1,R13
    00000C7E              L1011:                            
    00000C7E 1388                   .DATA.W     H'1388
    00000C80 7532                   .DATA.W     H'7532
    00000C82 7534                   .DATA.W     H'7534
    00000C84 FEF4                   .DATA.W     H'FEF4
    00000C86 01F4                   .DATA.W     H'01F4
    00000C88 <00000000>             .DATA.L     L563
    00000C8C <00000000>             .DATA.L     L430
    00000C90 <00000000>             .DATA.L     _status
    00000C94 <00000000>             .DATA.L     _memcmp
    00000C98 <00000000>             .DATA.L     _Bdisp_AllClr_DDVRAM
    00000C9C <00000000>             .DATA.L     _GetKey
    00000CA0 <00000000>             .DATA.L     L573




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 05-Aug-2018 14:17:19  PAGE   42


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000CA4 <00000000>             .DATA.L     _buf
    00000CA8 <00000000>             .DATA.L     _memset
    00000CAC <00000000>             .DATA.L     _Serial_GetReceivedBytesAvailable
    00000CB0 <00000000>             .DATA.L     _Serial_ReadOneByte
    00000CB4              L914:                             
          WiFi.c   712                }
          WiFi.c   713            }
          WiFi.c   714        }
          WiFi.c   715    
          WiFi.c   716        contentLength = atoi(buf);
    00000CB4 D348                   MOV.L       L1013+6,R3 ; _atoi
    00000CB6 430B                   JSR         @R3
    00000CB8 64E3                   MOV         R14,R4
    00000CBA 6C03                   MOV         R0,R12
          WiFi.c   717    
          WiFi.c   718        counter = 0;
          WiFi.c   719    
          WiFi.c   720        Bfile_CreateFile(filename, contentLength);
    00000CBC D447                   MOV.L       L1013+10,R4; _filename
    00000CBE 6DA3                   MOV         R10,R13
    00000CC0 D247                   MOV.L       L1013+14,R2; _Bfile_CreateFile
    00000CC2 420B                   JSR         @R2
    00000CC4 6503                   MOV         R0,R5
          WiFi.c   721        fileHandle = Bfile_OpenFile(filename, _OPENMODE_READWRITE);
    00000CC6 D445                   MOV.L       L1013+10,R4; _filename
    00000CC8 D346                   MOV.L       L1013+18,R3; _Bfile_OpenFile
    00000CCA 430B                   JSR         @R3
    00000CCC E503                   MOV         #3,R5
          WiFi.c   722    
          WiFi.c   723        while(counter < contentLength) {
    00000CCE E200                   MOV         #0,R2
    00000CD0 D945                   MOV.L       L1013+22,R9; _locate
    00000CD2 32C2                   CMP/HS      R12,R2
    00000CD4 8D5A                   BT/S        L916
    00000CD6 6803                   MOV         R0,R8
    00000CD8              L917:                             
          WiFi.c   724                    unsigned char* d;
          WiFi.c   725                    short received;
          WiFi.c   726                    int writeResult;
          WiFi.c   727                    
          WiFi.c   728                    unsigned int key=0;
    00000CD8 1FA2                   MOV.L       R10,@(8,R15)
          WiFi.c   729                    
          WiFi.c   730            d=receiveData(5000,&received);
    00000CDA 947A                   MOV.W       L1013,R4   ; H'1388
    00000CDC B3E9                   BSR         _receiveData
    00000CDE 65F3                   MOV         R15,R5
    00000CE0 6B03                   MOV         R0,R11
          WiFi.c   731                    if(d==0){
    00000CE2 2BB8                   TST         R11,R11
    00000CE4 8B08                   BF          L918
          WiFi.c   732                            Bfile_CloseFile(fileHandle);
    00000CE6 D341                   MOV.L       L1013+26,R3; _Bfile_CloseFile
    00000CE8 430B                   JSR         @R3
    00000CEA 6483                   MOV         R8,R4
          WiFi.c   733                            //File löschen
          WiFi.c   734                            




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 05-Aug-2018 14:17:19  PAGE   43


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          WiFi.c   735                            /*Bdisp_AllClr_DDVRAM();
          WiFi.c   736                            locate(1,8);
          WiFi.c   737                            memset(buf,0,100);
          WiFi.c   738                            memcpy(buf,counter,4);
          WiFi.c   739                            Print(buf);
          WiFi.c   740                            locate(1,6);
          WiFi.c   741                            memset(buf,0,100);
          WiFi.c   742                            memcpy(buf,checksumRec,4);
          WiFi.c   743                            Print(buf);*/
          WiFi.c   744                            GetKey(&key);
    00000CEC D240                   MOV.L       L1013+30,R2; _GetKey
    00000CEE 64F3                   MOV         R15,R4
    00000CF0 420B                   JSR         @R2
    00000CF2 7408                   ADD         #8,R4
          WiFi.c   745                            
          WiFi.c   746                            return;
    00000CF4 A050                   BRA         L909
    00000CF6 0009                   NOP
    00000CF8              L918:                             
          WiFi.c   747                    }
          WiFi.c   748                    counter = counter + received;
    00000CF8 63F1                   MOV.W       @R15,R3
    00000CFA 3D3C                   ADD         R3,R13
          WiFi.c   749    
          WiFi.c   750                    Bdisp_AllClr_DDVRAM();
    00000CFC D33D                   MOV.L       L1013+34,R3; _Bdisp_AllClr_DDVRAM
    00000CFE 430B                   JSR         @R3
    00000D00 0009                   NOP
          WiFi.c   751    
          WiFi.c   752                    locate(4, 2);
    00000D02 E502                   MOV         #2,R5
    00000D04 490B                   JSR         @R9
    00000D06 E404                   MOV         #4,R4
          WiFi.c   753                    Print((unsigned char*) "Downloading...");
    00000D08 D43B                   MOV.L       L1013+38,R4; L586
    00000D0A D23C                   MOV.L       L1013+42,R2; _Print
    00000D0C 420B                   JSR         @R2
    00000D0E 0009                   NOP
          WiFi.c   754    
          WiFi.c   755                    drawProgressBar(30, counter * 1.0 / contentLength);
    00000D10 D33B                   MOV.L       L1013+46,R3; __utod
    00000D12 60D3                   MOV         R13,R0
    00000D14 7FE8                   ADD         #-24,R15
    00000D16 430B                   JSR         @R3
    00000D18 2FF6                   MOV.L       R15,@-R15
    00000D1A E200                   MOV         #0,R2
    00000D1C D13A                   MOV.L       L1013+54,R1; __muld
    00000D1E 2F26                   MOV.L       R2,@-R15
    00000D20 D238                   MOV.L       L1013+50,R2; H'3FF00000
    00000D22 2F26                   MOV.L       R2,@-R15
    00000D24 63F3                   MOV         R15,R3
    00000D26 7310                   ADD         #16,R3
    00000D28 410B                   JSR         @R1
    00000D2A 2F36                   MOV.L       R3,@-R15
    00000D2C D234                   MOV.L       L1013+46,R2; __utod
    00000D2E 60C3                   MOV         R12,R0
    00000D30 7FF8                   ADD         #-8,R15




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 05-Aug-2018 14:17:19  PAGE   44


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000D32 420B                   JSR         @R2
    00000D34 2FF6                   MOV.L       R15,@-R15
    00000D36 63F3                   MOV         R15,R3
    00000D38 D134                   MOV.L       L1013+58,R1; __divdr
    00000D3A 7310                   ADD         #16,R3
    00000D3C 410B                   JSR         @R1
    00000D3E 2F36                   MOV.L       R3,@-R15
    00000D40 D233                   MOV.L       L1013+62,R2; __dtos
    00000D42 420B                   JSR         @R2
    00000D44 0009                   NOP
    00000D46 6503                   MOV         R0,R5
    00000D48 B29B                   BSR         _drawProgressBar
    00000D4A E41E                   MOV         #30,R4
          WiFi.c   756    
          WiFi.c   757                    sprintf(buf, "%d/%d", counter, contentLength);
    00000D4C 2FC6                   MOV.L       R12,@-R15
    00000D4E 2FD6                   MOV.L       R13,@-R15
    00000D50 D230                   MOV.L       L1013+66,R2; L587
    00000D52 2F26                   MOV.L       R2,@-R15
    00000D54 D330                   MOV.L       L1013+70,R3; _sprintf
    00000D56 430B                   JSR         @R3
    00000D58 64E3                   MOV         R14,R4
    00000D5A 7F0C                   ADD         #12,R15
          WiFi.c   758                    locate(22 - strlen(buf), 8);
    00000D5C D22F                   MOV.L       L1013+74,R2; _strlen
    00000D5E 420B                   JSR         @R2
    00000D60 64E3                   MOV         R14,R4
    00000D62 600B                   NEG         R0,R0
    00000D64 6403                   MOV         R0,R4
    00000D66 7416                   ADD         #22,R4
    00000D68 490B                   JSR         @R9
    00000D6A E508                   MOV         #8,R5
          WiFi.c   759                    Print(buf);
    00000D6C D323                   MOV.L       L1013+42,R3; _Print
    00000D6E 430B                   JSR         @R3
    00000D70 64E3                   MOV         R14,R4
          WiFi.c   760    
          WiFi.c   761                    writeResult = Bfile_WriteFile(fileHandle, d, received);
    00000D72 65B3                   MOV         R11,R5
    00000D74 D32A                   MOV.L       L1013+78,R3; _Bfile_WriteFile
    00000D76 66F1                   MOV.W       @R15,R6
    00000D78 430B                   JSR         @R3
    00000D7A 6483                   MOV         R8,R4
          WiFi.c   762                    free(d);
    00000D7C D229                   MOV.L       L1013+82,R2; _free
    00000D7E 420B                   JSR         @R2
    00000D80 64B3                   MOV         R11,R4
          WiFi.c   763                    
          WiFi.c   764                    Bdisp_PutDisp_DD();
    00000D82 D329                   MOV.L       L1013+86,R3; _Bdisp_PutDisp_DD
    00000D84 430B                   JSR         @R3
    00000D86 0009                   NOP
    00000D88 3DC2                   CMP/HS      R12,R13
    00000D8A 8BA5                   BF          L917
    00000D8C              L916:                             
          WiFi.c   765                    
          WiFi.c   766        }




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 05-Aug-2018 14:17:19  PAGE   45


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          WiFi.c   767    
          WiFi.c   768        Bfile_CloseFile(fileHandle);
    00000D8C D317                   MOV.L       L1013+26,R3; _Bfile_CloseFile
    00000D8E 430B                   JSR         @R3
    00000D90 6483                   MOV         R8,R4
          WiFi.c   769    
          WiFi.c   770        App_RegisterAddins();
    00000D92 D226                   MOV.L       L1013+90,R2; _App_RegisterAddins
    00000D94 420B                   JSR         @R2
    00000D96 0009                   NOP
          WiFi.c   771    }
    00000D98              L909:                             
    00000D98 911C                   MOV.W       L1013+2,R1 ; H'010C
    00000D9A 3F1C                   ADD         R1,R15
    00000D9C 4F26                   LDS.L       @R15+,PR
    00000D9E 68F6                   MOV.L       @R15+,R8
    00000DA0 69F6                   MOV.L       @R15+,R9
    00000DA2 6AF6                   MOV.L       @R15+,R10
    00000DA4 6BF6                   MOV.L       @R15+,R11
    00000DA6 6CF6                   MOV.L       @R15+,R12
    00000DA8 6DF6                   MOV.L       @R15+,R13
    00000DAA 000B                   RTS
    00000DAC 6EF6                   MOV.L       @R15+,R14
          WiFi.c   772    
          WiFi.c   773    void getAppByID(){
    00000DAE              _getAppByID:                     ; function: getAppByID
                                                           ; frame size=0
          WiFi.c   774    
          WiFi.c   775    }
    00000DAE 000B                   RTS
    00000DB0 0009                   NOP
          WiFi.c   776    
          WiFi.c   777    void sendCommand(unsigned char* command) {  //überarbeitet
    00000DB2              _sendCommand:                    ; function: sendCommand
                                                           ; frame size=8
    00000DB2 4F22                   STS.L       PR,@-R15
    00000DB4 2F46                   MOV.L       R4,@-R15
          WiFi.c   778        Serial_BufferedTransmitOneByte((unsigned char) 219);
    00000DB6 940E                   MOV.W       L1013+4,R4 ; H'00DB
    00000DB8 D31D                   MOV.L       L1013+94,R3; _Serial_BufferedTransmitOneByte
    00000DBA 430B                   JSR         @R3
    00000DBC 0009                   NOP
          WiFi.c   779        Serial_BufferedTransmitNBytes(command, strlen(command)+1);
    00000DBE D317                   MOV.L       L1013+74,R3; _strlen
    00000DC0 430B                   JSR         @R3
    00000DC2 64F2                   MOV.L       @R15,R4
    00000DC4 64F2                   MOV.L       @R15,R4
    00000DC6 6503                   MOV         R0,R5
    00000DC8 D31A                   MOV.L       L1013+98,R3; _Serial_BufferedTransmitNBytes
    00000DCA 7F04                   ADD         #4,R15
    00000DCC 7501                   ADD         #1,R5
    00000DCE 432B                   JMP         @R3
    00000DD0 4F26                   LDS.L       @R15+,PR
    00000DD2              L1013:                            
    00000DD2 1388                   .DATA.W     H'1388
    00000DD4 010C                   .DATA.W     H'010C
    00000DD6 00DB                   .DATA.W     H'00DB




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 05-Aug-2018 14:17:19  PAGE   46


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000DD8 <00000000>             .DATA.L     _atoi
    00000DDC <00000000>             .DATA.L     _filename
    00000DE0 <00000000>             .DATA.L     _Bfile_CreateFile
    00000DE4 <00000000>             .DATA.L     _Bfile_OpenFile
    00000DE8 <00000000>             .DATA.L     _locate
    00000DEC <00000000>             .DATA.L     _Bfile_CloseFile
    00000DF0 <00000000>             .DATA.L     _GetKey
    00000DF4 <00000000>             .DATA.L     _Bdisp_AllClr_DDVRAM
    00000DF8 <00000000>             .DATA.L     L586
    00000DFC <00000000>             .DATA.L     _Print
    00000E00 <00000000>             .DATA.L     __utod
    00000E04 3FF00000               .DATA.L     H'3FF00000
    00000E08 <00000000>             .DATA.L     __muld
    00000E0C <00000000>             .DATA.L     __divdr
    00000E10 <00000000>             .DATA.L     __dtos
    00000E14 <00000000>             .DATA.L     L587
    00000E18 <00000000>             .DATA.L     _sprintf
    00000E1C <00000000>             .DATA.L     _strlen
    00000E20 <00000000>             .DATA.L     _Bfile_WriteFile
    00000E24 <00000000>             .DATA.L     _free
    00000E28 <00000000>             .DATA.L     _Bdisp_PutDisp_DD
    00000E2C <00000000>             .DATA.L     _App_RegisterAddins
    00000E30 <00000000>             .DATA.L     _Serial_BufferedTransmitOneByte
    00000E34 <00000000>             .DATA.L     _Serial_BufferedTransmitNBytes
          WiFi.c   780    }
          WiFi.c   781    
          WiFi.c   782    void sendAcknowledgement(unsigned char* state){ 
    00000E38              _sendAcknowledgement:            ; function: sendAcknowledgement
                                                           ; frame size=8
    00000E38 4F22                   STS.L       PR,@-R15
    00000E3A 2F46                   MOV.L       R4,@-R15
          WiFi.c   783            Serial_BufferedTransmitOneByte((unsigned char)220);
    00000E3C 9488                   MOV.W       L1014,R4   ; H'00DC
    00000E3E D347                   MOV.L       L1014+12,R3; _Serial_BufferedTransmitOneByte
    00000E40 430B                   JSR         @R3
    00000E42 0009                   NOP
          WiFi.c   784            serialSendString(state);
    00000E44 64F2                   MOV.L       @R15,R4
    00000E46 7F04                   ADD         #4,R15
    00000E48 A0C7                   BRA         _serialSendString
    00000E4A 4F26                   LDS.L       @R15+,PR
          WiFi.c   785    }
          WiFi.c   786    
          WiFi.c   787    void receiveStatus(){
    00000E4C              _receiveStatus:                  ; function: receiveStatus
                                                           ; frame size=0
          WiFi.c   788        receiveStatusTimeout(500);
    00000E4C 9481                   MOV.W       L1014+2,R4 ; H'01F4
          WiFi.c   789    }
          WiFi.c   790    
          WiFi.c   791    void receiveStatusTimeout(int timeout){
    00000E4E              _receiveStatusTimeout:           ; function: receiveStatusTimeout
                                                           ; frame size=36
    00000E4E 2FE6                   MOV.L       R14,@-R15
    00000E50 2FD6                   MOV.L       R13,@-R15
    00000E52 2FC6                   MOV.L       R12,@-R15
    00000E54 2FB6                   MOV.L       R11,@-R15




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 05-Aug-2018 14:17:19  PAGE   47


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000E56 2FA6                   MOV.L       R10,@-R15
    00000E58 2F96                   MOV.L       R9,@-R15
    00000E5A 4F22                   STS.L       PR,@-R15
          WiFi.c   792        int startTicks=RTC_GetTicks();  
    00000E5C D340                   MOV.L       L1014+16,R3; _RTC_GetTicks
    00000E5E 7FF8                   ADD         #-8,R15
    00000E60 430B                   JSR         @R3
    00000E62 1F41                   MOV.L       R4,@(4,R15)
          WiFi.c   793        unsigned char c;
          WiFi.c   794            
          WiFi.c   795        memset(status, 0, sizeof status);
    00000E64 D43F                   MOV.L       L1014+20,R4; _status
    00000E66 6D03                   MOV         R0,R13
    00000E68 D23F                   MOV.L       L1014+24,R2; _memset
    00000E6A E604                   MOV         #4,R6
    00000E6C 420B                   JSR         @R2
    00000E6E E500                   MOV         #0,R5
    00000E70 D93E                   MOV.L       L1014+28,R9; _RTC_Elapsed_ms
    00000E72 DA3F                   MOV.L       L1014+32,R10; _Serial_ReadOneByte
    00000E74 DB3F                   MOV.L       L1014+36,R11; _Serial_GetReceivedBytesAvailable
    00000E76 9E6B                   MOV.W       L1014,R14  ; H'00DC
    00000E78 DC3A                   MOV.L       L1014+20,R12; _status
          WiFi.c   796            
          WiFi.c   797        while(!RTC_Elapsed_ms(startTicks,timeout)){
    00000E7A A00E                   BRA         L919
    00000E7C 0009                   NOP
    00000E7E              L920:                             
          WiFi.c   798            if(Serial_GetReceivedBytesAvailable()>0){
    00000E7E 4B0B                   JSR         @R11
    00000E80 0009                   NOP
    00000E82 4015                   CMP/PL      R0
    00000E84 8B09                   BF          L919
          WiFi.c   799                Serial_ReadOneByte(&c);
    00000E86 4A0B                   JSR         @R10
    00000E88 64F3                   MOV         R15,R4
          WiFi.c   800                if(c==220){ 
    00000E8A 63F0                   MOV.B       @R15,R3
    00000E8C 633C                   EXTU.B      R3,R3
    00000E8E 33E0                   CMP/EQ      R14,R3
    00000E90 8B03                   BF          L919
          WiFi.c   801                    serialReadString(&status);
    00000E92 B0AD                   BSR         _serialReadString
    00000E94 64C3                   MOV         R12,R4
          WiFi.c   802                    return;
    00000E96 A005                   BRA         L923
    00000E98 0009                   NOP
    00000E9A              L919:                             
    00000E9A 55F1                   MOV.L       @(4,R15),R5
    00000E9C 490B                   JSR         @R9
    00000E9E 64D3                   MOV         R13,R4
    00000EA0 2008                   TST         R0,R0
    00000EA2 89EC                   BT          L920
    00000EA4              L923:                             
          WiFi.c   803                }
          WiFi.c   804            }
          WiFi.c   805        }
          WiFi.c   806    }




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 05-Aug-2018 14:17:19  PAGE   48


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000EA4 7F08                   ADD         #8,R15
    00000EA6 4F26                   LDS.L       @R15+,PR
    00000EA8 69F6                   MOV.L       @R15+,R9
    00000EAA 6AF6                   MOV.L       @R15+,R10
    00000EAC 6BF6                   MOV.L       @R15+,R11
    00000EAE 6CF6                   MOV.L       @R15+,R12
    00000EB0 6DF6                   MOV.L       @R15+,R13
    00000EB2 000B                   RTS
    00000EB4 6EF6                   MOV.L       @R15+,R14
          WiFi.c   807    
          WiFi.c   808    void readString(int x, int y, bool search) {
    00000EB6              _readString:                     ; function: readString
                                                           ; frame size=68
    00000EB6 2FE6                   MOV.L       R14,@-R15
    00000EB8 2FD6                   MOV.L       R13,@-R15
    00000EBA 2FC6                   MOV.L       R12,@-R15
    00000EBC 2FB6                   MOV.L       R11,@-R15
          WiFi.c   809        unsigned int key;
          WiFi.c   810        int numChars = 0;
    00000EBE EC00                   MOV         #0,R12
          WiFi.c   811        DISPBOX clearBox;
          WiFi.c   812        memset(buf, 0, sizeof buf);
    00000EC0 DD2D                   MOV.L       L1014+40,R13; _buf
    00000EC2 6B43                   MOV         R4,R11
    00000EC4 D328                   MOV.L       L1014+24,R3; _memset
    00000EC6 6EC3                   MOV         R12,R14
    00000EC8 2FA6                   MOV.L       R10,@-R15
    00000ECA 6A53                   MOV         R5,R10
    00000ECC 2F96                   MOV.L       R9,@-R15
    00000ECE 65C3                   MOV         R12,R5
    00000ED0 2F86                   MOV.L       R8,@-R15
    00000ED2 4F22                   STS.L       PR,@-R15
    00000ED4 7FDC                   ADD         #-36,R15
    00000ED6 1F61                   MOV.L       R6,@(4,R15)
    00000ED8 963B                   MOV.W       L1014+2,R6 ; H'01F4
    00000EDA 430B                   JSR         @R3
    00000EDC 64D3                   MOV         R13,R4
          WiFi.c   813    
          WiFi.c   814        Keyboard_ClrBuffer();
    00000EDE D227                   MOV.L       L1014+44,R2; _Keyboard_ClrBuffer
    00000EE0 420B                   JSR         @R2
    00000EE2 0009                   NOP
    00000EE4 9836                   MOV.W       L1014+4,R8 ; H'7536
    00000EE6 61A3                   MOV         R10,R1
    00000EE8 63B3                   MOV         R11,R3
    00000EEA 73FF                   ADD         #-1,R3
    00000EEC 6233                   MOV         R3,R2
    00000EEE 4300                   SHLL        R3
    00000EF0 4208                   SHLL2       R2
    00000EF2 332C                   ADD         R2,R3
    00000EF4 1F33                   MOV.L       R3,@(12,R15)
    00000EF6 62A3                   MOV         R10,R2
    00000EF8 72FF                   ADD         #-1,R2
    00000EFA 4208                   SHLL2       R2
    00000EFC 4200                   SHLL        R2
    00000EFE 6983                   MOV         R8,R9
    00000F00 1F24                   MOV.L       R2,@(16,R15)




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 05-Aug-2018 14:17:19  PAGE   49


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000F02 4108                   SHLL2       R1
    00000F04 7913                   ADD         #19,R9
    00000F06 4100                   SHLL        R1
    00000F08 1F12                   MOV.L       R1,@(8,R15)
          WiFi.c   815    
          WiFi.c   816        while(1) {
    00000F0A              L925:                             
          WiFi.c   817            GetKey(&key);
    00000F0A D21D                   MOV.L       L1014+48,R2; _GetKey
    00000F0C 420B                   JSR         @R2
    00000F0E 64F3                   MOV         R15,R4
          WiFi.c   818    
          WiFi.c   819            clearBox.left = (x - 1) * 6;
    00000F10 53F3                   MOV.L       @(12,R15),R3
    00000F12 1F35                   MOV.L       R3,@(20,R15)
          WiFi.c   820            clearBox.top = (y - 1) * 8;
    00000F14 52F4                   MOV.L       @(16,R15),R2
          WiFi.c   821            clearBox.right = (x + numChars - 1) * 6;
    00000F16 63B3                   MOV         R11,R3
    00000F18 1F26                   MOV.L       R2,@(24,R15)
    00000F1A 33EC                   ADD         R14,R3
    00000F1C 73FF                   ADD         #-1,R3
    00000F1E 6233                   MOV         R3,R2
    00000F20 4300                   SHLL        R3
    00000F22 4208                   SHLL2       R2
    00000F24 332C                   ADD         R2,R3
    00000F26 1F37                   MOV.L       R3,@(28,R15)
          WiFi.c   822            clearBox.bottom = y * 8;
    00000F28 52F2                   MOV.L       @(8,R15),R2
    00000F2A 1F28                   MOV.L       R2,@(32,R15)
          WiFi.c   823    
          WiFi.c   824            if (key == 30004 || key == 30002) { // EXE Key
    00000F2C 9313                   MOV.W       L1014+6,R3 ; H'7534
    00000F2E 61F2                   MOV.L       @R15,R1
    00000F30 3130                   CMP/EQ      R3,R1
    00000F32 8948                   BT          L928
    00000F34 9210                   MOV.W       L1014+8,R2 ; H'7532
    00000F36 61F2                   MOV.L       @R15,R1
    00000F38 3120                   CMP/EQ      R2,R1
    00000F3A 8944                   BT          L928
          WiFi.c   825                break;
          WiFi.c   826            } else if (key == 30025) {
    00000F3C 63F2                   MOV.L       @R15,R3
    00000F3E 3390                   CMP/EQ      R9,R3
    00000F40 8B20                   BF          L930
          WiFi.c   827                numChars = numChars - 1;
    00000F42 7EFF                   ADD         #-1,R14
          WiFi.c   828                if (numChars < 0) {
    00000F44 4E11                   CMP/PZ      R14
    00000F46 8900                   BT          L931
          WiFi.c   829                    numChars = 0;
    00000F48 6EC3                   MOV         R12,R14
    00000F4A              L931:                             
          WiFi.c   830                }
          WiFi.c   831    
          WiFi.c   832                buf[numChars] = 0;
    00000F4A 60E3                   MOV         R14,R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 05-Aug-2018 14:17:19  PAGE   50


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000F4C A025                   BRA         L929
    00000F4E 0DC4                   MOV.B       R12,@(R0,R13)
    00000F50              L1014:                            
    00000F50 00DC                   .DATA.W     H'00DC
    00000F52 01F4                   .DATA.W     H'01F4
    00000F54 7536                   .DATA.W     H'7536
    00000F56 7534                   .DATA.W     H'7534
    00000F58 7532                   .DATA.W     H'7532
    00000F5A 0000                   .DATA.W     0
    00000F5C <00000000>             .DATA.L     _Serial_BufferedTransmitOneByte
    00000F60 <00000000>             .DATA.L     _RTC_GetTicks
    00000F64 <00000000>             .DATA.L     _status
    00000F68 <00000000>             .DATA.L     _memset
    00000F6C <00000000>             .DATA.L     _RTC_Elapsed_ms
    00000F70 <00000000>             .DATA.L     _Serial_ReadOneByte
    00000F74 <00000000>             .DATA.L     _Serial_GetReceivedBytesAvailable
    00000F78 <00000000>             .DATA.L     _buf
    00000F7C <00000000>             .DATA.L     _Keyboard_ClrBuffer
    00000F80 <00000000>             .DATA.L     _GetKey
    00000F84              L930:                             
          WiFi.c   833            } else if (key == 30006 || key == 30007) { // shift alpha
    00000F84 62F2                   MOV.L       @R15,R2
    00000F86 3280                   CMP/EQ      R8,R2
    00000F88 8907                   BT          L929
    00000F8A 916B                   MOV.W       L1015,R1   ; H'7537
    00000F8C 63F2                   MOV.L       @R15,R3
    00000F8E 3310                   CMP/EQ      R1,R3
    00000F90 8903                   BT          L929
          WiFi.c   834    
          WiFi.c   835            } else {
          WiFi.c   836                unsigned char c = (unsigned char) key;
          WiFi.c   837                buf[numChars] = c;
    00000F92 60E3                   MOV         R14,R0
    00000F94 64F2                   MOV.L       @R15,R4
          WiFi.c   838                numChars = numChars + 1;
    00000F96 7E01                   ADD         #1,R14
    00000F98 0D44                   MOV.B       R4,@(R0,R13)
    00000F9A              L929:                             
          WiFi.c   839            }
          WiFi.c   840                    
          WiFi.c   841                    
          WiFi.c   842                    
          WiFi.c   843            Bdisp_AreaClr_DDVRAM(&clearBox);
    00000F9A 64F3                   MOV         R15,R4
    00000F9C D332                   MOV.L       L1015+4,R3 ; _Bdisp_AreaClr_DDVRAM
    00000F9E 430B                   JSR         @R3
    00000FA0 7414                   ADD         #20,R4
          WiFi.c   844            locate(x, y);
    00000FA2 65A3                   MOV         R10,R5
    00000FA4 D231                   MOV.L       L1015+8,R2 ; _locate
    00000FA6 420B                   JSR         @R2
    00000FA8 64B3                   MOV         R11,R4
          WiFi.c   845            Print(buf);
    00000FAA D331                   MOV.L       L1015+12,R3; _Print
    00000FAC 430B                   JSR         @R3
    00000FAE 64D3                   MOV         R13,R4
          WiFi.c   846            if(search==true){




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 05-Aug-2018 14:17:19  PAGE   51


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000FB0 50F1                   MOV.L       @(4,R15),R0
    00000FB2 8801                   CMP/EQ      #1,R0
    00000FB4 8BA9                   BF          L925
          WiFi.c   847                 Bdisp_DrawLineVRAM(0,7,127,7);
    00000FB6 E707                   MOV         #7,R7
    00000FB8 D22E                   MOV.L       L1015+16,R2; _Bdisp_DrawLineVRAM
    00000FBA E67F                   MOV         #127,R6
    00000FBC 6573                   MOV         R7,R5
    00000FBE 420B                   JSR         @R2
    00000FC0 E400                   MOV         #0,R4
    00000FC2 AFA2                   BRA         L925
    00000FC4 0009                   NOP
    00000FC6              L928:                             
          WiFi.c   848            }
          WiFi.c   849        }
          WiFi.c   850    }
    00000FC6 7F24                   ADD         #36,R15
    00000FC8 4F26                   LDS.L       @R15+,PR
    00000FCA 68F6                   MOV.L       @R15+,R8
    00000FCC 69F6                   MOV.L       @R15+,R9
    00000FCE 6AF6                   MOV.L       @R15+,R10
    00000FD0 6BF6                   MOV.L       @R15+,R11
    00000FD2 6CF6                   MOV.L       @R15+,R12
    00000FD4 6DF6                   MOV.L       @R15+,R13
    00000FD6 000B                   RTS
    00000FD8 6EF6                   MOV.L       @R15+,R14
          WiFi.c   851    
          WiFi.c   852    void serialSendString(unsigned char* buffer) {
    00000FDA              _serialSendString:               ; function: serialSendString
                                                           ; frame size=8
    00000FDA 4F22                   STS.L       PR,@-R15
          WiFi.c   853        unsigned int counter = 0;
          WiFi.c   854            
          WiFi.c   855            Serial_BufferedTransmitNBytes(buffer,strlen(buffer)+1);
    00000FDC D326                   MOV.L       L1015+20,R3; _strlen
    00000FDE 430B                   JSR         @R3
    00000FE0 2F46                   MOV.L       R4,@-R15
    00000FE2 6503                   MOV         R0,R5
    00000FE4 64F2                   MOV.L       @R15,R4
    00000FE6 7501                   ADD         #1,R5
    00000FE8 D324                   MOV.L       L1015+24,R3; _Serial_BufferedTransmitNBytes
    00000FEA 7F04                   ADD         #4,R15
    00000FEC 432B                   JMP         @R3
    00000FEE 4F26                   LDS.L       @R15+,PR
          WiFi.c   856    }
          WiFi.c   857    
          WiFi.c   858    void serialReadString(unsigned char* buffer){ //überarbeitet
    00000FF0              _serialReadString:               ; function: serialReadString
                                                           ; frame size=4
    00000FF0 2F46                   MOV.L       R4,@-R15
          WiFi.c   859            serialReadStringTimeout(100, buffer);
    00000FF2 6543                   MOV         R4,R5
    00000FF4 E464                   MOV         #100,R4
    00000FF6 7F04                   ADD         #4,R15
          WiFi.c   860    }
          WiFi.c   861    
          WiFi.c   862    void serialReadStringTimeout(int timeout, unsigned char* buffer) { //überarbeitet




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 05-Aug-2018 14:17:19  PAGE   52


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000FF8              _serialReadStringTimeout:        ; function: serialReadStringTimeout
                                                           ; frame size=40
    00000FF8 2FE6                   MOV.L       R14,@-R15
    00000FFA 2FD6                   MOV.L       R13,@-R15
    00000FFC 2FC6                   MOV.L       R12,@-R15
    00000FFE 6D53                   MOV         R5,R13
          WiFi.c   863        unsigned int counter = 0;
          WiFi.c   864        int lastTicks = RTC_GetTicks();
    00001000 D31F                   MOV.L       L1015+28,R3; _RTC_GetTicks
    00001002 EC00                   MOV         #0,R12
    00001004 2FB6                   MOV.L       R11,@-R15
    00001006 2FA6                   MOV.L       R10,@-R15
    00001008 2F96                   MOV.L       R9,@-R15
    0000100A 2F86                   MOV.L       R8,@-R15
    0000100C 4F22                   STS.L       PR,@-R15
    0000100E 7FF8                   ADD         #-8,R15
    00001010 1F41                   MOV.L       R4,@(4,R15)
    00001012 430B                   JSR         @R3
    00001014 6EC3                   MOV         R12,R14
    00001016 6A03                   MOV         R0,R10
          WiFi.c   865        memset(buffer, 0, sizeof buffer);
    00001018 D21A                   MOV.L       L1015+32,R2; _memset
    0000101A E604                   MOV         #4,R6
    0000101C 65E3                   MOV         R14,R5
    0000101E 420B                   JSR         @R2
    00001020 64D3                   MOV         R13,R4
    00001022 D819                   MOV.L       L1015+36,R8; _Serial_ReadOneByte
    00001024 D919                   MOV.L       L1015+40,R9; _Serial_GetReceivedBytesAvailable
    00001026 DB1A                   MOV.L       L1015+44,R11; _RTC_Elapsed_ms
          WiFi.c   866    
          WiFi.c   867        while(true) {
    00001028              L938:                             
          WiFi.c   868            
          WiFi.c   869            if (Serial_GetReceivedBytesAvailable() > 0) {
    00001028 490B                   JSR         @R9
    0000102A 0009                   NOP
    0000102C 4015                   CMP/PL      R0
    0000102E 8B08                   BF          L939
          WiFi.c   870                unsigned char c;
          WiFi.c   871                Serial_ReadOneByte(&c);
    00001030 480B                   JSR         @R8
    00001032 64F3                   MOV         R15,R4
          WiFi.c   872    
          WiFi.c   873                buffer[counter] = c;
    00001034 63F0                   MOV.B       @R15,R3
    00001036 60D3                   MOV         R13,R0
    00001038 0E34                   MOV.B       R3,@(R0,R14)
          WiFi.c   874                counter = counter + 1;
          WiFi.c   875    
          WiFi.c   876                if (c == 0) {
    0000103A 62F0                   MOV.B       @R15,R2
    0000103C 2228                   TST         R2,R2
    0000103E 8D07                   BT/S        L941
    00001040 7E01                   ADD         #1,R14
    00001042              L939:                             
          WiFi.c   877                    return;
          WiFi.c   878                }




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 05-Aug-2018 14:17:19  PAGE   53


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          WiFi.c   879            }
          WiFi.c   880    
          WiFi.c   881            if (RTC_Elapsed_ms(lastTicks, timeout)) { // 100 ms timeout Standard
    00001042 55F1                   MOV.L       @(4,R15),R5
    00001044 4B0B                   JSR         @R11
    00001046 64A3                   MOV         R10,R4
    00001048 2008                   TST         R0,R0
    0000104A 89ED                   BT          L938
          WiFi.c   882                buffer[counter]=0;
    0000104C 60D3                   MOV         R13,R0
    0000104E 0EC4                   MOV.B       R12,@(R0,R14)
          WiFi.c   883                return;
    00001050              L941:                             
          WiFi.c   884            }
          WiFi.c   885        }
          WiFi.c   886    }
    00001050 7F08                   ADD         #8,R15
    00001052 4F26                   LDS.L       @R15+,PR
    00001054 68F6                   MOV.L       @R15+,R8
    00001056 69F6                   MOV.L       @R15+,R9
    00001058 6AF6                   MOV.L       @R15+,R10
    0000105A 6BF6                   MOV.L       @R15+,R11
    0000105C 6CF6                   MOV.L       @R15+,R12
    0000105E 6DF6                   MOV.L       @R15+,R13
    00001060 000B                   RTS
    00001062 6EF6                   MOV.L       @R15+,R14
    00001064              L1015:                            
    00001064 7537                   .DATA.W     H'7537
    00001066 0000                   .DATA.W     0
    00001068 <00000000>             .DATA.L     _Bdisp_AreaClr_DDVRAM
    0000106C <00000000>             .DATA.L     _locate
    00001070 <00000000>             .DATA.L     _Print
    00001074 <00000000>             .DATA.L     _Bdisp_DrawLineVRAM
    00001078 <00000000>             .DATA.L     _strlen
    0000107C <00000000>             .DATA.L     _Serial_BufferedTransmitNBytes
    00001080 <00000000>             .DATA.L     _RTC_GetTicks
    00001084 <00000000>             .DATA.L     _memset
    00001088 <00000000>             .DATA.L     _Serial_ReadOneByte
    0000108C <00000000>             .DATA.L     _Serial_GetReceivedBytesAvailable
    00001090 <00000000>             .DATA.L     _RTC_Elapsed_ms
          WiFi.c   887    
          WiFi.c   888    char keyToChar(int key, bool shift, bool alpha) {
    00001094              _keyToChar:                      ; function: keyToChar
                                                           ; frame size=0
          WiFi.c   889        unsigned char c = 1;
          WiFi.c   890    
          WiFi.c   891        if (shift) {
    00001094 2558                   TST         R5,R5
    00001096 8D02                   BT/S        L1016
    00001098 E701                   MOV         #1,R7
    0000109A A097                   BRA         L944
    0000109C 0009                   NOP
    0000109E              L1016:                            
          WiFi.c   892    
          WiFi.c   893        } else if (alpha) {
    0000109E 2668                   TST         R6,R6
    000010A0 8B01                   BF          L1017




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 05-Aug-2018 14:17:19  PAGE   54


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000010A2 A092                   BRA         L945
    000010A4 0009                   NOP
    000010A6              L1017:                            
          WiFi.c   894            switch (key) {
    000010A6 6043                   MOV         R4,R0
    000010A8 9141                   MOV.W       L1018,R1   ; H'7531
    000010AA 3010                   CMP/EQ      R1,R0
    000010AC 8B01                   BF          L1019
    000010AE A054                   BRA         L770
    000010B0 0009                   NOP
    000010B2              L1019:                            
    000010B2 913D                   MOV.W       L1018+2,R1 ; H'0095
    000010B4 3010                   CMP/EQ      R1,R0
    000010B6 8B01                   BF          L1020
    000010B8 A051                   BRA         L771
    000010BA 0009                   NOP
    000010BC              L1020:                            
    000010BC 9139                   MOV.W       L1018+4,R1 ; H'0085
    000010BE 3010                   CMP/EQ      R1,R0
    000010C0 8B01                   BF          L1021
    000010C2 A04E                   BRA         L772
    000010C4 0009                   NOP
    000010C6              L1021:                            
    000010C6 9135                   MOV.W       L1018+6,R1 ; H'0081
    000010C8 3010                   CMP/EQ      R1,R0
    000010CA 894C                   BT          L773
    000010CC 9133                   MOV.W       L1018+8,R1 ; H'0082
    000010CE 3010                   CMP/EQ      R1,R0
    000010D0 894B                   BT          L774
    000010D2 9131                   MOV.W       L1018+10,R1; H'0083
    000010D4 3010                   CMP/EQ      R1,R0
    000010D6 894A                   BT          L775
    000010D8 912F                   MOV.W       L1018+12,R1; H'00BB
    000010DA 3010                   CMP/EQ      R1,R0
    000010DC 8949                   BT          L776
    000010DE 912D                   MOV.W       L1018+14,R1; H'755E
    000010E0 3010                   CMP/EQ      R1,R0
    000010E2 8948                   BT          L777
    000010E4 8828                   CMP/EQ      #40,R0
    000010E6 8948                   BT          L778
    000010E8 8829                   CMP/EQ      #41,R0
    000010EA 8948                   BT          L779
    000010EC 882C                   CMP/EQ      #44,R0
    000010EE 8948                   BT          L780
    000010F0 880E                   CMP/EQ      #14,R0
    000010F2 8948                   BT          L781
    000010F4 8837                   CMP/EQ      #55,R0
    000010F6 8948                   BT          L782
    000010F8 8838                   CMP/EQ      #56,R0
    000010FA 8948                   BT          L783
    000010FC 8839                   CMP/EQ      #57,R0
    000010FE 8948                   BT          L784
    00001100 8834                   CMP/EQ      #52,R0
    00001102 8948                   BT          L785
    00001104 8835                   CMP/EQ      #53,R0
    00001106 8948                   BT          L786
    00001108 8836                   CMP/EQ      #54,R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 05-Aug-2018 14:17:19  PAGE   55


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000110A 8948                   BT          L787
    0000110C 9117                   MOV.W       L1018+16,R1; H'00A9
    0000110E 3010                   CMP/EQ      R1,R0
    00001110 8947                   BT          L788
    00001112 9115                   MOV.W       L1018+18,R1; H'00B9
    00001114 3010                   CMP/EQ      R1,R0
    00001116 8946                   BT          L789
    00001118 8831                   CMP/EQ      #49,R0
    0000111A 8946                   BT          L790
    0000111C 8832                   CMP/EQ      #50,R0
    0000111E 8946                   BT          L791
    00001120 8833                   CMP/EQ      #51,R0
    00001122 8946                   BT          L792
    00001124 910D                   MOV.W       L1018+20,R1; H'0089
    00001126 3010                   CMP/EQ      R1,R0
    00001128 8945                   BT          L793
    0000112A A00B                   BRA         L996
    0000112C 0009                   NOP
    0000112E              L1018:                            
    0000112E 7531                   .DATA.W     H'7531
    00001130 0095                   .DATA.W     H'0095
    00001132 0085                   .DATA.W     H'0085
    00001134 0081                   .DATA.W     H'0081
    00001136 0082                   .DATA.W     H'0082
    00001138 0083                   .DATA.W     H'0083
    0000113A 00BB                   .DATA.W     H'00BB
    0000113C 755E                   .DATA.W     H'755E
    0000113E 00A9                   .DATA.W     H'00A9
    00001140 00B9                   .DATA.W     H'00B9
    00001142 0089                   .DATA.W     H'0089
    00001144              L996:                             
    00001144 9144                   MOV.W       L1022,R1   ; H'0099
    00001146 3010                   CMP/EQ      R1,R0
    00001148 8937                   BT          L794
    0000114A 8830                   CMP/EQ      #48,R0
    0000114C 8937                   BT          L795
    0000114E 882E                   CMP/EQ      #46,R0
    00001150 8937                   BT          L796
    00001152 880F                   CMP/EQ      #15,R0
    00001154 8937                   BT          L797
    00001156 A039                   BRA         L944
    00001158 0009                   NOP
    0000115A              L770:                            ; case label 
          WiFi.c   895                case 30001:
          WiFi.c   896                    c = 'A';
          WiFi.c   897                    break;
    0000115A A037                   BRA         L944
    0000115C E741                   MOV         #65,R7
    0000115E              L771:                            ; case label 
          WiFi.c   898                case 149:
          WiFi.c   899                    c = 'B';
          WiFi.c   900                    break;
    0000115E A035                   BRA         L944
    00001160 E742                   MOV         #66,R7
    00001162              L772:                            ; case label 
          WiFi.c   901                case 133:
          WiFi.c   902                    c = 'C';




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 05-Aug-2018 14:17:19  PAGE   56


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          WiFi.c   903                    break;
    00001162 A033                   BRA         L944
    00001164 E743                   MOV         #67,R7
    00001166              L773:                            ; case label 
          WiFi.c   904                case 129:
          WiFi.c   905                    c = 'D';
          WiFi.c   906                    break;
    00001166 A031                   BRA         L944
    00001168 E744                   MOV         #68,R7
    0000116A              L774:                            ; case label 
          WiFi.c   907                case 130:
          WiFi.c   908                    c = 'E';
          WiFi.c   909                    break;
    0000116A A02F                   BRA         L944
    0000116C E745                   MOV         #69,R7
    0000116E              L775:                            ; case label 
          WiFi.c   910                case 131:
          WiFi.c   911                    c = 'F';
          WiFi.c   912                    break;
    0000116E A02D                   BRA         L944
    00001170 E746                   MOV         #70,R7
    00001172              L776:                            ; case label 
          WiFi.c   913                case 187:
          WiFi.c   914                    c = 'G';
          WiFi.c   915                    break;
    00001172 A02B                   BRA         L944
    00001174 E747                   MOV         #71,R7
    00001176              L777:                            ; case label 
          WiFi.c   916                case 30046:
          WiFi.c   917                    c = 'H';
          WiFi.c   918                    break;
    00001176 A029                   BRA         L944
    00001178 E748                   MOV         #72,R7
    0000117A              L778:                            ; case label 
          WiFi.c   919                case 40:
          WiFi.c   920                    c = 'I';
          WiFi.c   921                    break;
    0000117A A027                   BRA         L944
    0000117C E749                   MOV         #73,R7
    0000117E              L779:                            ; case label 
          WiFi.c   922                case 41:
          WiFi.c   923                    c = 'J';
          WiFi.c   924                    break;
    0000117E A025                   BRA         L944
    00001180 E74A                   MOV         #74,R7
    00001182              L780:                            ; case label 
          WiFi.c   925                case 44:
          WiFi.c   926                    c = 'K';
          WiFi.c   927                    break;
    00001182 A023                   BRA         L944
    00001184 E74B                   MOV         #75,R7
    00001186              L781:                            ; case label 
          WiFi.c   928                case 14:
          WiFi.c   929                    c = 'L';
          WiFi.c   930                    break;
    00001186 A021                   BRA         L944
    00001188 E74C                   MOV         #76,R7




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 05-Aug-2018 14:17:19  PAGE   57


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000118A              L782:                            ; case label 
          WiFi.c   931                case 55:
          WiFi.c   932                    c = 'M';
          WiFi.c   933                    break;
    0000118A A01F                   BRA         L944
    0000118C E74D                   MOV         #77,R7
    0000118E              L783:                            ; case label 
          WiFi.c   934                case 56:
          WiFi.c   935                    c = 'N';
          WiFi.c   936                    break;
    0000118E A01D                   BRA         L944
    00001190 E74E                   MOV         #78,R7
    00001192              L784:                            ; case label 
          WiFi.c   937                case 57:
          WiFi.c   938                    c = 'O';
          WiFi.c   939                    break;
    00001192 A01B                   BRA         L944
    00001194 E74F                   MOV         #79,R7
    00001196              L785:                            ; case label 
          WiFi.c   940                case 52:
          WiFi.c   941                    c = 'P';
          WiFi.c   942                    break;
    00001196 A019                   BRA         L944
    00001198 E750                   MOV         #80,R7
    0000119A              L786:                            ; case label 
          WiFi.c   943                case 53:
          WiFi.c   944                    c = 'Q';
          WiFi.c   945                    break;
    0000119A A017                   BRA         L944
    0000119C E751                   MOV         #81,R7
    0000119E              L787:                            ; case label 
          WiFi.c   946                case 54:
          WiFi.c   947                    c = 'R';
          WiFi.c   948                    break;
    0000119E A015                   BRA         L944
    000011A0 E752                   MOV         #82,R7
    000011A2              L788:                            ; case label 
          WiFi.c   949                case 169:
          WiFi.c   950                    c = 'S';
          WiFi.c   951                    break;
    000011A2 A013                   BRA         L944
    000011A4 E753                   MOV         #83,R7
    000011A6              L789:                            ; case label 
          WiFi.c   952                case 185:
          WiFi.c   953                    c = 'T';
          WiFi.c   954                    break;
    000011A6 A011                   BRA         L944
    000011A8 E754                   MOV         #84,R7
    000011AA              L790:                            ; case label 
          WiFi.c   955                case 49:
          WiFi.c   956                    c = 'U';
          WiFi.c   957                    break;
    000011AA A00F                   BRA         L944
    000011AC E755                   MOV         #85,R7
    000011AE              L791:                            ; case label 
          WiFi.c   958                case 50:
          WiFi.c   959                    c = 'V';




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 05-Aug-2018 14:17:19  PAGE   58


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          WiFi.c   960                    break;
    000011AE A00D                   BRA         L944
    000011B0 E756                   MOV         #86,R7
    000011B2              L792:                            ; case label 
          WiFi.c   961                case 51:
          WiFi.c   962                    c = 'W';
          WiFi.c   963                    break;
    000011B2 A00B                   BRA         L944
    000011B4 E757                   MOV         #87,R7
    000011B6              L793:                            ; case label 
          WiFi.c   964                case 137:
          WiFi.c   965                    c = 'X';
          WiFi.c   966                    break;
    000011B6 A009                   BRA         L944
    000011B8 E758                   MOV         #88,R7
    000011BA              L794:                            ; case label 
          WiFi.c   967                case 153:
          WiFi.c   968                    c = 'Y';
          WiFi.c   969                    break;
    000011BA A007                   BRA         L944
    000011BC E759                   MOV         #89,R7
    000011BE              L795:                            ; case label 
          WiFi.c   970                case 48:
          WiFi.c   971                    c = 'Z';
          WiFi.c   972                    break;
    000011BE A005                   BRA         L944
    000011C0 E75A                   MOV         #90,R7
    000011C2              L796:                            ; case label 
          WiFi.c   973                case 46:
          WiFi.c   974                    c = ' ';
          WiFi.c   975                    break;
    000011C2 A003                   BRA         L944
    000011C4 E720                   MOV         #32,R7
    000011C6              L797:                            ; case label 
          WiFi.c   976                case 15:
          WiFi.c   977                    c = '\"';
          WiFi.c   978                    break;
    000011C6 A001                   BRA         L944
    000011C8 E722                   MOV         #34,R7
    000011CA              L945:                             
          WiFi.c   979            }
          WiFi.c   980        } else {
          WiFi.c   981            c = (unsigned char) key;
    000011CA 6743                   MOV         R4,R7
    000011CC              L944:                             
          WiFi.c   982        }
          WiFi.c   983    
          WiFi.c   984        return c;
          WiFi.c   985    }
    000011CC 000B                   RTS
    000011CE 6073                   MOV         R7,R0
    000011D0              L1022:                            
    000011D0 0099                   .DATA.W     H'0099
          WiFi.c   986    
          WiFi.c   987    int getKey() {
    000011D2              _getKey:                         ; function: getKey
                                                           ; frame size=52




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 05-Aug-2018 14:17:19  PAGE   59


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000011D2 2FE6                   MOV.L       R14,@-R15
    000011D4 2FD6                   MOV.L       R13,@-R15
    000011D6 2FC6                   MOV.L       R12,@-R15
    000011D8 2FB6                   MOV.L       R11,@-R15
    000011DA 2FA6                   MOV.L       R10,@-R15
    000011DC 2F96                   MOV.L       R9,@-R15
    000011DE 2F86                   MOV.L       R8,@-R15
    000011E0 4F22                   STS.L       PR,@-R15
    000011E2 7FF4                   ADD         #-12,R15
          WiFi.c   988        int col, row;
          WiFi.c   989        int lastKeyTicks, lastClrTicks;
          WiFi.c   990        unsigned short keycode;
          WiFi.c   991    
          WiFi.c   992        Bdisp_PutDisp_DD();
    000011E4 D376                   MOV.L       L1023+2,R3 ; _Bdisp_PutDisp_DD
    000011E6 430B                   JSR         @R3
    000011E8 0009                   NOP
          WiFi.c   993    
          WiFi.c   994        Keyboard_ClrBuffer(); // clear the buffer to prevent strange behaviour when hitting the menu key
    000011EA DB76                   MOV.L       L1023+6,R11; _Keyboard_ClrBuffer
    000011EC 4B0B                   JSR         @R11
    000011EE 0009                   NOP
    000011F0 D875                   MOV.L       L1023+10,R8; _Serial_Close
    000011F2 EE00                   MOV         #0,R14
    000011F4 D975                   MOV.L       L1023+14,R9; _RTC_GetTicks
    000011F6 DA76                   MOV.L       L1023+18,R10; _RTC_Elapsed_ms
    000011F8 DD76                   MOV.L       L1023+22,R13; _Keyboard_GetKeyWait
          WiFi.c   995    
          WiFi.c   996        while(true) {
    000011FA              L950:                             
          WiFi.c   997            lastKeyTicks = RTC_GetTicks();
    000011FA 490B                   JSR         @R9
    000011FC 0009                   NOP
    000011FE 6C03                   MOV         R0,R12
          WiFi.c   998            while(!RTC_Elapsed_ms(lastKeyTicks, 100)) {
    00001200              L951:                             
    00001200 E564                   MOV         #100,R5
    00001202 4A0B                   JSR         @R10
    00001204 64C3                   MOV         R12,R4
    00001206 2008                   TST         R0,R0
    00001208 89FA                   BT          L951
          WiFi.c   999            }
          WiFi.c  1000    
          WiFi.c  1001            if (Keyboard_GetKeyWait(&col, &row, 1, 0, 0, &keycode)) {
    0000120A 63F3                   MOV         R15,R3
    0000120C 7308                   ADD         #8,R3
    0000120E E700                   MOV         #0,R7
    00001210 2F36                   MOV.L       R3,@-R15
    00001212 E601                   MOV         #1,R6
    00001214 2FE6                   MOV.L       R14,@-R15
    00001216 65F3                   MOV         R15,R5
    00001218 750C                   ADD         #12,R5
    0000121A 64F3                   MOV         R15,R4
    0000121C 4D0B                   JSR         @R13
    0000121E 7408                   ADD         #8,R4
    00001220 2008                   TST         R0,R0
    00001222 8D15                   BT/S        L953




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 05-Aug-2018 14:17:19  PAGE   60


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001224 7F08                   ADD         #8,R15
          WiFi.c  1002                if (col == 4 && row == 9) { // MENU key was pressed
    00001226 60F2                   MOV.L       @R15,R0
    00001228 8804                   CMP/EQ      #4,R0
    0000122A 8B15                   BF          L956
    0000122C 50F1                   MOV.L       @(4,R15),R0
    0000122E 8809                   CMP/EQ      #9,R0
    00001230 8B12                   BF          L956
          WiFi.c  1003                    Serial_Close(1);
    00001232 480B                   JSR         @R8
    00001234 E401                   MOV         #1,R4
          WiFi.c  1004                    Keyboard_GetKeyWait(&col, &row, 0, 0, 0, &keycode);
    00001236 62F3                   MOV         R15,R2
    00001238 7208                   ADD         #8,R2
    0000123A E700                   MOV         #0,R7
    0000123C 2F26                   MOV.L       R2,@-R15
    0000123E 6673                   MOV         R7,R6
    00001240 2FE6                   MOV.L       R14,@-R15
    00001242 65F3                   MOV         R15,R5
    00001244 750C                   ADD         #12,R5
    00001246 64F3                   MOV         R15,R4
    00001248 4D0B                   JSR         @R13
    0000124A 7408                   ADD         #8,R4
          WiFi.c  1005                    openSerial();
    0000124C B813                   BSR         _openSerial
    0000124E 7F08                   ADD         #8,R15
    00001250              L953:                             
          WiFi.c  1006                } else {
          WiFi.c  1007                    break;
          WiFi.c  1008                }
          WiFi.c  1009            }
          WiFi.c  1010    
          WiFi.c  1011            Keyboard_ClrBuffer();
    00001250 4B0B                   JSR         @R11
    00001252 0009                   NOP
    00001254 AFD1                   BRA         L950
    00001256 0009                   NOP
    00001258              L956:                             
          WiFi.c  1012        }
          WiFi.c  1013    
          WiFi.c  1014        Keyboard_ClrBuffer();
    00001258 4B0B                   JSR         @R11
    0000125A 0009                   NOP
          WiFi.c  1015    
          WiFi.c  1016        return (row - 1) * 7 + col - 1;
    0000125C 50F1                   MOV.L       @(4,R15),R0
    0000125E 70FF                   ADD         #-1,R0
    00001260 62F2                   MOV.L       @R15,R2
    00001262 6303                   MOV         R0,R3
    00001264 4008                   SHLL2       R0
    00001266 4000                   SHLL        R0
    00001268 3038                   SUB         R3,R0
    0000126A 302C                   ADD         R2,R0
    0000126C 70FF                   ADD         #-1,R0
          WiFi.c  1017    }
    0000126E 7F0C                   ADD         #12,R15
    00001270 4F26                   LDS.L       @R15+,PR




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 05-Aug-2018 14:17:19  PAGE   61


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001272 68F6                   MOV.L       @R15+,R8
    00001274 69F6                   MOV.L       @R15+,R9
    00001276 6AF6                   MOV.L       @R15+,R10
    00001278 6BF6                   MOV.L       @R15+,R11
    0000127A 6CF6                   MOV.L       @R15+,R12
    0000127C 6DF6                   MOV.L       @R15+,R13
    0000127E 000B                   RTS
    00001280 6EF6                   MOV.L       @R15+,R14
          WiFi.c  1018    
          WiFi.c  1019    void drawProgressBar(int y, float value) {
    00001282              _drawProgressBar:                ; function: drawProgressBar
                                                           ; frame size=72
                                                           ; used runtime library name:
                                                           ; __muld, __stod, __dtoi
          WiFi.c  1020        int length = (int) (121.0  * value);
    00001282 6053                   MOV         R5,R0
    00001284 D354                   MOV.L       L1023+26,R3; __stod
    00001286 2FE6                   MOV.L       R14,@-R15
    00001288 2FD6                   MOV.L       R13,@-R15
    0000128A 6E43                   MOV         R4,R14
    0000128C 2FC6                   MOV.L       R12,@-R15
    0000128E 4F22                   STS.L       PR,@-R15
    00001290 7FE4                   ADD         #-28,R15
    00001292 7FF0                   ADD         #-16,R15
    00001294 430B                   JSR         @R3
    00001296 2FF6                   MOV.L       R15,@-R15
    00001298 D151                   MOV.L       L1023+34,R1; __muld
    0000129A E200                   MOV         #0,R2
    0000129C 2F26                   MOV.L       R2,@-R15
    0000129E D24F                   MOV.L       L1023+30,R2; H'405E4000
    000012A0 2F26                   MOV.L       R2,@-R15
    000012A2 63F3                   MOV         R15,R3
    000012A4 7310                   ADD         #16,R3
    000012A6 410B                   JSR         @R1
    000012A8 2F36                   MOV.L       R3,@-R15
    000012AA D24E                   MOV.L       L1023+38,R2; __dtoi
    000012AC 420B                   JSR         @R2
    000012AE 0009                   NOP
    000012B0 2F02                   MOV.L       R0,@R15
          WiFi.c  1021        DISPBOX dispBox;
          WiFi.c  1022    
          WiFi.c  1023        dispBox.left = 1;
    000012B2 E301                   MOV         #1,R3
    000012B4 1F33                   MOV.L       R3,@(12,R15)
          WiFi.c  1024        dispBox.top = y;
          WiFi.c  1025        dispBox.right = 126;
          WiFi.c  1026        dispBox.bottom = y + 5;
    000012B6 6CE3                   MOV         R14,R12
    000012B8 1FE4                   MOV.L       R14,@(16,R15)
    000012BA E37E                   MOV         #126,R3
    000012BC 1F35                   MOV.L       R3,@(20,R15)
    000012BE 7C05                   ADD         #5,R12
          WiFi.c  1027    
          WiFi.c  1028         Bdisp_AreaClr_DD(&dispBox);
    000012C0 D349                   MOV.L       L1023+42,R3; _Bdisp_AreaClr_DD
    000012C2 64F3                   MOV         R15,R4
    000012C4 1FC6                   MOV.L       R12,@(24,R15)




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 05-Aug-2018 14:17:19  PAGE   62


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000012C6 430B                   JSR         @R3
    000012C8 740C                   ADD         #12,R4
          WiFi.c  1029    
          WiFi.c  1030        Bdisp_DrawLineVRAM(1, y, 126, y);
    000012CA 67E3                   MOV         R14,R7
    000012CC DD47                   MOV.L       L1023+46,R13; _Bdisp_DrawLineVRAM
    000012CE E67E                   MOV         #126,R6
    000012D0 65E3                   MOV         R14,R5
    000012D2 4D0B                   JSR         @R13
    000012D4 E401                   MOV         #1,R4
          WiFi.c  1031        Bdisp_DrawLineVRAM(1, y + 5, 126, y + 5);
    000012D6 67C3                   MOV         R12,R7
    000012D8 E67E                   MOV         #126,R6
    000012DA 65C3                   MOV         R12,R5
    000012DC 4D0B                   JSR         @R13
    000012DE E401                   MOV         #1,R4
          WiFi.c  1032        Bdisp_DrawLineVRAM(1, y, 1, y + 5);
    000012E0 67C3                   MOV         R12,R7
    000012E2 E601                   MOV         #1,R6
    000012E4 65E3                   MOV         R14,R5
    000012E6 4D0B                   JSR         @R13
    000012E8 6463                   MOV         R6,R4
          WiFi.c  1033        Bdisp_DrawLineVRAM(126, y, 126, y + 5);
    000012EA 67C3                   MOV         R12,R7
    000012EC E67E                   MOV         #126,R6
    000012EE 65E3                   MOV         R14,R5
    000012F0 4D0B                   JSR         @R13
    000012F2 6463                   MOV         R6,R4
          WiFi.c  1034    
          WiFi.c  1035        Bdisp_DrawLineVRAM(3, y + 2, 3 + length, y + 2);
    000012F4 67E3                   MOV         R14,R7
    000012F6 7702                   ADD         #2,R7
    000012F8 1F72                   MOV.L       R7,@(8,R15)
    000012FA 66F2                   MOV.L       @R15,R6
    000012FC 7603                   ADD         #3,R6
    000012FE 1F61                   MOV.L       R6,@(4,R15)
    00001300 55F2                   MOV.L       @(8,R15),R5
    00001302 4D0B                   JSR         @R13
    00001304 E403                   MOV         #3,R4
          WiFi.c  1036        Bdisp_DrawLineVRAM(3, y + 3, 3 + length, y + 3);
    00001306 67E3                   MOV         R14,R7
    00001308 7703                   ADD         #3,R7
    0000130A 6573                   MOV         R7,R5
    0000130C 2F72                   MOV.L       R7,@R15
    0000130E 56F1                   MOV.L       @(4,R15),R6
    00001310 4D0B                   JSR         @R13
    00001312 E403                   MOV         #3,R4
          WiFi.c  1037    
          WiFi.c  1038        Bdisp_PutDispArea_DD(&dispBox);
    00001314 D336                   MOV.L       L1023+50,R3; _Bdisp_PutDispArea_DD
    00001316 64F3                   MOV         R15,R4
    00001318 430B                   JSR         @R3
    0000131A 740C                   ADD         #12,R4
          WiFi.c  1039    }
    0000131C 7F1C                   ADD         #28,R15
    0000131E 4F26                   LDS.L       @R15+,PR
    00001320 6CF6                   MOV.L       @R15+,R12




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 05-Aug-2018 14:17:19  PAGE   63


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001322 6DF6                   MOV.L       @R15+,R13
    00001324 000B                   RTS
    00001326 6EF6                   MOV.L       @R15+,R14
          WiFi.c  1040    
          WiFi.c  1041    void sendData(unsigned char* buffer, int length){
    00001328              _sendData:                       ; function: sendData
                                                           ; frame size=80
    00001328 2FE6                   MOV.L       R14,@-R15
    0000132A 2FD6                   MOV.L       R13,@-R15
    0000132C 2FC6                   MOV.L       R12,@-R15
    0000132E 2FB6                   MOV.L       R11,@-R15
    00001330 2FA6                   MOV.L       R10,@-R15
    00001332 6B53                   MOV         R5,R11
    00001334 DC2F                   MOV.L       L1023+54,R12; _Serial_BufferedTransmitNBytes
    00001336 2F96                   MOV.L       R9,@-R15
    00001338 2F86                   MOV.L       R8,@-R15
    0000133A E801                   MOV         #1,R8
    0000133C 4F22                   STS.L       PR,@-R15
    0000133E 7FD0                   ADD         #-48,R15
    00001340 2F42                   MOV.L       R4,@R15
    00001342 69F3                   MOV         R15,R9
    00001344 7904                   ADD         #4,R9
          WiFi.c  1042            do{
    00001346              L958:                             
          WiFi.c  1043                    unsigned char cs[4];
          WiFi.c  1044                    unsigned char* len[10];
          WiFi.c  1045                    int counter=0;
          WiFi.c  1046                    int transmitCount;
          WiFi.c  1047                    
          WiFi.c  1048                    sendCommand("DATA");
    00001346 D42C                   MOV.L       L1023+58,R4; L664
    00001348 BD33                   BSR         _sendCommand
    0000134A ED00                   MOV         #0,R13
          WiFi.c  1049                    
          WiFi.c  1050                    itoa(length,10,len);
    0000134C 6693                   MOV         R9,R6
    0000134E E50A                   MOV         #10,R5
    00001350 B07F                   BSR         _itoa
    00001352 64B3                   MOV         R11,R4
          WiFi.c  1051            
          WiFi.c  1052                    Serial_BufferedTransmitNBytes(len,10);
    00001354 E50A                   MOV         #10,R5
    00001356 4C0B                   JSR         @R12
    00001358 6493                   MOV         R9,R4
          WiFi.c  1053                    checksum(buffer,length,cs);
    0000135A 66F3                   MOV         R15,R6
    0000135C 762C                   ADD         #44,R6
    0000135E 65B3                   MOV         R11,R5
    00001360 B052                   BSR         _checksum
    00001362 64F2                   MOV.L       @R15,R4
          WiFi.c  1054                    Serial_BufferedTransmitNBytes(cs,4);
    00001364 E504                   MOV         #4,R5
    00001366 64F3                   MOV         R15,R4
    00001368 4C0B                   JSR         @R12
    0000136A 742C                   ADD         #44,R4
          WiFi.c  1055                    
          WiFi.c  1056                    while(counter<length){




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 05-Aug-2018 14:17:19  PAGE   64


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000136C A012                   BRA         L959
    0000136E 0009                   NOP
    00001370              L960:                             
    00001370 6AF2                   MOV.L       @R15,R10
          WiFi.c  1057                            transmitCount=length-counter;
    00001372 6EB3                   MOV         R11,R14
    00001374 3ED8                   SUB         R13,R14
          WiFi.c  1058                            while(Serial_BufferedTransmitNBytes(&buffer[counter],transmitCount)!=0){
    00001376 A007                   BRA         L961
    00001378 3ADC                   ADD         R13,R10
    0000137A              L962:                             
          WiFi.c  1059                                    transmitCount=(int)transmitCount/2;
    0000137A E300                   MOV         #0,R3
    0000137C 33E7                   CMP/GT      R14,R3
    0000137E 3E3E                   ADDC        R3,R14
    00001380 4E21                   SHAR        R14
          WiFi.c  1060                                    if(transmitCount==0){
    00001382 2EE8                   TST         R14,R14
    00001384 8B00                   BF          L961
          WiFi.c  1061                                            transmitCount=1;
    00001386 6E83                   MOV         R8,R14
    00001388              L961:                             
    00001388 65E3                   MOV         R14,R5
    0000138A 4C0B                   JSR         @R12
    0000138C 64A3                   MOV         R10,R4
    0000138E 2008                   TST         R0,R0
    00001390 8BF3                   BF          L962
          WiFi.c  1062                                    }
          WiFi.c  1063                            }
          WiFi.c  1064                            counter+=transmitCount;
    00001392 3DEC                   ADD         R14,R13
    00001394              L959:                             
    00001394 3DB3                   CMP/GE      R11,R13
    00001396 8BEB                   BF          L960
          WiFi.c  1065                    }
          WiFi.c  1066                    
          WiFi.c  1067                    receiveStatus();
    00001398 BD58                   BSR         _receiveStatus
    0000139A 0009                   NOP
          WiFi.c  1068            }while(memcmp(status,"OK",2)==0);
    0000139C D517                   MOV.L       L1023+62,R5; L430
    0000139E D418                   MOV.L       L1023+66,R4; _status
    000013A0 D218                   MOV.L       L1023+70,R2; _memcmp
    000013A2 420B                   JSR         @R2
    000013A4 E602                   MOV         #2,R6
    000013A6 2008                   TST         R0,R0
    000013A8 89CD                   BT          L958
          WiFi.c  1069    }
    000013AA 7F30                   ADD         #48,R15
    000013AC 4F26                   LDS.L       @R15+,PR
    000013AE 68F6                   MOV.L       @R15+,R8
    000013B0 69F6                   MOV.L       @R15+,R9
    000013B2 6AF6                   MOV.L       @R15+,R10
    000013B4 6BF6                   MOV.L       @R15+,R11
    000013B6 6CF6                   MOV.L       @R15+,R12
    000013B8 6DF6                   MOV.L       @R15+,R13
    000013BA 000B                   RTS




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 05-Aug-2018 14:17:19  PAGE   65


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000013BC 6EF6                   MOV.L       @R15+,R14
    000013BE              L1023:                            
    000013BE 0000                   .DATA.W     0
    000013C0 <00000000>             .DATA.L     _Bdisp_PutDisp_DD
    000013C4 <00000000>             .DATA.L     _Keyboard_ClrBuffer
    000013C8 <00000000>             .DATA.L     _Serial_Close
    000013CC <00000000>             .DATA.L     _RTC_GetTicks
    000013D0 <00000000>             .DATA.L     _RTC_Elapsed_ms
    000013D4 <00000000>             .DATA.L     _Keyboard_GetKeyWait
    000013D8 <00000000>             .DATA.L     __stod
    000013DC 405E4000               .DATA.L     H'405E4000
    000013E0 <00000000>             .DATA.L     __muld
    000013E4 <00000000>             .DATA.L     __dtoi
    000013E8 <00000000>             .DATA.L     _Bdisp_AreaClr_DD
    000013EC <00000000>             .DATA.L     _Bdisp_DrawLineVRAM
    000013F0 <00000000>             .DATA.L     _Bdisp_PutDispArea_DD
    000013F4 <00000000>             .DATA.L     _Serial_BufferedTransmitNBytes
    000013F8 <00000000>             .DATA.L     L664
    000013FC <00000000>             .DATA.L     L430
    00001400 <00000000>             .DATA.L     _status
    00001404 <00000000>             .DATA.L     _memcmp
          WiFi.c  1070    
          WiFi.c  1071    void checksum(unsigned char* data,int length, unsigned char* csbuffer){
    00001408              _checksum:                       ; function: checksum
                                                           ; frame size=40
                                                           ; used runtime library name:
                                                           ; __modls
    00001408 2FE6                   MOV.L       R14,@-R15
          WiFi.c  1072            int i;
          WiFi.c  1073            int checksum=0;
    0000140A E700                   MOV         #0,R7
    0000140C 4F22                   STS.L       PR,@-R15
          WiFi.c  1074            unsigned char* checksumBuf[5];
          WiFi.c  1075            
          WiFi.c  1076            for(i=0;i<length;i=i+1){
    0000140E 4515                   CMP/PL      R5
    00001410 7FE8                   ADD         #-24,R15
    00001412 6E73                   MOV         R7,R14
    00001414 2F62                   MOV.L       R6,@R15
    00001416 8F06                   BF/S        L964
    00001418 6673                   MOV         R7,R6
    0000141A              L965:                             
    0000141A 7601                   ADD         #1,R6
          WiFi.c  1077                    checksum+=(int)data[i];
    0000141C 6344                   MOV.B       @R4+,R3
    0000141E 3653                   CMP/GE      R5,R6
    00001420 633C                   EXTU.B      R3,R3
    00001422 8FFA                   BF/S        L965
    00001424 3E3C                   ADD         R3,R14
    00001426              L964:                             
          WiFi.c  1078            }
          WiFi.c  1079            
          WiFi.c  1080            checksum=checksum%10000;
    00001426 9087                   MOV.W       L1024,R0   ; H'2710
    00001428 D345                   MOV.L       L1024+8,R3 ; __modls
    0000142A 430B                   JSR         @R3
    0000142C 61E3                   MOV         R14,R1




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 05-Aug-2018 14:17:19  PAGE   66


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000142E 6E03                   MOV         R0,R14
          WiFi.c  1081            
          WiFi.c  1082            sprintf(checksumBuf,"%04d",checksum);
    00001430 2F06                   MOV.L       R0,@-R15
    00001432 D244                   MOV.L       L1024+12,R2; L676
    00001434 D344                   MOV.L       L1024+16,R3; _sprintf
    00001436 2F26                   MOV.L       R2,@-R15
    00001438 64F3                   MOV         R15,R4
    0000143A 430B                   JSR         @R3
    0000143C 740C                   ADD         #12,R4
          WiFi.c  1083            memcpy(csbuffer,checksumBuf,4);
    0000143E E604                   MOV         #4,R6
    00001440 D342                   MOV.L       L1024+20,R3; _memcpy
    00001442 65F3                   MOV         R15,R5
    00001444 750C                   ADD         #12,R5
    00001446 430B                   JSR         @R3
    00001448 54F2                   MOV.L       @(8,R15),R4
          WiFi.c  1084            //itoa(checksum,4,csbuffer);
          WiFi.c  1085    }
    0000144A 7F20                   ADD         #32,R15
    0000144C 4F26                   LDS.L       @R15+,PR
    0000144E 000B                   RTS
    00001450 6EF6                   MOV.L       @R15+,R14
          WiFi.c  1086    
          WiFi.c  1087    void itoa(int integer,int len,unsigned char* data){
    00001452              _itoa:                           ; function: itoa
                                                           ; frame size=32
                                                           ; used runtime library name:
                                                           ; __divls
    00001452 2FE6                   MOV.L       R14,@-R15
    00001454 2FD6                   MOV.L       R13,@-R15
    00001456 2FC6                   MOV.L       R12,@-R15
    00001458 2FB6                   MOV.L       R11,@-R15
    0000145A 6C43                   MOV         R4,R12
    0000145C 2FA6                   MOV.L       R10,@-R15
    0000145E 6A53                   MOV         R5,R10
          WiFi.c  1088            int i=0;
          WiFi.c  1089            int z=0;
          WiFi.c  1090            
          WiFi.c  1091            for(i=len-1;i>=0;i=i-1){
    00001460 DB3B                   MOV.L       L1024+24,R11; _pow
    00001462 6EA3                   MOV         R10,R14
    00001464 4F22                   STS.L       PR,@-R15
    00001466 7EFF                   ADD         #-1,R14
    00001468 4F12                   STS.L       MACL,@-R15
    0000146A 4E11                   CMP/PZ      R14
    0000146C 7FFC                   ADD         #-4,R15
    0000146E 8F17                   BF/S        L966
    00001470 2F62                   MOV.L       R6,@R15
    00001472              L967:                             
          WiFi.c  1092                    z=(int)(integer/pow(10,i));
    00001472 65E3                   MOV         R14,R5
    00001474 4B0B                   JSR         @R11
    00001476 E40A                   MOV         #10,R4
    00001478 D236                   MOV.L       L1024+28,R2; __divls
    0000147A 420B                   JSR         @R2
    0000147C 61C3                   MOV         R12,R1




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 05-Aug-2018 14:17:19  PAGE   67


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000147E 6D03                   MOV         R0,R13
          WiFi.c  1093                    data[len-1-i]=z+48;
    00001480 60F2                   MOV.L       @R15,R0
    00001482 62D3                   MOV         R13,R2
    00001484 63A3                   MOV         R10,R3
    00001486 33E8                   SUB         R14,R3
    00001488 73FF                   ADD         #-1,R3
    0000148A 7230                   ADD         #48,R2
    0000148C 0324                   MOV.B       R2,@(R0,R3)
          WiFi.c  1094                    integer=integer-(z*pow(10,i));
    0000148E 65E3                   MOV         R14,R5
    00001490 4B0B                   JSR         @R11
    00001492 E40A                   MOV         #10,R4
    00001494 0D07                   MUL.L       R0,R13
    00001496 7EFF                   ADD         #-1,R14
    00001498 0D1A                   STS         MACL,R13
    0000149A 4E11                   CMP/PZ      R14
    0000149C 8DE9                   BT/S        L967
    0000149E 3CD8                   SUB         R13,R12
    000014A0              L966:                             
          WiFi.c  1095            }
          WiFi.c  1096    }
    000014A0 7F04                   ADD         #4,R15
    000014A2 4F16                   LDS.L       @R15+,MACL
    000014A4 4F26                   LDS.L       @R15+,PR
    000014A6 6AF6                   MOV.L       @R15+,R10
    000014A8 6BF6                   MOV.L       @R15+,R11
    000014AA 6CF6                   MOV.L       @R15+,R12
    000014AC 6DF6                   MOV.L       @R15+,R13
    000014AE 000B                   RTS
    000014B0 6EF6                   MOV.L       @R15+,R14
          WiFi.c  1097    
          WiFi.c  1098    unsigned char* receiveData(int timeout,unsigned short* received) {
    000014B2              _receiveData:                    ; function: receiveData
                                                           ; frame size=88
    000014B2 2FE6                   MOV.L       R14,@-R15
    000014B4 2FD6                   MOV.L       R13,@-R15
    000014B6 2FC6                   MOV.L       R12,@-R15
    000014B8 2FB6                   MOV.L       R11,@-R15
    000014BA 2FA6                   MOV.L       R10,@-R15
    000014BC 2F96                   MOV.L       R9,@-R15
    000014BE 2F86                   MOV.L       R8,@-R15
    000014C0 4F22                   STS.L       PR,@-R15
    000014C2 7FC8                   ADD         #-56,R15
          WiFi.c  1099            unsigned char c;
          WiFi.c  1100            short actuallyTransferred;
          WiFi.c  1101            int counter=0;
          WiFi.c  1102            int startTicks = RTC_GetTicks();
    000014C4 DE24                   MOV.L       L1024+32,R14; _RTC_GetTicks
    000014C6 1F45                   MOV.L       R4,@(20,R15)
    000014C8 1F53                   MOV.L       R5,@(12,R15)
    000014CA 4E0B                   JSR         @R14
    000014CC E800                   MOV         #0,R8
          WiFi.c  1103            //int timeout = 2000;
          WiFi.c  1104            unsigned char command[4];
          WiFi.c  1105            unsigned char length[10];
          WiFi.c  1106            unsigned char checksumRec[4];




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 05-Aug-2018 14:17:19  PAGE   68


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          WiFi.c  1107            unsigned char checksumCalc[4];
          WiFi.c  1108            unsigned char* data;
          WiFi.c  1109            unsigned short try=0;
    000014CE 6083                   MOV         R8,R0
    000014D0 D922                   MOV.L       L1024+36,R9; _Serial_ReadNBytes
    000014D2 63F3                   MOV         R15,R3
    000014D4 DB22                   MOV.L       L1024+40,R11; _RTC_Elapsed_ms
    000014D6 62F3                   MOV         R15,R2
    000014D8 9C2F                   MOV.W       L1024+2,R12; H'07D0
    000014DA 7328                   ADD         #40,R3
    000014DC DD21                   MOV.L       L1024+44,R13; _Serial_GetReceivedBytesAvailable
    000014DE 7220                   ADD         #32,R2
    000014E0 81F8                   MOV.W       R0,@(16,R15)
    000014E2 1F36                   MOV.L       R3,@(24,R15)
    000014E4 1F27                   MOV.L       R2,@(28,R15)
          WiFi.c  1110            int len=0;
          WiFi.c  1111            
          WiFi.c  1112            
          WiFi.c  1113    
          WiFi.c  1114            do{
    000014E6              L968:                             
          WiFi.c  1115                    startTicks=RTC_GetTicks();
    000014E6 4E0B                   JSR         @R14
    000014E8 0009                   NOP
          WiFi.c  1116                    if (Serial_GetReceivedBytesAvailable()>0) {
    000014EA 4D0B                   JSR         @R13
    000014EC 6A03                   MOV         R0,R10
    000014EE 4015                   CMP/PL      R0
    000014F0 8901                   BT          L1025
    000014F2 A09B                   BRA         L969
    000014F4 0009                   NOP
    000014F6              L1025:                            
          WiFi.c  1117                            Serial_ReadOneByte(&c);
    000014F6 64F3                   MOV         R15,R4
    000014F8 D21B                   MOV.L       L1024+48,R2; _Serial_ReadOneByte
    000014FA 420B                   JSR         @R2
    000014FC 7408                   ADD         #8,R4
          WiFi.c  1118                            if (c == 219) {
    000014FE 84F8                   MOV.B       @(8,R15),R0
    00001500 931C                   MOV.W       L1024+4,R3 ; H'00DB
    00001502 600C                   EXTU.B      R0,R0
    00001504 3030                   CMP/EQ      R3,R0
    00001506 8901                   BT          L1026
    00001508 A090                   BRA         L969
    0000150A 0009                   NOP
    0000150C              L1026:                            
          WiFi.c  1119                                    
          WiFi.c  1120                                    startTicks=RTC_GetTicks();
    0000150C 4E0B                   JSR         @R14
    0000150E 0009                   NOP
          WiFi.c  1121                                    while(Serial_GetReceivedBytesAvailable()<5)
    00001510 A004                   BRA         L971
    00001512 6A03                   MOV         R0,R10
    00001514              L972:                             
          WiFi.c  1122                                    {
          WiFi.c  1123                                            if(RTC_Elapsed_ms(startTicks,2000));
    00001514 65C3                   MOV         R12,R5




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 05-Aug-2018 14:17:19  PAGE   69


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001516 4B0B                   JSR         @R11
    00001518 64A3                   MOV         R10,R4
    0000151A 2008                   TST         R0,R0
    0000151C              L971:                             
    0000151C 4D0B                   JSR         @R13
    0000151E 0009                   NOP
    00001520 E305                   MOV         #5,R3
    00001522 3033                   CMP/GE      R3,R0
    00001524 8BF6                   BF          L972
          WiFi.c  1124                                    }
          WiFi.c  1125                                    Serial_ReadNBytes(command,5,&actuallyTransferred);
    00001526 66F3                   MOV         R15,R6
    00001528 E505                   MOV         #5,R5
    0000152A 64F3                   MOV         R15,R4
    0000152C 490B                   JSR         @R9
    0000152E 7434                   ADD         #52,R4
          WiFi.c  1126                                    
          WiFi.c  1127                                    startTicks=RTC_GetTicks();
    00001530 4E0B                   JSR         @R14
    00001532 0009                   NOP
          WiFi.c  1128                                    while(Serial_GetReceivedBytesAvailable()<10)
    00001534 A01E                   BRA         L974
    00001536 6A03                   MOV         R0,R10
    00001538              L1024:                            
    00001538 2710                   .DATA.W     H'2710
    0000153A 07D0                   .DATA.W     H'07D0
    0000153C 00DB                   .DATA.W     H'00DB
    0000153E 0000                   .DATA.W     0
    00001540 <00000000>             .DATA.L     __modls
    00001544 <00000000>             .DATA.L     L676
    00001548 <00000000>             .DATA.L     _sprintf
    0000154C <00000000>             .DATA.L     _memcpy
    00001550 <00000000>             .DATA.L     _pow
    00001554 <00000000>             .DATA.L     __divls
    00001558 <00000000>             .DATA.L     _RTC_GetTicks
    0000155C <00000000>             .DATA.L     _Serial_ReadNBytes
    00001560 <00000000>             .DATA.L     _RTC_Elapsed_ms
    00001564 <00000000>             .DATA.L     _Serial_GetReceivedBytesAvailable
    00001568 <00000000>             .DATA.L     _Serial_ReadOneByte
    0000156C              L975:                             
          WiFi.c  1129                                    {
          WiFi.c  1130                                            if(RTC_Elapsed_ms(startTicks,2000));
    0000156C 65C3                   MOV         R12,R5
    0000156E 4B0B                   JSR         @R11
    00001570 64A3                   MOV         R10,R4
    00001572 2008                   TST         R0,R0
    00001574              L974:                             
    00001574 4D0B                   JSR         @R13
    00001576 0009                   NOP
    00001578 E30A                   MOV         #10,R3
    0000157A 3033                   CMP/GE      R3,R0
    0000157C 8BF6                   BF          L975
          WiFi.c  1131                                    }
          WiFi.c  1132                                    Serial_ReadNBytes(length,10,&actuallyTransferred);
    0000157E 66F3                   MOV         R15,R6
    00001580 E50A                   MOV         #10,R5
    00001582 64F3                   MOV         R15,R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 05-Aug-2018 14:17:19  PAGE   70


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001584 490B                   JSR         @R9
    00001586 7428                   ADD         #40,R4
          WiFi.c  1133                                    
          WiFi.c  1134                                    startTicks=RTC_GetTicks();
    00001588 4E0B                   JSR         @R14
    0000158A 0009                   NOP
          WiFi.c  1135                                    while(Serial_GetReceivedBytesAvailable()<4)
    0000158C A004                   BRA         L977
    0000158E 6A03                   MOV         R0,R10
    00001590              L978:                             
          WiFi.c  1136                                    {
          WiFi.c  1137                                            if(RTC_Elapsed_ms(startTicks,2000));
    00001590 65C3                   MOV         R12,R5
    00001592 4B0B                   JSR         @R11
    00001594 64A3                   MOV         R10,R4
    00001596 2008                   TST         R0,R0
    00001598              L977:                             
    00001598 4D0B                   JSR         @R13
    0000159A 0009                   NOP
    0000159C E304                   MOV         #4,R3
    0000159E 3033                   CMP/GE      R3,R0
    000015A0 8BF6                   BF          L978
          WiFi.c  1138                                    }
          WiFi.c  1139                                    Serial_ReadNBytes(checksumRec,4,&actuallyTransferred);
    000015A2 66F3                   MOV         R15,R6
    000015A4 E504                   MOV         #4,R5
    000015A6 64F3                   MOV         R15,R4
    000015A8 490B                   JSR         @R9
    000015AA 7424                   ADD         #36,R4
          WiFi.c  1140                                    
          WiFi.c  1141                                    len=atoi(&length);
    000015AC D359                   MOV.L       L1027+2,R3 ; _atoi
    000015AE 430B                   JSR         @R3
    000015B0 54F6                   MOV.L       @(24,R15),R4
    000015B2 6A03                   MOV         R0,R10
          WiFi.c  1142                                    
          WiFi.c  1143                                    data=(unsigned char*)malloc(len);
    000015B4 D258                   MOV.L       L1027+6,R2 ; _malloc
    000015B6 420B                   JSR         @R2
    000015B8 6403                   MOV         R0,R4
    000015BA 1F01                   MOV.L       R0,@(4,R15)
          WiFi.c  1144                                    
          WiFi.c  1145                                    do{
    000015BC              L980:                             
          WiFi.c  1146                                            Serial_ReadNBytes(&data[counter],len-counter,&actuallyTransferred)
                         +;
    000015BC 54F1                   MOV.L       @(4,R15),R4
    000015BE 66F3                   MOV         R15,R6
    000015C0 65A3                   MOV         R10,R5
    000015C2 3588                   SUB         R8,R5
    000015C4 490B                   JSR         @R9
    000015C6 348C                   ADD         R8,R4
          WiFi.c  1147                                            counter+=actuallyTransferred;
    000015C8 63F1                   MOV.W       @R15,R3
    000015CA 383C                   ADD         R3,R8
          WiFi.c  1148                                    }while(counter<len);
    000015CC 38A3                   CMP/GE      R10,R8




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 05-Aug-2018 14:17:19  PAGE   71


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000015CE 8BF5                   BF          L980
          WiFi.c  1149                                    
          WiFi.c  1150                                    checksum(data,len,&checksumCalc);
    000015D0 56F7                   MOV.L       @(28,R15),R6
    000015D2 65A3                   MOV         R10,R5
    000015D4 BF18                   BSR         _checksum
    000015D6 54F1                   MOV.L       @(4,R15),R4
          WiFi.c  1151                                    
          WiFi.c  1152                                    
          WiFi.c  1153                                    
          WiFi.c  1154                                    if(memcmp(checksumCalc,checksumRec,4)==0){
    000015D8 D250                   MOV.L       L1027+10,R2; _memcmp
    000015DA E604                   MOV         #4,R6
    000015DC 65F3                   MOV         R15,R5
    000015DE 7524                   ADD         #36,R5
    000015E0 64F3                   MOV         R15,R4
    000015E2 420B                   JSR         @R2
    000015E4 7420                   ADD         #32,R4
    000015E6 2008                   TST         R0,R0
    000015E8 8B06                   BF          L981
          WiFi.c  1155                                            sendAcknowledgement("OK");
    000015EA D44D                   MOV.L       L1027+14,R4; L430
    000015EC BC24                   BSR         _sendAcknowledgement
    000015EE 0009                   NOP
          WiFi.c  1156                                            *received=len;
    000015F0 53F3                   MOV.L       @(12,R15),R3
    000015F2 23A1                   MOV.W       R10,@R3
          WiFi.c  1157                                            return data;
    000015F4 A022                   BRA         L982
    000015F6 50F1                   MOV.L       @(4,R15),R0
    000015F8              L981:                             
          WiFi.c  1158                                    }else{
          WiFi.c  1159                                            if(try<5){
    000015F8 85F8                   MOV.W       @(16,R15),R0
    000015FA E305                   MOV         #5,R3
    000015FC 600D                   EXTU.W      R0,R0
    000015FE 3033                   CMP/GE      R3,R0
    00001600 890C                   BT          L984
          WiFi.c  1160                                                    sendAcknowledgement("ER");
    00001602 D448                   MOV.L       L1027+18,R4; L709
    00001604 BC18                   BSR         _sendAcknowledgement
    00001606 0009                   NOP
          WiFi.c  1161                                                    free(data);
    00001608 D347                   MOV.L       L1027+22,R3; _free
    0000160A 430B                   JSR         @R3
    0000160C 54F1                   MOV.L       @(4,R15),R4
          WiFi.c  1162                                                    startTicks=RTC_GetTicks();
    0000160E 4E0B                   JSR         @R14
    00001610 0009                   NOP
    00001612 6A03                   MOV         R0,R10
          WiFi.c  1163                                                    try+=1;
    00001614 85F8                   MOV.W       @(16,R15),R0
    00001616 7001                   ADD         #1,R0
    00001618 A008                   BRA         L969
    0000161A 81F8                   MOV.W       R0,@(16,R15)
    0000161C              L984:                             
          WiFi.c  1164                                            }else{




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 05-Aug-2018 14:17:19  PAGE   72


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          WiFi.c  1165                                                    sendAcknowledgement("CA");
    0000161C D443                   MOV.L       L1027+26,R4; L711
    0000161E BC0B                   BSR         _sendAcknowledgement
    00001620 0009                   NOP
          WiFi.c  1166                                                    *received=0;
    00001622 E200                   MOV         #0,R2
    00001624 53F3                   MOV.L       @(12,R15),R3
    00001626 2321                   MOV.W       R2,@R3
    00001628 A007                   BRA         L739
    0000162A 0009                   NOP
    0000162C              L969:                             
          WiFi.c  1167                                                    return 0;
          WiFi.c  1168                                            }
          WiFi.c  1169                                    }
          WiFi.c  1170                            }
          WiFi.c  1171                    }
          WiFi.c  1172                    
          WiFi.c  1173                    
          WiFi.c  1174            }while(!RTC_Elapsed_ms(startTicks,timeout));
    0000162C 55F5                   MOV.L       @(20,R15),R5
    0000162E 4B0B                   JSR         @R11
    00001630 64A3                   MOV         R10,R4
    00001632 2008                   TST         R0,R0
    00001634 8B01                   BF          L1028
    00001636 AF56                   BRA         L968
    00001638 0009                   NOP
    0000163A              L1028:                            
    0000163A              L739:
          WiFi.c  1175            
          WiFi.c  1176            
          WiFi.c  1177            return 0;
    0000163A E000                   MOV         #0,R0
          WiFi.c  1178    }
    0000163C              L982:                             
    0000163C 7F38                   ADD         #56,R15
    0000163E 4F26                   LDS.L       @R15+,PR
    00001640 68F6                   MOV.L       @R15+,R8
    00001642 69F6                   MOV.L       @R15+,R9
    00001644 6AF6                   MOV.L       @R15+,R10
    00001646 6BF6                   MOV.L       @R15+,R11
    00001648 6CF6                   MOV.L       @R15+,R12
    0000164A 6DF6                   MOV.L       @R15+,R13
    0000164C 000B                   RTS
    0000164E 6EF6                   MOV.L       @R15+,R14
          WiFi.c  1179    
          WiFi.c  1180    void drawImage(unsigned char* d){
    00001650              _drawImage:                      ; function: drawImage
                                                           ; frame size=52
    00001650 2FE6                   MOV.L       R14,@-R15
    00001652 2FD6                   MOV.L       R13,@-R15
    00001654 2FC6                   MOV.L       R12,@-R15
    00001656 2FB6                   MOV.L       R11,@-R15
    00001658 2FA6                   MOV.L       R10,@-R15
    0000165A 2F96                   MOV.L       R9,@-R15
    0000165C 2F86                   MOV.L       R8,@-R15
    0000165E 4F22                   STS.L       PR,@-R15
          WiFi.c  1181            unsigned int startTicks = RTC_GetTicks();




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 05-Aug-2018 14:17:19  PAGE   73


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001660 D333                   MOV.L       L1027+30,R3; _RTC_GetTicks
    00001662 7FEC                   ADD         #-20,R15
    00001664 430B                   JSR         @R3
    00001666 2F42                   MOV.L       R4,@R15
          WiFi.c  1182            unsigned int width;
          WiFi.c  1183            unsigned int lineLengthBit;
          WiFi.c  1184            unsigned int heigth;
          WiFi.c  1185            unsigned int line;
          WiFi.c  1186            unsigned int y;
          WiFi.c  1187            unsigned int bitCounter;
          WiFi.c  1188            
          WiFi.c  1189            unsigned int xOffset=5;
          WiFi.c  1190            unsigned int yOffset=5;
          WiFi.c  1191            
          WiFi.c  1192            unsigned int i;
          WiFi.c  1193            unsigned int counter;
          WiFi.c  1194            
          WiFi.c  1195            unsigned int startOffset;
          WiFi.c  1196            
          WiFi.c  1197            unsigned short  actuallyReceived;
          WiFi.c  1198            //unsigned char* d;
          WiFi.c  1199            unsigned char currentByteToRead;
          WiFi.c  1200            unsigned char modifiedByte;
          WiFi.c  1201            
          WiFi.c  1202            //d=receiveData(60000,&actuallyReceived);
          WiFi.c  1203            //d=testPicture;
          WiFi.c  1204            
          WiFi.c  1205            Bdisp_AllClr_DDVRAM;
          WiFi.c  1206            
          WiFi.c  1207            startOffset=(int)d[10];
    00001668 6EF2                   MOV.L       @R15,R14
          WiFi.c  1208            width=(int)d[18];
          WiFi.c  1209            heigth=(int)d[22];
          WiFi.c  1210            
          WiFi.c  1211            counter=startOffset;
          WiFi.c  1212            lineLengthBit=width+(32-(width%32));
    0000166A E31F                   MOV         #31,R3
    0000166C 84EA                   MOV.B       @(10,R14),R0
    0000166E E800                   MOV         #0,R8
    00001670 690C                   EXTU.B      R0,R9
    00001672 E012                   MOV         #18,R0
    00001674 04EC                   MOV.B       @(R0,R14),R4
    00001676 E016                   MOV         #22,R0
    00001678 06EC                   MOV.B       @(R0,R14),R6
    0000167A 644C                   EXTU.B      R4,R4
    0000167C 666C                   EXTU.B      R6,R6
    0000167E 2349                   AND         R4,R3
    00001680 6543                   MOV         R4,R5
    00001682 3538                   SUB         R3,R5
    00001684 7520                   ADD         #32,R5
          WiFi.c  1213            
          WiFi.c  1214            for(i=heigth;i>0;i=i-1){
    00001686 6B63                   MOV         R6,R11
    00001688 4509                   SHLR2       R5
    0000168A 4501                   SHLR        R5
    0000168C A033                   BRA         L986
    0000168E 1F54                   MOV.L       R5,@(16,R15)




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 05-Aug-2018 14:17:19  PAGE   74


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001690              L987:                             
    00001690 6CF2                   MOV.L       @R15,R12
    00001692 63B3                   MOV         R11,R3
          WiFi.c  1215                    for(y=0;y<(lineLengthBit/8);y++){
    00001694 6A83                   MOV         R8,R10
    00001696 3C9C                   ADD         R9,R12
    00001698 7305                   ADD         #5,R3
    0000169A 62B3                   MOV         R11,R2
    0000169C 1F32                   MOV.L       R3,@(8,R15)
    0000169E 7205                   ADD         #5,R2
    000016A0 A025                   BRA         L988
    000016A2 1F21                   MOV.L       R2,@(4,R15)
    000016A4              L989:                             
          WiFi.c  1216                            currentByteToRead=d[counter];
    000016A4 60C0                   MOV.B       @R12,R0
          WiFi.c  1217                            for(bitCounter=0;bitCounter<8;bitCounter=bitCounter+1){
    000016A6 6E83                   MOV         R8,R14
    000016A8 80FC                   MOV.B       R0,@(12,R15)
    000016AA 6DA3                   MOV         R10,R13
    000016AC 4D08                   SHLL2       R13
    000016AE 4D00                   SHLL        R13
    000016B0              L990:                             
          WiFi.c  1218                                    modifiedByte=currentByteToRead<<bitCounter;
    000016B0 84FC                   MOV.B       @(12,R15),R0
          WiFi.c  1219                                    modifiedByte=modifiedByte>>7;
    000016B2 E2F9                   MOV         #-7,R2
    000016B4 600C                   EXTU.B      R0,R0
    000016B6 40ED                   SHLD        R14,R0
    000016B8 6403                   MOV         R0,R4
    000016BA 634C                   EXTU.B      R4,R3
    000016BC 432D                   SHLD        R2,R3
    000016BE 6433                   MOV         R3,R4
          WiFi.c  1220                                    if(modifiedByte==1){
    000016C0 604C                   EXTU.B      R4,R0
    000016C2 8801                   CMP/EQ      #1,R0
    000016C4 8B0C                   BF          L991
          WiFi.c  1221                                            Bdisp_AreaReverseVRAM(y*8+bitCounter+yOffset,i+xOffset,y*8+bitCoun
                         +ter+yOffset,i+xOffset);
    000016C6 66D3                   MOV         R13,R6
    000016C8 55F1                   MOV.L       @(4,R15),R5
    000016CA 64D3                   MOV         R13,R4
    000016CC D319                   MOV.L       L1027+34,R3; _Bdisp_AreaReverseVRAM
    000016CE 36EC                   ADD         R14,R6
    000016D0 57F2                   MOV.L       @(8,R15),R7
    000016D2 34EC                   ADD         R14,R4
    000016D4 7605                   ADD         #5,R6
    000016D6 430B                   JSR         @R3
    000016D8 7405                   ADD         #5,R4
          WiFi.c  1222                                            Bdisp_PutDisp_DD();
    000016DA D217                   MOV.L       L1027+38,R2; _Bdisp_PutDisp_DD
    000016DC 420B                   JSR         @R2
    000016DE 0009                   NOP
    000016E0              L991:                             
    000016E0 7E01                   ADD         #1,R14
    000016E2 E308                   MOV         #8,R3
    000016E4 3E32                   CMP/HS      R3,R14
    000016E6 8BE3                   BF          L990




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 05-Aug-2018 14:17:19  PAGE   75


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          WiFi.c  1223                                    }
          WiFi.c  1224                            }
          WiFi.c  1225                            counter=counter+1;
    000016E8 7901                   ADD         #1,R9
    000016EA 7C01                   ADD         #1,R12
    000016EC 7A01                   ADD         #1,R10
    000016EE              L988:                             
    000016EE 53F4                   MOV.L       @(16,R15),R3
    000016F0 3A32                   CMP/HS      R3,R10
    000016F2 8BD7                   BF          L989
    000016F4 7BFF                   ADD         #-1,R11
    000016F6              L986:                             
    000016F6 E300                   MOV         #0,R3
    000016F8 3B36                   CMP/HI      R3,R11
    000016FA 89C9                   BT          L987
          WiFi.c  1226                    }
          WiFi.c  1227            }
          WiFi.c  1228            Bdisp_PutDisp_DD();
    000016FC D10E                   MOV.L       L1027+38,R1; _Bdisp_PutDisp_DD
    000016FE 7F14                   ADD         #20,R15
    00001700 4F26                   LDS.L       @R15+,PR
    00001702 68F6                   MOV.L       @R15+,R8
    00001704 69F6                   MOV.L       @R15+,R9
    00001706 6AF6                   MOV.L       @R15+,R10
    00001708 6BF6                   MOV.L       @R15+,R11
    0000170A 6CF6                   MOV.L       @R15+,R12
    0000170C 6DF6                   MOV.L       @R15+,R13
    0000170E 412B                   JMP         @R1
    00001710 6EF6                   MOV.L       @R15+,R14
    00001712              L1027:                            
    00001712 0000                   .DATA.W     0
    00001714 <00000000>             .DATA.L     _atoi
    00001718 <00000000>             .DATA.L     _malloc
    0000171C <00000000>             .DATA.L     _memcmp
    00001720 <00000000>             .DATA.L     L430
    00001724 <00000000>             .DATA.L     L709
    00001728 <00000000>             .DATA.L     _free
    0000172C <00000000>             .DATA.L     L711
    00001730 <00000000>             .DATA.L     _RTC_GetTicks
    00001734 <00000000>             .DATA.L     _Bdisp_AreaReverseVRAM
    00001738 <00000000>             .DATA.L     _Bdisp_PutDisp_DD
          WiFi.c  1229    }
          WiFi.c  1230    
          WiFi.c  1231    
          WiFi.c  1232    //****************************************************************************
          WiFi.c  1233    //**************                                              ****************
          WiFi.c  1234    //**************                 Notice!                      ****************
          WiFi.c  1235    //**************                                              ****************
          WiFi.c  1236    //**************  Please do not change the following source.  ****************
          WiFi.c  1237    //**************                                              ****************
          WiFi.c  1238    //****************************************************************************
          WiFi.c  1239    
          WiFi.c  1240    
          WiFi.c  1241    #pragma section _BR_Size
          WiFi.c  1242    unsigned long BR_Size;
          WiFi.c  1243    #pragma section
          WiFi.c  1244    




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 05-Aug-2018 14:17:19  PAGE   76


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          WiFi.c  1245    
          WiFi.c  1246    #pragma section _TOP
          WiFi.c  1247    
          WiFi.c  1248    //****************************************************************************
          WiFi.c  1249    //  InitializeSystem
          WiFi.c  1250    //
          WiFi.c  1251    //  param   :   isAppli   : 1 = Application / 0 = eActivity
          WiFi.c  1252    //              OptionNum : Option Number (only eActivity)
          WiFi.c  1253    //
          WiFi.c  1254    //  retval  :   1 = No error / 0 = Error
          WiFi.c  1255    //
          WiFi.c  1256    //****************************************************************************
          WiFi.c  1257    int InitializeSystem(int isAppli, unsigned short OptionNum)
P_T 00000000              _InitializeSystem:               ; function: InitializeSystem
                                                           ; frame size=0
          WiFi.c  1258    {
          WiFi.c  1259        return INIT_ADDIN_APPLICATION(isAppli, OptionNum);
    00000000 D301                   MOV.L       L1029+2,R3 ; _INIT_ADDIN_APPLICATION
    00000002 432B                   JMP         @R3
    00000004 0009                   NOP
    00000006              L1029:                            
    00000006 0000                   .DATA.W     0
    00000008 <00000000>             .DATA.L     _INIT_ADDIN_APPLICATION
          WiFi.c  1260    }
          WiFi.c  1261    
          WiFi.c  1262    #pragma section
          WiFi.c  1263    
D   00000000              _network:                        ; static: network
    00000000 00000000               .DATA.L     H'00000000
    00000004 00000000               .DATA.L     H'00000000
    00000008 00000000               .DATA.L     H'00000000
    0000000C              _arrowRight:                     ; static: arrowRight
    0000000C E69B00                 .DATA.B     H'E6,H'9B,H'00
    0000000F              _loupe:                          ; static: loupe
    0000000F E65000                 .DATA.B     H'E6,H'50,H'00
    00000012              _checkSumDebug:                  ; static: checkSumDebug
    00000012 41307A3632             .DATA.B     H'41,H'30,H'7A,H'36,H'32,H'70,H'65,H'6E,H'69,H'53
             70656E6953   
    0000001C              _testPicture:                    ; static: testPicture
    0000001C 424D8A0000             .DATA.B     H'42,H'4D,H'8A,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'3E,H'00,H'00,H'00,H'28,H'00,
             0000000000 +                       H'00,H'00,H'1E,H'00,H'00,H'00,H'13,H'00,H'00,H'00,H'01,H'00,H'01,H'00,H'00,H'00,
             3E00000028 +                       H'00,H'00,H'4C,H'00,H'00,H'00,H'C3,H'0E,H'00,H'00,H'C3,H'0E,H'00,H'00,H'00,H'00,
             0000001E00 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'FF,H'FF,H'FF,H'00,H'00,H'00,H'00,H'00,H'7F,H'FF,
             0000130000 +                       H'FF,H'FC,H'00,H'00,H'01,H'FC,H'3F,H'07,H'E1,H'FC,H'21,H'04,H'21,H'FC,H'21,H'04,
             0001000100 +                       H'21,H'FC,H'27,H'DF,H'21,H'FC,H'25,H'55,H'21,H'FC,H'3F,H'57,H'E0,H'04,H'04,H'51,
             000000004C +                       H'00,H'04,H'07,H'DF,H'01,H'84,H'00,H'00,H'02,H'44,H'70,H'EE,H'38,H'44,H'49,H'09,
             000000C30E +                       H'49,H'C4,H'45,H'E9,H'4A,H'44,H'45,H'2E,H'4A,H'44,H'44,H'C8,H'49,H'C4,H'48,H'08,
             0000C30E00 +                       H'00,H'04,H'70,H'08,H'00,H'04,H'00,H'00,H'00,H'00
             0000000000   
             00000000FF   
             FFFF000000   
             00007FFFFF   
             FC000001FC   
             3F07E1FC21   
             0421FC2104   
             21FC27DF21   
             FC255521FC   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 05-Aug-2018 14:17:19  PAGE   77


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             3F57E00404   
             51000407DF   
             0184000002   
             4470EE3844   
             490949C445   
             E94A44452E   
             4A4444C849   
             C448080004   
             7008000400   
             000000       
    000000A6 00000002               .RES.W      1
    000000A8              _shouldRequestNetInfo:           ; static: shouldRequestNetInfo
    000000A8 00000001               .DATA.L     H'00000001
C   00000000              _filename:                       ; static: filename
    00000000 005C005C00             .DATA.W     H'005C,H'005C,H'0066,H'006C,H'0073,H'0030,H'005C,H'0054,H'0045,H'0053,H'0054,H'002E,
             66006C0073 +                       H'0067,H'0031,H'0061,H'0000
             0030005C00   
             5400450053   
             0054002E00   
             6700310061   
             0000         
    00000020              L415:
    00000020 436F6E6E65             .SDATA      "Connect"
             6374         
    00000027 00                     .DATA.B     H'00
    00000028              L416:
    00000028 446973636F             .SDATA      "Disconnect"
             6E6E656374   
    00000032 00                     .DATA.B     H'00
    00000033 00000001               .RES.B      1
    00000034              L417:
    00000034 42726F7773             .SDATA      "Browse"
             65           
    0000003A 00                     .DATA.B     H'00
    0000003B 00000001               .RES.B      1
    0000003C              L418:
    0000003C 4765742062             .SDATA      "Get by ID"
             79204944     
    00000045 00                     .DATA.B     H'00
    00000046 00000002               .RES.W      1
    00000048              L420:
    00000048 4F46                   .SDATA      "OF"
    0000004A 00                     .DATA.B     H'00
    0000004B 00000001               .RES.B      1
    0000004C              L429:
    0000004C 434F4E4E45             .SDATA      "CONNECT"
             4354         
    00000053 00                     .DATA.B     H'00
    00000054              L430:
    00000054 4F4B                   .SDATA      "OK"
    00000056 00                     .DATA.B     H'00
    00000057 00000001               .RES.B      1
    00000058              L432:
    00000058 444953434F             .SDATA      "DISCONNECT"
             4E4E454354   
    00000062 00                     .DATA.B     H'00
    00000063 00000001               .RES.B      1




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 05-Aug-2018 14:17:19  PAGE   78


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000064              L462:
    00000064 4745544E45             .SDATA      "GETNETINFO"
             54494E464F   
    0000006E 00                     .DATA.B     H'00
    0000006F 00000001               .RES.B      1
    00000070              L465:
    00000070 39                     .SDATA      "9"
    00000071 00                     .DATA.B     H'00
    00000072 00000002               .RES.W      1
    00000074              L468:
    00000074 37                     .SDATA      "7"
    00000075 00                     .DATA.B     H'00
    00000076 00000002               .RES.W      1
    00000078              L469:
    00000078 38                     .SDATA      "8"
    00000079 00                     .DATA.B     H'00
    0000007A 00000002               .RES.W      1
    0000007C              L489:
    0000007C 5363616E6E             .SDATA      "Scanning"
             696E67       
    00000084 00                     .DATA.B     H'00
    00000085 00000001               .RES.B      1
    00000086 00000002               .RES.W      1
    00000088              L491:
    00000088 2E                     .SDATA      "."
    00000089 00                     .DATA.B     H'00
    0000008A 00000002               .RES.W      1
    0000008C              L507:
    0000008C 2564                   .SDATA      "%d"
    0000008E 00                     .DATA.B     H'00
    0000008F 00000001               .RES.B      1
    00000090              L508:
    00000090 5061737377             .SDATA      "Password:"
             6F72643A     
    00000099 00                     .DATA.B     H'00
    0000009A 00000002               .RES.W      1
    0000009C              L520:
    0000009C 5345415243             .SDATA      "SEARCH"
             48           
    000000A2 00                     .DATA.B     H'00
    000000A3 00000001               .RES.B      1
    000000A4              L523:
    000000A4 4B45494E20             .SDATA      "KEIN ERGEBNIS GEFUNDEN"
             4552474542   
             4E49532047   
             4546554E44   
             454E         
    000000BA 00                     .DATA.B     H'00
    000000BB 00000001               .RES.B      1
    000000BC              L563:
    000000BC 4745544150             .SDATA      "GETAPPINFO"
             50494E464F   
    000000C6 00                     .DATA.B     H'00
    000000C7 00000001               .RES.B      1
    000000C8              L573:
    000000C8 444F574E4C             .SDATA      "DOWNLOAD"
             4F4144       




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 05-Aug-2018 14:17:19  PAGE   79


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000000D0 00                     .DATA.B     H'00
    000000D1 00000001               .RES.B      1
    000000D2 00000002               .RES.W      1
    000000D4              L586:
    000000D4 446F776E6C             .SDATA      "Downloading..."
             6F6164696E   
             672E2E2E     
    000000E2 00                     .DATA.B     H'00
    000000E3 00000001               .RES.B      1
    000000E4              L587:
    000000E4 25642F2564             .SDATA      "%d/%d"
    000000E9 00                     .DATA.B     H'00
    000000EA 00000002               .RES.W      1
    000000EC              L664:
    000000EC 44415441               .SDATA      "DATA"
    000000F0 00                     .DATA.B     H'00
    000000F1 00000001               .RES.B      1
    000000F2 00000002               .RES.W      1
    000000F4              L676:
    000000F4 25303464               .SDATA      "%04d"
    000000F8 00                     .DATA.B     H'00
    000000F9 00000001               .RES.B      1
    000000FA 00000002               .RES.W      1
    000000FC              L709:
    000000FC 4552                   .SDATA      "ER"
    000000FE 00                     .DATA.B     H'00
    000000FF 00000001               .RES.B      1
    00000100              L711:
    00000100 4341                   .SDATA      "CA"
    00000102 00                     .DATA.B     H'00
B   00000000              _buf:                            ; static: buf
    00000000 000001F4               .RES.B      500
    000001F4              _status:                         ; static: status
    000001F4 00000004               .RES.B      4
    000001F8              _checkSumDebugBuffer:            ; static: checkSumDebugBuffer
    000001F8 0000000B               .RES.B      11
B_B 00000000              _BR_Size:                        ; static: BR_Size
    00000000 00000004               .RES.L      1























SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 05-Aug-2018 14:17:19  PAGE    1


******** STATISTICS INFORMATION ********


********** ERROR INFORMATION ***********

NUMBER OF ERRORS:           0
NUMBER OF WARNINGS:        19




******* SOURCE LINE INFORMATION ********

COMPILED SOURCE LINE:     1263



******* SECTION SIZE INFORMATION *******

PROGRAM  SECTION (P):                               0000173C Byte(s)
PROGRAM  SECTION (P_BR_Size):                       00000000 Byte(s)
PROGRAM  SECTION (P_TOP):                           0000000C Byte(s)
CONSTANT SECTION (C):                               00000103 Byte(s)
CONSTANT SECTION (C_BR_Size):                       00000000 Byte(s)
CONSTANT SECTION (C_TOP):                           00000000 Byte(s)
DATA     SECTION (D):                               000000AC Byte(s)
DATA     SECTION (D_BR_Size):                       00000000 Byte(s)
DATA     SECTION (D_TOP):                           00000000 Byte(s)
BSS      SECTION (B):                               00000203 Byte(s)
BSS      SECTION (B_BR_Size):                       00000004 Byte(s)
BSS      SECTION (B_TOP):                           00000000 Byte(s)

 TOTAL PROGRAM SIZE: 00001AFE Byte(s)



********** LABEL INFORMATION ***********

NUMBER OF EXTERNAL REFERENCE SYMBOLS:           51
NUMBER OF EXTERNAL DEFINITION SYMBOLS:          40
NUMBER OF INTERNAL/EXTERNAL SYMBOLS:           310






















*** COMMAND PARAMETER ***


  -subcommand=C:\Users\Max\AppData\Local\Temp\hmkFA4E.tmp 

