SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 06-Jan-2019 21:51:53  PAGE    1

************ OBJECT LISTING ************

FILE NAME: D:\Documents\GTR\Wifi\WiFi\WiFi.c

SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          WiFi.c     1    /*****************************************************************/
          WiFi.c     2    /*                                                               */
          WiFi.c     3    /*   CASIO fx-9860G SDK Library                                  */
          WiFi.c     4    /*                                                               */
          WiFi.c     5    /*   File name : [ProjectName].c                                 */
          WiFi.c     6    /*                                                               */
          WiFi.c     7    /*   Copyright (c) 2006 CASIO COMPUTER CO., LTD.                 */
          WiFi.c     8    /*                                                               */
          WiFi.c     9    /*****************************************************************/
          WiFi.c    10    #include "fxlib.h"
          WiFi.c    11    #include "stdio.h"
          WiFi.c    12    #include "..\WiFi_Lib\net.h"
          WiFi.c    13    #include "..\WiFi_Lib\status.h"
          WiFi.c    14    #include "..\WiFi_Lib\netUI.h"
          WiFi.c    15    
          WiFi.c    16    // custom types
          WiFi.c    17    
          WiFi.c    18    typedef int bool;
          WiFi.c    19    #define true 1
          WiFi.c    20    #define false 0
          WiFi.c    21    
          WiFi.c    22    struct Network {
          WiFi.c    23        bool isConnected;
          WiFi.c    24        unsigned char* ssid;
          WiFi.c    25        int rssi;
          WiFi.c    26    } network = {false, NULL, 0};
          WiFi.c    27    // prototypes
          WiFi.c    28    
          WiFi.c    29    void drawInfoBar();
          WiFi.c    30    void drawBubble(int x, int y, int filled);
          WiFi.c    31    void connectToNetwork();
          WiFi.c    32    void browseFiles();
          WiFi.c    33    void downloadFile();
          WiFi.c    34    void getAppByID();
          WiFi.c    35    void sendCommand(unsigned char*);
          WiFi.c    36    void readString(int x, int y, bool search);
          WiFi.c    37    void serialSendString(unsigned char* buffer);
          WiFi.c    38    void serialReadString(unsigned char* buffer);
          WiFi.c    39    void serialReadStringTimeout(int timeout,unsigned char* buffer);
          WiFi.c    40    char keyToChar(int key, bool shift, bool alpha);
          WiFi.c    41    int getKey();
          WiFi.c    42    void drawProgressBar(int y, float value);
          WiFi.c    43    void sendData(unsigned char* buffer, int length);
          WiFi.c    44    void checksum(unsigned char* data,int length, unsigned char* csbuffer);
          WiFi.c    45    void itoa(int integer,int len,unsigned char* data);
          WiFi.c    46    void drawBrowseResults(unsigned char* results);
          WiFi.c    47    int showAppInfo();
          WiFi.c    48    void sendAcknowledgement(unsigned char* state);
          WiFi.c    49    void drawImage();
          WiFi.c    50    
          WiFi.c    51    // syscalls
          WiFi.c    52    
          WiFi.c    53    int Serial_ReadOneByte(unsigned char *result);
          WiFi.c    54    int Serial_ReadNBytes(unsigned char *result, int max_size, short *actually_transferred);




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 06-Jan-2019 21:51:53  PAGE    2


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          WiFi.c    55    int Serial_GetReceivedBytesAvailable();
          WiFi.c    56    int Serial_ClearReceiveBuffer();
          WiFi.c    57    int Serial_BufferedTransmitOneByte(unsigned char byte_to_transmit);
          WiFi.c    58    int Serial_BufferedTransmitNBytes(unsigned char* bytes_to_transmit, int requested_count);
          WiFi.c    59    int Serial_ClearTransmitBuffer();
          WiFi.c    60    
          WiFi.c    61    int Keyboard_GetPressedKey(short* matrixcode);
          WiFi.c    62    int Keyboard_GetKeyWait(int*column, int*row, int type_of_waiting, int timeout_period, int menu, unsigned s
                         +hort*keycode );
          WiFi.c    63    int Keyboard_PRGM_GetKey( unsigned char*result );
          WiFi.c    64    int Keyboard_KeyDown();
          WiFi.c    65    void Keyboard_ClrBuffer();
          WiFi.c    66    
          WiFi.c    67    int App_RegisterAddins();
          WiFi.c    68    
          WiFi.c    69    int RTC_GetTicks();
          WiFi.c    70    int RTC_Elapsed_ms( int start_value, int duration_in_ms );
          WiFi.c    71    
          WiFi.c    72    int isAnyKeyPressed();
          WiFi.c    73    
          WiFi.c    74    int PRGM_GetKey();
          WiFi.c    75    
          WiFi.c    76    // structs
          WiFi.c    77    //Network network = {false, NULL, 0};
          WiFi.c    78    
          WiFi.c    79    unsigned char arrowRight[3] = {0xE6, 0x9B, 0};
          WiFi.c    80    unsigned char loupe[3]={0xE6,0x50,0};
          WiFi.c    81    unsigned char buf[500];
          WiFi.c    82    unsigned char status[4];
          WiFi.c    83    
          WiFi.c    84    unsigned char checkSumDebug[10]={'A','0','z','6','2','p','e','n','i','S'};
          WiFi.c    85    unsigned char checkSumDebugBuffer[11];
          WiFi.c    86    
          WiFi.c    87    unsigned char testPicture[138]={0x42,0x4d,0x8a,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x3e,0x00,0x00,0x00,0x28
                         +,0x00,0x00,0x00,0x1e,0x00,0x00,0x00,0x13,0x00,0x00,0x00,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x4c,0x00,
                         +0x00,0x00,0xc3,0x0e,0x00,0x00,0xc3,0x0e,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0xff,0
                         +x00,0x00,0x00,0x00,0x00,0x7f,0xff,0xff,0xfc,0x00,0x00,0x01,0xfc,0x3f,0x07,0xe1,0xfc,0x21,0x04,0x21,0xfc,0x
                         +21,0x04,0x21,0xfc,0x27,0xdf,0x21,0xfc,0x25,0x55,0x21,0xfc,0x3f,0x57,0xe0,0x04,0x04,0x51,0x00,0x04,0x07,0xd
                         +f,0x01,0x84,0x00,0x00,0x02,0x44,0x70,0xee,0x38,0x44,0x49,0x09,0x49,0xc4,0x45,0xe9,0x4a,0x44,0x45,0x2e,0x4a
                         +,0x44,0x44,0xc8,0x49,0xc4,0x48,0x08,0x00,0x04,0x70,0x08,0x00,0x04,0x00,0x00,0x00,0x00};
          WiFi.c    88    
          WiFi.c    89    bool shouldRequestNetInfo = true;
          WiFi.c    90    
          WiFi.c    91    const FONTCHARACTER filename[] = {'\\','\\','f','l','s','0','\\','T','E','S','T','.','g','1','a',0};
          WiFi.c    92    //****************************************************************************
          WiFi.c    93    //  AddIn_main (Sample program main function)
          WiFi.c    94    //
          WiFi.c    95    //  param   :   isAppli   : 1 = This application is launched by MAIN MENU.
          WiFi.c    96    //                        : 0 = This application is launched by a strip in eACT application.
          WiFi.c    97    //
          WiFi.c    98    //              OptionNum : Strip number (0~3)
          WiFi.c    99    //                         (This parameter is only used when isAppli parameter is 0.)
          WiFi.c   100    //
          WiFi.c   101    //  retval  :   1 = No error / 0 = Error
          WiFi.c   102    //
          WiFi.c   103    //****************************************************************************
          WiFi.c   104    int AddIn_main(int isAppli, unsigned short OptionNum)




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 06-Jan-2019 21:51:53  PAGE    3


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

P   00000000              _AddIn_main:                     ; function: AddIn_main
                                                           ; frame size=56
    00000000 DE27                   MOV.L       L917,R14   ; _Keyboard_KeyDown
    00000002 7FD8                   ADD         #-40,R15
          WiFi.c   105    {
          WiFi.c   106        unsigned int key;
          WiFi.c   107        int selection = 0, lastTicks, lastKeyTicks;
    00000004 EB00                   MOV         #0,R11
    00000006 6CB3                   MOV         R11,R12
          WiFi.c   108        int col, row;
          WiFi.c   109        unsigned short keycode;
          WiFi.c   110        bool menu = false;
          WiFi.c   111        DISPBOX dispBox;
          WiFi.c   112    
          WiFi.c   113        while(Keyboard_KeyDown()) {
    00000008              L761:                             
    00000008 4E0B                   JSR         @R14
    0000000A 0009                   NOP
    0000000C 2008                   TST         R0,R0
    0000000E 8BFB                   BF          L761
          WiFi.c   114        }
          WiFi.c   115    
          WiFi.c   116        Bdisp_AllClr_DDVRAM();
    00000010 D324                   MOV.L       L917+4,R3  ; _Bdisp_AllClr_DDVRAM
    00000012 430B                   JSR         @R3
    00000014 0009                   NOP
    00000016 DE24                   MOV.L       L917+8,R14 ; _GetKey
          WiFi.c   117    
          WiFi.c   118    
          WiFi.c   119        while(true) {
    00000018              L764:                             
          WiFi.c   120            //GetKey(&key);
          WiFi.c   121            //sprintf(buf, "Key: %d", key);
          WiFi.c   122            //locate(2, 2);
          WiFi.c   123            //Bdisp_AllClr_DDVRAM();
          WiFi.c   124            //Print(buf);
          WiFi.c   125                    drawImage();
    00000018 D324                   MOV.L       L917+12,R3 ; _drawImage
    0000001A 430B                   JSR         @R3
    0000001C 0009                   NOP
          WiFi.c   126                    GetKey(&key);
    0000001E 64F3                   MOV         R15,R4
    00000020 4E0B                   JSR         @R14
    00000022 740C                   ADD         #12,R4
    00000024 AFF8                   BRA         L764
    00000026 0009                   NOP
    00000028              L766:                             
          WiFi.c   127        }
          WiFi.c   128    
          WiFi.c   129    
          WiFi.c   130        openSerial();
          WiFi.c   131        Serial_ClearReceiveBuffer();
          WiFi.c   132        Serial_ClearTransmitBuffer();
          WiFi.c   133    
          WiFi.c   134        drawInfoBar();
          WiFi.c   135        lastTicks = RTC_GetTicks();
          WiFi.c   136    




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 06-Jan-2019 21:51:53  PAGE    4


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          WiFi.c   137        while(1) {
          WiFi.c   138            int line;
          WiFi.c   139                    
          WiFi.c   140            dispBox.left = 0;
    00000028 1FB6                   MOV.L       R11,@(24,R15)
          WiFi.c   141            dispBox.top = 7;
    0000002A E307                   MOV         #7,R3
    0000002C 1F37                   MOV.L       R3,@(28,R15)
          WiFi.c   142            dispBox.right = 127;
    0000002E E27F                   MOV         #127,R2
    00000030 1F28                   MOV.L       R2,@(32,R15)
          WiFi.c   143            dispBox.bottom = 63;
    00000032 E33F                   MOV         #63,R3
    00000034 1F39                   MOV.L       R3,@(36,R15)
          WiFi.c   144    
          WiFi.c   145            Bdisp_AreaClr_VRAM(&dispBox);
    00000036 64F3                   MOV         R15,R4
    00000038 D31D                   MOV.L       L917+16,R3 ; _Bdisp_AreaClr_VRAM
    0000003A 430B                   JSR         @R3
    0000003C 7418                   ADD         #24,R4
          WiFi.c   146                    
          WiFi.c   147                    memset(checkSumDebugBuffer,0,11);
    0000003E E60B                   MOV         #11,R6
    00000040 D41C                   MOV.L       L917+20,R4 ; _checkSumDebugBuffer
    00000042 D21D                   MOV.L       L917+24,R2 ; _memset
    00000044 420B                   JSR         @R2
    00000046 E500                   MOV         #0,R5
          WiFi.c   148                    checksum(checkSumDebug,10,checkSumDebugBuffer);
    00000048 D61A                   MOV.L       L917+20,R6 ; _checkSumDebugBuffer
    0000004A D41C                   MOV.L       L917+28,R4 ; _checkSumDebug
    0000004C D31C                   MOV.L       L917+32,R3 ; _checksum
    0000004E 430B                   JSR         @R3
    00000050 E50A                   MOV         #10,R5
          WiFi.c   149                    locate(1,7);
    00000052 E507                   MOV         #7,R5
    00000054 4E0B                   JSR         @R14
    00000056 E401                   MOV         #1,R4
          WiFi.c   150                    Print(checkSumDebugBuffer);
    00000058 D416                   MOV.L       L917+20,R4 ; _checkSumDebugBuffer
    0000005A 4D0B                   JSR         @R13
    0000005C 0009                   NOP
          WiFi.c   151           
          WiFi.c   152            for (line = 0; line < 4; line = line + 1) {
    0000005E 6AB3                   MOV         R11,R10
    00000060              L768:                             
          WiFi.c   153                int x = 3;
          WiFi.c   154                if (line == selection) {
    00000060 3AC0                   CMP/EQ      R12,R10
    00000062 8F01                   BF/S        L769
    00000064 6493                   MOV         R9,R4
          WiFi.c   155                    x = x + 1;
    00000066 6483                   MOV         R8,R4
    00000068              L769:                             
    00000068 65A3                   MOV         R10,R5
    0000006A 60A3                   MOV         R10,R0
    0000006C 8800                   CMP/EQ      #0,R0
    0000006E 8D08                   BT/S        L706




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 06-Jan-2019 21:51:53  PAGE    5


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000070 7503                   ADD         #3,R5
    00000072 8801                   CMP/EQ      #1,R0
    00000074 890A                   BT          L708
    00000076 8802                   CMP/EQ      #2,R0
    00000078 890D                   BT          L710
    0000007A 8803                   CMP/EQ      #3,R0
    0000007C 8928                   BT          L712
    0000007E A02C                   BRA         L770
    00000080 0009                   NOP
    00000082              L706:                            ; case label 
          WiFi.c   156                }
          WiFi.c   157    
          WiFi.c   158                switch(line) {
          WiFi.c   159                    case 0:
          WiFi.c   160                        locate(x, 3 + line);
    00000082 4E0B                   JSR         @R14
    00000084 0009                   NOP
          WiFi.c   161                        Print((unsigned char*) "Connect");
    00000086 D40F                   MOV.L       L917+36,R4 ; L439
          WiFi.c   162                        break;
    00000088 A025                   BRA         L915
    0000008A 0009                   NOP
    0000008C              L708:                            ; case label 
          WiFi.c   163                    case 1:
          WiFi.c   164                        locate(x, 3 + line);
    0000008C 4E0B                   JSR         @R14
    0000008E 0009                   NOP
          WiFi.c   165                        Print((unsigned char*) "Disconnect");
    00000090 D40D                   MOV.L       L917+40,R4 ; L440
          WiFi.c   166                        break;
    00000092 A020                   BRA         L915
    00000094 0009                   NOP
    00000096              L710:                            ; case label 
          WiFi.c   167                    case 2:
          WiFi.c   168                        locate(x, 3 + line);
    00000096 4E0B                   JSR         @R14
    00000098 0009                   NOP
          WiFi.c   169                        Print((unsigned char*) "Browse");
    0000009A D40C                   MOV.L       L917+44,R4 ; L441
          WiFi.c   170                        break;
    0000009C A01B                   BRA         L915
    0000009E 0009                   NOP
    000000A0              L917:                             
    000000A0 <00000000>             .DATA.L     _Keyboard_KeyDown
    000000A4 <00000000>             .DATA.L     _Bdisp_AllClr_DDVRAM
    000000A8 <00000000>             .DATA.L     _GetKey
    000000AC <00000000>             .DATA.L     _drawImage
    000000B0 <00000000>             .DATA.L     _Bdisp_AreaClr_VRAM
    000000B4 <00000000>             .DATA.L     _checkSumDebugBuffer
    000000B8 <00000000>             .DATA.L     _memset
    000000BC <00000000>             .DATA.L     _checkSumDebug
    000000C0 <00000000>             .DATA.L     _checksum
    000000C4 <00000000>             .DATA.L     L439
    000000C8 <00000000>             .DATA.L     L440
    000000CC <00000000>             .DATA.L     L441
    000000D0              L712:                            ; case label 
          WiFi.c   171                     case 3:




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 06-Jan-2019 21:51:53  PAGE    6


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          WiFi.c   172                        locate(x, 3 + line);
    000000D0 4E0B                   JSR         @R14
    000000D2 0009                   NOP
          WiFi.c   173                        Print((unsigned char*) "Get by ID");
    000000D4 D43B                   MOV.L       L918+6,R4  ; L442
          WiFi.c   174                        break;
    000000D6              L915:                             
    000000D6 4D0B                   JSR         @R13
    000000D8 0009                   NOP
    000000DA              L770:                             
    000000DA 7A01                   ADD         #1,R10
    000000DC 3A83                   CMP/GE      R8,R10
    000000DE 8BBF                   BF          L768
          WiFi.c   175                }
          WiFi.c   176            }
          WiFi.c   177    
          WiFi.c   178            locate(2, 3 + selection);
    000000E0 65C3                   MOV         R12,R5
    000000E2 7503                   ADD         #3,R5
    000000E4 4E0B                   JSR         @R14
    000000E6 E402                   MOV         #2,R4
          WiFi.c   179            Print(arrowRight);        
    000000E8 D437                   MOV.L       L918+10,R4 ; _arrowRight
    000000EA 4D0B                   JSR         @R13
    000000EC 0009                   NOP
          WiFi.c   180    
          WiFi.c   181            receiveStatusTimeout(20);
    000000EE D237                   MOV.L       L918+14,R2 ; _receiveStatusTimeout
    000000F0 420B                   JSR         @R2
    000000F2 E414                   MOV         #20,R4
          WiFi.c   182            if(memcmp(status,"OF",2)==0){
    000000F4 D536                   MOV.L       L918+18,R5 ; L444
    000000F6 D437                   MOV.L       L918+22,R4 ; _status
    000000F8 D337                   MOV.L       L918+26,R3 ; _memcmp
    000000FA 430B                   JSR         @R3
    000000FC E602                   MOV         #2,R6
    000000FE 2008                   TST         R0,R0
    00000100 8B02                   BF          L771
          WiFi.c   183                shouldRequestNetInfo=true;
    00000102 E301                   MOV         #1,R3
    00000104 D235                   MOV.L       L918+30,R2 ; _shouldRequestNetInfo
    00000106 2232                   MOV.L       R3,@R2
    00000108              L771:                             
          WiFi.c   184            }
          WiFi.c   185                  
          WiFi.c   186            if (RTC_Elapsed_ms(lastTicks, 2500) && shouldRequestNetInfo) {
    00000108 9559                   MOV.W       L918,R5    ; H'09C4
    0000010A D335                   MOV.L       L918+34,R3 ; _RTC_Elapsed_ms
    0000010C 430B                   JSR         @R3
    0000010E 54F5                   MOV.L       @(20,R15),R4
    00000110 2008                   TST         R0,R0
    00000112 890D                   BT          L772
    00000114 D231                   MOV.L       L918+30,R2 ; _shouldRequestNetInfo
    00000116 6322                   MOV.L       @R2,R3
    00000118 2338                   TST         R3,R3
    0000011A 8909                   BT          L772
          WiFi.c   187                




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 06-Jan-2019 21:51:53  PAGE    7


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          WiFi.c   188                getNetworkInfo();
    0000011C D331                   MOV.L       L918+38,R3 ; _getNetworkInfo
    0000011E 7FF4                   ADD         #-12,R15
    00000120 430B                   JSR         @R3
    00000122 2FF6                   MOV.L       R15,@-R15
          WiFi.c   189                drawInfoBar();
    00000124 B0B4                   BSR         _drawInfoBar
    00000126 7F10                   ADD         #16,R15
          WiFi.c   190                lastTicks = RTC_GetTicks();
    00000128 D32F                   MOV.L       L918+42,R3 ; _RTC_GetTicks
    0000012A 430B                   JSR         @R3
    0000012C 0009                   NOP
    0000012E 1F05                   MOV.L       R0,@(20,R15)
    00000130              L772:                             
          WiFi.c   191            }
          WiFi.c   192    
          WiFi.c   193    
          WiFi.c   194            Bdisp_PutDisp_DD();
    00000130 D32E                   MOV.L       L918+46,R3 ; _Bdisp_PutDisp_DD
    00000132 430B                   JSR         @R3
    00000134 0009                   NOP
          WiFi.c   195                    
          WiFi.c   196            if (RTC_Elapsed_ms(lastKeyTicks, 200) && Keyboard_GetKeyWait(&col, &row, 1, 0, 0, &keycode)) {
    00000136 9543                   MOV.W       L918+2,R5  ; H'00C8
    00000138 D329                   MOV.L       L918+34,R3 ; _RTC_Elapsed_ms
    0000013A 430B                   JSR         @R3
    0000013C 54F4                   MOV.L       @(16,R15),R4
    0000013E 2008                   TST         R0,R0
    00000140 8B01                   BF          L919
    00000142 A0A0                   BRA         L773
    00000144 0009                   NOP
    00000146              L919:                             
    00000146 63F3                   MOV         R15,R3
    00000148 7308                   ADD         #8,R3
    0000014A E200                   MOV         #0,R2
    0000014C 2F36                   MOV.L       R3,@-R15
    0000014E E601                   MOV         #1,R6
    00000150 2F26                   MOV.L       R2,@-R15
    00000152 6723                   MOV         R2,R7
    00000154 D326                   MOV.L       L918+50,R3 ; _Keyboard_GetKeyWait
    00000156 65F3                   MOV         R15,R5
    00000158 750C                   ADD         #12,R5
    0000015A 64F3                   MOV         R15,R4
    0000015C 430B                   JSR         @R3
    0000015E 7408                   ADD         #8,R4
    00000160 2008                   TST         R0,R0
    00000162 8F02                   BF/S        L920
    00000164 7F08                   ADD         #8,R15
    00000166 A08E                   BRA         L773
    00000168 0009                   NOP
    0000016A              L920:                             
          WiFi.c   197                if (col == 4 && row == 9) { // MENU key was pressed
    0000016A 60F2                   MOV.L       @R15,R0
    0000016C 8804                   CMP/EQ      #4,R0
    0000016E 8B16                   BF          L774
    00000170 50F1                   MOV.L       @(4,R15),R0
    00000172 8809                   CMP/EQ      #9,R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 06-Jan-2019 21:51:53  PAGE    8


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000174 8B13                   BF          L774
          WiFi.c   198                    Serial_Close(1);
    00000176 D21F                   MOV.L       L918+54,R2 ; _Serial_Close
    00000178 420B                   JSR         @R2
    0000017A E401                   MOV         #1,R4
          WiFi.c   199                    Keyboard_GetKeyWait(&col, &row, 0, 0, 0, &keycode);
    0000017C D21C                   MOV.L       L918+50,R2 ; _Keyboard_GetKeyWait
    0000017E 63F3                   MOV         R15,R3
    00000180 7308                   ADD         #8,R3
    00000182 E700                   MOV         #0,R7
    00000184 2F36                   MOV.L       R3,@-R15
    00000186 6673                   MOV         R7,R6
    00000188 2FB6                   MOV.L       R11,@-R15
    0000018A 65F3                   MOV         R15,R5
    0000018C 750C                   ADD         #12,R5
    0000018E 64F3                   MOV         R15,R4
    00000190 420B                   JSR         @R2
    00000192 7408                   ADD         #8,R4
          WiFi.c   200                    openSerial();
    00000194 D318                   MOV.L       L918+58,R3 ; _openSerial
    00000196 430B                   JSR         @R3
    00000198 7F08                   ADD         #8,R15
    0000019A A069                   BRA         L775
    0000019C 0009                   NOP
    0000019E              L774:                             
          WiFi.c   201                } else if (col == 2 && row == 9) {
    0000019E 60F2                   MOV.L       @R15,R0
    000001A0 8802                   CMP/EQ      #2,R0
    000001A2 8B04                   BF          L776
    000001A4 50F1                   MOV.L       @(4,R15),R0
    000001A6 8809                   CMP/EQ      #9,R0
    000001A8 8B01                   BF          L776
          WiFi.c   202                    selection = selection - 1;
    000001AA A061                   BRA         L775
    000001AC 7CFF                   ADD         #-1,R12
    000001AE              L776:                             
          WiFi.c   203                } else if (col == 3 && row == 8) {
    000001AE 60F2                   MOV.L       @R15,R0
    000001B0 8803                   CMP/EQ      #3,R0
    000001B2 8B5D                   BF          L775
    000001B4 50F1                   MOV.L       @(4,R15),R0
    000001B6 8808                   CMP/EQ      #8,R0
    000001B8 8B20                   BF          L778
          WiFi.c   204                    selection = selection + 1;
    000001BA A059                   BRA         L775
    000001BC 7C01                   ADD         #1,R12
    000001BE              L918:                             
    000001BE 09C4                   .DATA.W     H'09C4
    000001C0 00C8                   .DATA.W     H'00C8
    000001C2 0000                   .DATA.W     0
    000001C4 <00000000>             .DATA.L     L442
    000001C8 <00000000>             .DATA.L     _arrowRight
    000001CC <00000000>             .DATA.L     _receiveStatusTimeout
    000001D0 <00000000>             .DATA.L     L444
    000001D4 <00000000>             .DATA.L     _status
    000001D8 <00000000>             .DATA.L     _memcmp
    000001DC <00000000>             .DATA.L     _shouldRequestNetInfo




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 06-Jan-2019 21:51:53  PAGE    9


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000001E0 <00000000>             .DATA.L     _RTC_Elapsed_ms
    000001E4 <00000000>             .DATA.L     _getNetworkInfo
    000001E8 <00000000>             .DATA.L     _RTC_GetTicks
    000001EC <00000000>             .DATA.L     _Bdisp_PutDisp_DD
    000001F0 <00000000>             .DATA.L     _Keyboard_GetKeyWait
    000001F4 <00000000>             .DATA.L     _Serial_Close
    000001F8 <00000000>             .DATA.L     _openSerial
    000001FC              L778:                             
          WiFi.c   205                } else if (col == 3 && row == 2) {
    000001FC 60F2                   MOV.L       @R15,R0
    000001FE 8803                   CMP/EQ      #3,R0
    00000200 8B36                   BF          L775
    00000202 50F1                   MOV.L       @(4,R15),R0
    00000204 8802                   CMP/EQ      #2,R0
    00000206 8B33                   BF          L775
          WiFi.c   206                    switch (selection) {
    00000208 60C3                   MOV         R12,R0
    0000020A 8800                   CMP/EQ      #0,R0
    0000020C 8907                   BT          L715
    0000020E 8801                   CMP/EQ      #1,R0
    00000210 8915                   BT          L717
    00000212 8802                   CMP/EQ      #2,R0
    00000214 8926                   BT          L720
    00000216 8803                   CMP/EQ      #3,R0
    00000218 8928                   BT          L721
    0000021A A029                   BRA         L775
    0000021C 0009                   NOP
    0000021E              L715:                            ; case label 
          WiFi.c   207                        case 0:
          WiFi.c   208                                                    Bdisp_AllClr_DDVRAM();
    0000021E D287                   MOV.L       L921+2,R2  ; _Bdisp_AllClr_DDVRAM
    00000220 420B                   JSR         @R2
    00000222 0009                   NOP
          WiFi.c   209                                                    locate(1, 1);
    00000224 E501                   MOV         #1,R5
    00000226 4E0B                   JSR         @R14
    00000228 6453                   MOV         R5,R4
          WiFi.c   210                                                    Print((unsigned char*) "Scanning...");
    0000022A D485                   MOV.L       L921+6,R4  ; L453
    0000022C 4D0B                   JSR         @R13
    0000022E 0009                   NOP
          WiFi.c   211                                                    Bdisp_PutDisp_DD();
    00000230 D384                   MOV.L       L921+10,R3 ; _Bdisp_PutDisp_DD
    00000232 430B                   JSR         @R3
    00000234 0009                   NOP
          WiFi.c   212                                                    connectToNetwork();         
    00000236 B139                   BSR         _connectToNetwork
    00000238 0009                   NOP
          WiFi.c   213                            break;
    0000023A A019                   BRA         L775
    0000023C 0009                   NOP
    0000023E              L717:                            ; case label 
          WiFi.c   214                        case 1:
          WiFi.c   215                            sendCommand("DISCONNECT");
    0000023E D482                   MOV.L       L921+14,R4 ; L454
    00000240 B4D1                   BSR         _sendCommand
    00000242 0009                   NOP




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 06-Jan-2019 21:51:53  PAGE   10


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          WiFi.c   216                            receiveStatus();
    00000244 D381                   MOV.L       L921+18,R3 ; _receiveStatus
    00000246 430B                   JSR         @R3
    00000248 0009                   NOP
          WiFi.c   217                                                    
          WiFi.c   218                            if (memcmp(status,"OK",2)==0){
    0000024A D581                   MOV.L       L921+22,R5 ; L455
    0000024C D481                   MOV.L       L921+26,R4 ; _status
    0000024E D282                   MOV.L       L921+30,R2 ; _memcmp
    00000250 420B                   JSR         @R2
    00000252 E602                   MOV         #2,R6
    00000254 2008                   TST         R0,R0
    00000256 8B0B                   BF          L775
          WiFi.c   219                                disconnect();
    00000258 D280                   MOV.L       L921+34,R2 ; _disconnect
    0000025A 420B                   JSR         @R2
    0000025C 0009                   NOP
          WiFi.c   220                                                            shouldRequestNetInfo = false;
    0000025E D380                   MOV.L       L921+38,R3 ; _shouldRequestNetInfo
          WiFi.c   221                            }
          WiFi.c   222                            break;
    00000260 A006                   BRA         L775
    00000262 23B2                   MOV.L       R11,@R3
    00000264              L720:                            ; case label 
          WiFi.c   223                        case 2:
          WiFi.c   224                            browseFiles();            
    00000264 B20E                   BSR         _browseFiles
    00000266 0009                   NOP
          WiFi.c   225                            break;
    00000268 A002                   BRA         L775
    0000026A 0009                   NOP
    0000026C              L721:                            ; case label 
          WiFi.c   226                        case 3:
          WiFi.c   227                            getAppByID();
    0000026C B4B9                   BSR         _getAppByID
    0000026E 0009                   NOP
          WiFi.c   228                            break;
    00000270              L775:                             
          WiFi.c   229                    }
          WiFi.c   230                }
          WiFi.c   231    
          WiFi.c   232                if (selection < 0) {
    00000270 4C11                   CMP/PZ      R12
    00000272 8901                   BT          L783
          WiFi.c   233                    selection = 3;
    00000274 A003                   BRA         L784
    00000276 6C93                   MOV         R9,R12
    00000278              L783:                             
          WiFi.c   234                } else if (selection > 3) {
    00000278 3C97                   CMP/GT      R9,R12
    0000027A 8B00                   BF          L784
          WiFi.c   235                    selection = 0;
    0000027C 6CB3                   MOV         R11,R12
    0000027E              L784:                             
          WiFi.c   236                }
          WiFi.c   237    
          WiFi.c   238                lastKeyTicks = RTC_GetTicks();




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 06-Jan-2019 21:51:53  PAGE   11


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000027E D279                   MOV.L       L921+42,R2 ; _RTC_GetTicks
    00000280 420B                   JSR         @R2
    00000282 0009                   NOP
    00000284 1F04                   MOV.L       R0,@(16,R15)
    00000286              L773:                             
          WiFi.c   239            }
          WiFi.c   240    
          WiFi.c   241            Keyboard_ClrBuffer(); // clear the buffer to prevent strange behaviour when hitting the menu key
    00000286 D378                   MOV.L       L921+46,R3 ; _Keyboard_ClrBuffer
    00000288 430B                   JSR         @R3
    0000028A 0009                   NOP
    0000028C AECC                   BRA         L766
    0000028E 0009                   NOP
          WiFi.c   242        }
          WiFi.c   243    
          WiFi.c   244            closeSerial();
          WiFi.c   245    
          WiFi.c   246        return 1;
          WiFi.c   247    }
          WiFi.c   248    
          WiFi.c   249    void drawInfoBar() { //überarbeitet
    00000290              _drawInfoBar:                    ; function: drawInfoBar
                                                           ; frame size=84
                                                           ; used runtime library name:
                                                           ; __modls, __addd, __muld, __dtoi, __itod
    00000290 2FE6                   MOV.L       R14,@-R15
    00000292 2FD6                   MOV.L       R13,@-R15
    00000294 2FC6                   MOV.L       R12,@-R15
          WiFi.c   250        int x, y, bubble, key;
          WiFi.c   251        DISPBOX dispBox;
          WiFi.c   252    
          WiFi.c   253        dispBox.left = 0;
          WiFi.c   254        dispBox.top = 0;
          WiFi.c   255        dispBox.right = 127;
    00000296 EC7F                   MOV         #127,R12
          WiFi.c   256        dispBox.bottom = 6;
          WiFi.c   257    
          WiFi.c   258        Bdisp_AreaClr_VRAM(&dispBox);
    00000298 D374                   MOV.L       L921+50,R3 ; _Bdisp_AreaClr_VRAM
    0000029A 2FB6                   MOV.L       R11,@-R15
    0000029C 2FA6                   MOV.L       R10,@-R15
    0000029E EB00                   MOV         #0,R11
    000002A0 2F96                   MOV.L       R9,@-R15
    000002A2 EA06                   MOV         #6,R10
    000002A4 2F86                   MOV.L       R8,@-R15
    000002A6 4F22                   STS.L       PR,@-R15
    000002A8 7FF0                   ADD         #-16,R15
    000002AA 2FB2                   MOV.L       R11,@R15
    000002AC 1FB1                   MOV.L       R11,@(4,R15)
    000002AE 1FC2                   MOV.L       R12,@(8,R15)
    000002B0 1FA3                   MOV.L       R10,@(12,R15)
    000002B2 430B                   JSR         @R3
    000002B4 64F3                   MOV         R15,R4
          WiFi.c   259    
          WiFi.c   260        for (y = 0; y < 7; y = y + 1) {
    000002B6 E903                   MOV         #3,R9
    000002B8 D86D                   MOV.L       L921+54,R8 ; _Bdisp_SetPoint_VRAM




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 06-Jan-2019 21:51:53  PAGE   12


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000002BA 6DB3                   MOV         R11,R13
    000002BC              L787:                             
          WiFi.c   261            for (x = 2 - ((y + 2) % 3); x < 127; x = x + 3) {
    000002BC D36D                   MOV.L       L921+58,R3 ; __modls
    000002BE 61D3                   MOV         R13,R1
    000002C0 7102                   ADD         #2,R1
    000002C2 430B                   JSR         @R3
    000002C4 6093                   MOV         R9,R0
    000002C6 EE02                   MOV         #2,R14
    000002C8 3E08                   SUB         R0,R14
    000002CA 3EC3                   CMP/GE      R12,R14
    000002CC 8906                   BT          L788
    000002CE              L789:                             
          WiFi.c   262                Bdisp_SetPoint_VRAM(x, y, 1);
    000002CE E601                   MOV         #1,R6
    000002D0 65D3                   MOV         R13,R5
    000002D2 480B                   JSR         @R8
    000002D4 64E3                   MOV         R14,R4
    000002D6 7E03                   ADD         #3,R14
    000002D8 3EC3                   CMP/GE      R12,R14
    000002DA 8BF8                   BF          L789
    000002DC              L788:                             
    000002DC 7D01                   ADD         #1,R13
    000002DE E207                   MOV         #7,R2
    000002E0 3D23                   CMP/GE      R2,R13
    000002E2 8BEB                   BF          L787
          WiFi.c   263            }
          WiFi.c   264        }
          WiFi.c   265    
          WiFi.c   266        if (network.isConnected) {
    000002E4 DE64                   MOV.L       L921+62,R14; _network
    000002E6 62E2                   MOV.L       @R14,R2
    000002E8 2228                   TST         R2,R2
    000002EA 894E                   BT          L790
          WiFi.c   267            int bubbleCount = (int) (12.0 / 100.0 * (network.rssi + 100.0));
    000002EC 50E2                   MOV.L       @(8,R14),R0
    000002EE 7FE8                   ADD         #-24,R15
    000002F0 D362                   MOV.L       L921+66,R3 ; __itod
    000002F2 430B                   JSR         @R3
    000002F4 2FF6                   MOV.L       R15,@-R15
    000002F6 E200                   MOV         #0,R2
    000002F8 D162                   MOV.L       L921+74,R1 ; __addd
    000002FA 2F26                   MOV.L       R2,@-R15
    000002FC D260                   MOV.L       L921+70,R2 ; H'40590000
    000002FE 2F26                   MOV.L       R2,@-R15
    00000300 63F3                   MOV         R15,R3
    00000302 7310                   ADD         #16,R3
    00000304 410B                   JSR         @R1
    00000306 2F36                   MOV.L       R3,@-R15
    00000308 D25F                   MOV.L       L921+78,R2 ; H'EB851EB8
    0000030A 2F26                   MOV.L       R2,@-R15
    0000030C D25F                   MOV.L       L921+82,R2 ; H'3FBEB851
    0000030E 2F26                   MOV.L       R2,@-R15
    00000310 D15F                   MOV.L       L921+86,R1 ; __muld
    00000312 63F3                   MOV         R15,R3
    00000314 7310                   ADD         #16,R3
    00000316 410B                   JSR         @R1




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 06-Jan-2019 21:51:53  PAGE   13


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000318 2F36                   MOV.L       R3,@-R15
    0000031A D25E                   MOV.L       L921+90,R2 ; __dtoi
    0000031C 420B                   JSR         @R2
    0000031E 0009                   NOP
          WiFi.c   268    
          WiFi.c   269            dispBox.left = 6;
    00000320 2FA2                   MOV.L       R10,@R15
    00000322 6D03                   MOV         R0,R13
          WiFi.c   270            dispBox.top = 0;
          WiFi.c   271            dispBox.right = dispBox.left + 6 * strlen(network.ssid);
    00000324 D35C                   MOV.L       L921+94,R3 ; _strlen
    00000326 1FB1                   MOV.L       R11,@(4,R15)
    00000328 430B                   JSR         @R3
    0000032A 54E1                   MOV.L       @(4,R14),R4
    0000032C 63F2                   MOV.L       @R15,R3
    0000032E 6203                   MOV         R0,R2
    00000330 4000                   SHLL        R0
    00000332 4208                   SHLL2       R2
    00000334 302C                   ADD         R2,R0
    00000336 303C                   ADD         R3,R0
    00000338 1F02                   MOV.L       R0,@(8,R15)
          WiFi.c   272            dispBox.bottom = 6;
    0000033A 1FA3                   MOV.L       R10,@(12,R15)
          WiFi.c   273            Bdisp_AreaClr_VRAM(&dispBox);
    0000033C D34B                   MOV.L       L921+50,R3 ; _Bdisp_AreaClr_VRAM
    0000033E 430B                   JSR         @R3
    00000340 64F3                   MOV         R15,R4
          WiFi.c   274    
          WiFi.c   275            locate(2, 1);
    00000342 E501                   MOV         #1,R5
    00000344 D255                   MOV.L       L921+98,R2 ; _locate
    00000346 420B                   JSR         @R2
    00000348 E402                   MOV         #2,R4
          WiFi.c   276            Print(network.ssid);
    0000034A D355                   MOV.L       L921+102,R3; _Print
    0000034C 430B                   JSR         @R3
    0000034E 54E1                   MOV.L       @(4,R14),R4
          WiFi.c   277    
          WiFi.c   278            dispBox.left = 90;
    00000350 E25A                   MOV         #90,R2
    00000352 2F22                   MOV.L       R2,@R15
          WiFi.c   279            dispBox.top = 0;
    00000354 1FB1                   MOV.L       R11,@(4,R15)
          WiFi.c   280            dispBox.right = dispBox.left + 30;
    00000356 63F2                   MOV.L       @R15,R3
    00000358 731E                   ADD         #30,R3
    0000035A 1F32                   MOV.L       R3,@(8,R15)
          WiFi.c   281            dispBox.bottom = 6;
    0000035C 1FA3                   MOV.L       R10,@(12,R15)
          WiFi.c   282            Bdisp_AreaClr_VRAM(&dispBox);
    0000035E D343                   MOV.L       L921+50,R3 ; _Bdisp_AreaClr_VRAM
    00000360 430B                   JSR         @R3
    00000362 64F3                   MOV         R15,R4
          WiFi.c   283    
          WiFi.c   284            for (bubble = 0; bubble < 5; bubble = bubble + 1) {
    00000364 E905                   MOV         #5,R9
    00000366 6EB3                   MOV         R11,R14




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 06-Jan-2019 21:51:53  PAGE   14


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000368              L791:                             
          WiFi.c   285                int filled = (bubble < bubbleCount);
          WiFi.c   286                drawBubble(bubble * 6 + dispBox.left + 1, 1, filled);
    00000368 62F2                   MOV.L       @R15,R2
    0000036A 3ED3                   CMP/GE      R13,R14
    0000036C 0629                   MOVT        R6
    0000036E 76FF                   ADD         #-1,R6
    00000370 666B                   NEG         R6,R6
    00000372 E501                   MOV         #1,R5
    00000374 64E3                   MOV         R14,R4
    00000376 63E3                   MOV         R14,R3
    00000378 4400                   SHLL        R4
    0000037A 4308                   SHLL2       R3
    0000037C 343C                   ADD         R3,R4
    0000037E 342C                   ADD         R2,R4
    00000380 B014                   BSR         _drawBubble
    00000382 7401                   ADD         #1,R4
    00000384 7E01                   ADD         #1,R14
    00000386 3E93                   CMP/GE      R9,R14
    00000388 8BEE                   BF          L791
    0000038A              L790:                             
          WiFi.c   287            }
          WiFi.c   288        }
          WiFi.c   289    
          WiFi.c   290        dispBox.left = 0;
    0000038A 2FB2                   MOV.L       R11,@R15
          WiFi.c   291        dispBox.top = 0;
    0000038C 1FB1                   MOV.L       R11,@(4,R15)
          WiFi.c   292        dispBox.right = 127;
    0000038E 1FC2                   MOV.L       R12,@(8,R15)
          WiFi.c   293        dispBox.bottom = 6;
    00000390 1FA3                   MOV.L       R10,@(12,R15)
          WiFi.c   294    
          WiFi.c   295        Bdisp_PutDispArea_DD(&dispBox);
    00000392 D344                   MOV.L       L921+106,R3; _Bdisp_PutDispArea_DD
    00000394 430B                   JSR         @R3
    00000396 64F3                   MOV         R15,R4
          WiFi.c   296    }
    00000398 7F10                   ADD         #16,R15
    0000039A 4F26                   LDS.L       @R15+,PR
    0000039C 68F6                   MOV.L       @R15+,R8
    0000039E 69F6                   MOV.L       @R15+,R9
    000003A0 6AF6                   MOV.L       @R15+,R10
    000003A2 6BF6                   MOV.L       @R15+,R11
    000003A4 6CF6                   MOV.L       @R15+,R12
    000003A6 6DF6                   MOV.L       @R15+,R13
    000003A8 000B                   RTS
    000003AA 6EF6                   MOV.L       @R15+,R14
          WiFi.c   297    
          WiFi.c   298    void drawBubble(int x, int y, int filled) {
    000003AC              _drawBubble:                     ; function: drawBubble
                                                           ; frame size=60
    000003AC 2FE6                   MOV.L       R14,@-R15
    000003AE 6E53                   MOV         R5,R14
    000003B0 2FD6                   MOV.L       R13,@-R15
          WiFi.c   299        Bdisp_DrawLineVRAM(x + 1, y, x + 3, y);
    000003B2 67E3                   MOV         R14,R7




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 06-Jan-2019 21:51:53  PAGE   15


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000003B4 2FC6                   MOV.L       R12,@-R15
    000003B6 6D43                   MOV         R4,R13
    000003B8 2FB6                   MOV.L       R11,@-R15
    000003BA 6573                   MOV         R7,R5
    000003BC DC3A                   MOV.L       L921+110,R12; _Bdisp_DrawLineVRAM
    000003BE 64D3                   MOV         R13,R4
    000003C0 4F22                   STS.L       PR,@-R15
    000003C2 7401                   ADD         #1,R4
    000003C4 7FD8                   ADD         #-40,R15
    000003C6 1F65                   MOV.L       R6,@(20,R15)
    000003C8 66D3                   MOV         R13,R6
    000003CA 7603                   ADD         #3,R6
    000003CC 1F61                   MOV.L       R6,@(4,R15)
    000003CE 4C0B                   JSR         @R12
    000003D0 1F43                   MOV.L       R4,@(12,R15)
          WiFi.c   300        Bdisp_DrawLineVRAM(x, y + 1, x + 4, y + 1);
    000003D2 67E3                   MOV         R14,R7
    000003D4 7701                   ADD         #1,R7
    000003D6 6BD3                   MOV         R13,R11
    000003D8 1F72                   MOV.L       R7,@(8,R15)
    000003DA 6573                   MOV         R7,R5
    000003DC 7B04                   ADD         #4,R11
    000003DE 66B3                   MOV         R11,R6
    000003E0 4C0B                   JSR         @R12
    000003E2 64D3                   MOV         R13,R4
          WiFi.c   301        Bdisp_DrawLineVRAM(x, y + 2, x + 4, y + 2);
    000003E4 67E3                   MOV         R14,R7
    000003E6 7702                   ADD         #2,R7
    000003E8 1F74                   MOV.L       R7,@(16,R15)
    000003EA 66B3                   MOV         R11,R6
    000003EC 6573                   MOV         R7,R5
    000003EE 4C0B                   JSR         @R12
    000003F0 64D3                   MOV         R13,R4
          WiFi.c   302        Bdisp_DrawLineVRAM(x, y + 3, x + 4, y + 3);
    000003F2 67E3                   MOV         R14,R7
    000003F4 7703                   ADD         #3,R7
    000003F6 66B3                   MOV         R11,R6
    000003F8 2F72                   MOV.L       R7,@R15
    000003FA 6573                   MOV         R7,R5
    000003FC 4C0B                   JSR         @R12
    000003FE 64D3                   MOV         R13,R4
          WiFi.c   303        Bdisp_DrawLineVRAM(x + 1, y + 4, x + 3, y + 4);
    00000400 67E3                   MOV         R14,R7
    00000402 7704                   ADD         #4,R7
    00000404 1F74                   MOV.L       R7,@(16,R15)
    00000406 6573                   MOV         R7,R5
    00000408 56F1                   MOV.L       @(4,R15),R6
    0000040A 4C0B                   JSR         @R12
    0000040C 54F3                   MOV.L       @(12,R15),R4
          WiFi.c   304    
          WiFi.c   305        if (filled == 0) {
    0000040E 53F5                   MOV.L       @(20,R15),R3
    00000410 2338                   TST         R3,R3
    00000412 8B0B                   BF          L792
          WiFi.c   306            DISPBOX clearBox;
          WiFi.c   307            clearBox.left = x + 1;
    00000414 53F3                   MOV.L       @(12,R15),R3




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 06-Jan-2019 21:51:53  PAGE   16


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          WiFi.c   308            clearBox.top = y + 1;
          WiFi.c   309            clearBox.right = x + 3;
          WiFi.c   310            clearBox.bottom = y + 3;
          WiFi.c   311    
          WiFi.c   312            Bdisp_AreaClr_VRAM(&clearBox);
    00000416 64F3                   MOV         R15,R4
    00000418 1F36                   MOV.L       R3,@(24,R15)
    0000041A 52F2                   MOV.L       @(8,R15),R2
    0000041C 1F27                   MOV.L       R2,@(28,R15)
    0000041E 53F1                   MOV.L       @(4,R15),R3
    00000420 1F38                   MOV.L       R3,@(32,R15)
    00000422 62F2                   MOV.L       @R15,R2
    00000424 D311                   MOV.L       L921+50,R3 ; _Bdisp_AreaClr_VRAM
    00000426 1F29                   MOV.L       R2,@(36,R15)
    00000428 430B                   JSR         @R3
    0000042A 7418                   ADD         #24,R4
    0000042C              L792:                             
          WiFi.c   313        }
          WiFi.c   314    }
    0000042C 7F28                   ADD         #40,R15
    0000042E 4F26                   LDS.L       @R15+,PR
    00000430 6BF6                   MOV.L       @R15+,R11
    00000432 6CF6                   MOV.L       @R15+,R12
    00000434 6DF6                   MOV.L       @R15+,R13
    00000436 000B                   RTS
    00000438 6EF6                   MOV.L       @R15+,R14
    0000043A              L921:                             
    0000043A 0000                   .DATA.W     0
    0000043C <00000000>             .DATA.L     _Bdisp_AllClr_DDVRAM
    00000440 <00000000>             .DATA.L     L453
    00000444 <00000000>             .DATA.L     _Bdisp_PutDisp_DD
    00000448 <00000000>             .DATA.L     L454
    0000044C <00000000>             .DATA.L     _receiveStatus
    00000450 <00000000>             .DATA.L     L455
    00000454 <00000000>             .DATA.L     _status
    00000458 <00000000>             .DATA.L     _memcmp
    0000045C <00000000>             .DATA.L     _disconnect
    00000460 <00000000>             .DATA.L     _shouldRequestNetInfo
    00000464 <00000000>             .DATA.L     _RTC_GetTicks
    00000468 <00000000>             .DATA.L     _Keyboard_ClrBuffer
    0000046C <00000000>             .DATA.L     _Bdisp_AreaClr_VRAM
    00000470 <00000000>             .DATA.L     _Bdisp_SetPoint_VRAM
    00000474 <00000000>             .DATA.L     __modls
    00000478 <00000000>             .DATA.L     _network
    0000047C <00000000>             .DATA.L     __itod
    00000480 40590000               .DATA.L     H'40590000
    00000484 <00000000>             .DATA.L     __addd
    00000488 EB851EB8               .DATA.L     H'EB851EB8
    0000048C 3FBEB851               .DATA.L     H'3FBEB851
    00000490 <00000000>             .DATA.L     __muld
    00000494 <00000000>             .DATA.L     __dtoi
    00000498 <00000000>             .DATA.L     _strlen
    0000049C <00000000>             .DATA.L     _locate
    000004A0 <00000000>             .DATA.L     _Print
    000004A4 <00000000>             .DATA.L     _Bdisp_PutDispArea_DD
    000004A8 <00000000>             .DATA.L     _Bdisp_DrawLineVRAM
          WiFi.c   315    




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 06-Jan-2019 21:51:53  PAGE   17


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          WiFi.c   316    void connectToNetwork() {    
    000004AC              _connectToNetwork:               ; function: connectToNetwork
                                                           ; frame size=172
    000004AC 2FE6                   MOV.L       R14,@-R15
    000004AE 2FD6                   MOV.L       R13,@-R15
    000004B0 2FC6                   MOV.L       R12,@-R15
          WiFi.c   317    
          WiFi.c   318        unsigned int key;
          WiFi.c   319        int counter = 0, lines = 0, lineBegin = 0, selection = 0, scroll = 0, lastTicks, a = 0, numChars = 0;
          WiFi.c   320        unsigned char text[22];
          WiFi.c   321            NetworkList* nets;
          WiFi.c   322            NetworkSelectionUI nsui;
          WiFi.c   323            int direction = 0;
    000004B2 EC00                   MOV         #0,R12
          WiFi.c   324            unsigned char passwordBuf[65]; // WiFi passwords are at most 64 chars
          WiFi.c   325    
          WiFi.c   326        Serial_ClearReceiveBuffer();
    000004B4 D325                   MOV.L       L922+8,R3  ; _Serial_ClearReceiveBuffer
    000004B6 2FB6                   MOV.L       R11,@-R15
    000004B8 2FA6                   MOV.L       R10,@-R15
    000004BA 2F96                   MOV.L       R9,@-R15
    000004BC 2F86                   MOV.L       R8,@-R15
    000004BE 4F22                   STS.L       PR,@-R15
    000004C0 9040                   MOV.W       L922,R0    ; H'FF7C
    000004C2 3F0C                   ADD         R0,R15
    000004C4 430B                   JSR         @R3
    000004C6 6DC3                   MOV         R12,R13
          WiFi.c   327    
          WiFi.c   328        
          WiFi.c   329        lastTicks = RTC_GetTicks();
    000004C8 D221                   MOV.L       L922+12,R2 ; _RTC_GetTicks
    000004CA 420B                   JSR         @R2
    000004CC 0009                   NOP
          WiFi.c   330        counter = 0;
          WiFi.c   331            
          WiFi.c   332            nets = getAvailableNetworks();
    000004CE D321                   MOV.L       L922+16,R3 ; _getAvailableNetworks
    000004D0 430B                   JSR         @R3
    000004D2 0009                   NOP
          WiFi.c   333    
          WiFi.c   334            Bdisp_AllClr_DDVRAM();
    000004D4 D220                   MOV.L       L922+20,R2 ; _Bdisp_AllClr_DDVRAM
    000004D6 420B                   JSR         @R2
    000004D8 6E03                   MOV         R0,R14
          WiFi.c   335       
          WiFi.c   336            nsui = initNetworkSelectionUI(1, 2, 21, 7, nets);
    000004DA E707                   MOV         #7,R7
    000004DC D21F                   MOV.L       L922+24,R2 ; _initNetworkSelectionUI
    000004DE E615                   MOV         #21,R6
    000004E0 2FE6                   MOV.L       R14,@-R15
    000004E2 E502                   MOV         #2,R5
    000004E4 E401                   MOV         #1,R4
    000004E6 63F3                   MOV         R15,R3
    000004E8 7350                   ADD         #80,R3
    000004EA 420B                   JSR         @R2
    000004EC 2F36                   MOV.L       R3,@-R15
    000004EE 7F08                   ADD         #8,R15




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 06-Jan-2019 21:51:53  PAGE   18


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000004F0 9829                   MOV.W       L922+2,R8  ; H'7532
    000004F2 6983                   MOV         R8,R9
    000004F4 DA1A                   MOV.L       L922+28,R10; _Print
    000004F6 7902                   ADD         #2,R9
    000004F8 DB1A                   MOV.L       L922+32,R11; _locate
          WiFi.c   337    
          WiFi.c   338            while (1) {
    000004FA              L794:                             
          WiFi.c   339                    Bdisp_AllClr_VRAM();
    000004FA D21B                   MOV.L       L922+36,R2 ; _Bdisp_AllClr_VRAM
    000004FC 420B                   JSR         @R2
    000004FE 0009                   NOP
          WiFi.c   340                    locate(1, 1);
    00000500 E501                   MOV         #1,R5
    00000502 4B0B                   JSR         @R11
    00000504 6453                   MOV         R5,R4
          WiFi.c   341                    Print("Select Network:");
    00000506 D419                   MOV.L       L922+40,R4 ; L494
    00000508 4A0B                   JSR         @R10
    0000050A 0009                   NOP
          WiFi.c   342                    drawNetworkSelectionUI(&nsui, direction);
    0000050C D318                   MOV.L       L922+44,R3 ; _drawNetworkSelectionUI
    0000050E 65D3                   MOV         R13,R5
    00000510 64F3                   MOV         R15,R4
    00000512 430B                   JSR         @R3
    00000514 744C                   ADD         #76,R4
          WiFi.c   343                    GetKey(&key);
    00000516 D217                   MOV.L       L922+48,R2 ; _GetKey
    00000518 420B                   JSR         @R2
    0000051A 64F3                   MOV         R15,R4
          WiFi.c   344    
          WiFi.c   345                    if (key == KEY_CTRL_UP) {
    0000051C 9314                   MOV.W       L922+4,R3  ; H'7542
    0000051E 62F2                   MOV.L       @R15,R2
    00000520 3230                   CMP/EQ      R3,R2
    00000522 8B01                   BF          L795
          WiFi.c   346                            direction = -1;
    00000524 AFE9                   BRA         L794
    00000526 EDFF                   MOV         #-1,R13
    00000528              L795:                             
          WiFi.c   347                    }
          WiFi.c   348                    else if (key == KEY_CTRL_DOWN) {
    00000528 910F                   MOV.W       L922+6,R1  ; H'7547
    0000052A 62F2                   MOV.L       @R15,R2
    0000052C 3210                   CMP/EQ      R1,R2
    0000052E 8B01                   BF          L797
          WiFi.c   349                            direction = 1;
    00000530 AFE3                   BRA         L794
    00000532 ED01                   MOV         #1,R13
    00000534              L797:                             
          WiFi.c   350                    }
          WiFi.c   351                    else if (key == KEY_CTRL_EXIT) {
    00000534 62F2                   MOV.L       @R15,R2
    00000536 3280                   CMP/EQ      R8,R2
    00000538 8B20                   BF          L799
          WiFi.c   352                            freeNetList(nets);
    0000053A D20F                   MOV.L       L922+52,R2 ; _freeNetList




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 06-Jan-2019 21:51:53  PAGE   19


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000053C 420B                   JSR         @R2
    0000053E 64E3                   MOV         R14,R4
          WiFi.c   353                            nets = NULL;
    00000540 AFDB                   BRA         L794
    00000542 6EC3                   MOV         R12,R14
    00000544              L922:                             
    00000544 FF7C                   .DATA.W     H'FF7C
    00000546 7532                   .DATA.W     H'7532
    00000548 7542                   .DATA.W     H'7542
    0000054A 7547                   .DATA.W     H'7547
    0000054C <00000000>             .DATA.L     _Serial_ClearReceiveBuffer
    00000550 <00000000>             .DATA.L     _RTC_GetTicks
    00000554 <00000000>             .DATA.L     _getAvailableNetworks
    00000558 <00000000>             .DATA.L     _Bdisp_AllClr_DDVRAM
    0000055C <00000000>             .DATA.L     _initNetworkSelectionUI
    00000560 <00000000>             .DATA.L     _Print
    00000564 <00000000>             .DATA.L     _locate
    00000568 <00000000>             .DATA.L     _Bdisp_AllClr_VRAM
    0000056C <00000000>             .DATA.L     L494
    00000570 <00000000>             .DATA.L     _drawNetworkSelectionUI
    00000574 <00000000>             .DATA.L     _GetKey
    00000578 <00000000>             .DATA.L     _freeNetList
    0000057C              L799:                             
          WiFi.c   354                            //return 0; DEBUG- wieder auskommentieren -> als Abbruch werten
          WiFi.c   355                    }
          WiFi.c   356                    else if (key == KEY_CTRL_EXE) {
    0000057C 62F2                   MOV.L       @R15,R2
    0000057E 3290                   CMP/EQ      R9,R2
    00000580 8BBB                   BF          L794
          WiFi.c   357                            break;
          WiFi.c   358                    }
          WiFi.c   359            }
          WiFi.c   360    
          WiFi.c   361            freeNetList(nets);
    00000582 D336                   MOV.L       L923+8,R3  ; _freeNetList
    00000584 430B                   JSR         @R3
    00000586 64E3                   MOV         R14,R4
          WiFi.c   362            nets = NULL;
          WiFi.c   363    
          WiFi.c   364            Bdisp_AllClr_DDVRAM();
    00000588 D235                   MOV.L       L923+12,R2 ; _Bdisp_AllClr_DDVRAM
    0000058A 420B                   JSR         @R2
    0000058C 0009                   NOP
          WiFi.c   365    
          WiFi.c   366            memset(passwordBuf, 0, 65);
    0000058E 6EF3                   MOV         R15,R14
    00000590 D334                   MOV.L       L923+16,R3 ; _memset
    00000592 E641                   MOV         #65,R6
    00000594 7E08                   ADD         #8,R14
    00000596 E500                   MOV         #0,R5
    00000598 430B                   JSR         @R3
    0000059A 64E3                   MOV         R14,R4
          WiFi.c   367            Cursor_SetFlashOn(0);
    0000059C D232                   MOV.L       L923+20,R2 ; _Cursor_SetFlashOn
    0000059E 420B                   JSR         @R2
    000005A0 E400                   MOV         #0,R4
    000005A2 DD32                   MOV.L       L923+24,R13; _strlen




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 06-Jan-2019 21:51:53  PAGE   20


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          WiFi.c   368    
          WiFi.c   369            while (1) {
    000005A4              L804:                             
          WiFi.c   370                    int x = 0;
    000005A4 1FC1                   MOV.L       R12,@(4,R15)
          WiFi.c   371    
          WiFi.c   372                    if (strlen(passwordBuf) > 20) {
    000005A6 4D0B                   JSR         @R13
    000005A8 64E3                   MOV         R14,R4
    000005AA E314                   MOV         #20,R3
    000005AC 3037                   CMP/GT      R3,R0
    000005AE 8B03                   BF          L805
          WiFi.c   373                            x = strlen(passwordBuf) - 20;
    000005B0 4D0B                   JSR         @R13
    000005B2 64E3                   MOV         R14,R4
    000005B4 70EC                   ADD         #-20,R0
    000005B6 1F01                   MOV.L       R0,@(4,R15)
    000005B8              L805:                             
          WiFi.c   374                    }
          WiFi.c   375    
          WiFi.c   376                    Bdisp_AllClr_VRAM();
    000005B8 D32D                   MOV.L       L923+28,R3 ; _Bdisp_AllClr_VRAM
    000005BA 430B                   JSR         @R3
    000005BC 0009                   NOP
          WiFi.c   377                    locate(1, 1);
    000005BE E501                   MOV         #1,R5
    000005C0 4B0B                   JSR         @R11
    000005C2 6453                   MOV         R5,R4
          WiFi.c   378                    Print("Password:");
    000005C4 D42B                   MOV.L       L923+32,R4 ; L503
    000005C6 4A0B                   JSR         @R10
    000005C8 0009                   NOP
          WiFi.c   379                    locate(1, 3);
    000005CA E503                   MOV         #3,R5
    000005CC 4B0B                   JSR         @R11
    000005CE E401                   MOV         #1,R4
          WiFi.c   380                    Print(&passwordBuf[x]);
    000005D0 54F1                   MOV.L       @(4,R15),R4
    000005D2 4A0B                   JSR         @R10
    000005D4 34EC                   ADD         R14,R4
          WiFi.c   381                    locate(strlen(passwordBuf) + 1, 3);
    000005D6 4D0B                   JSR         @R13
    000005D8 64E3                   MOV         R14,R4
    000005DA 6403                   MOV         R0,R4
    000005DC 7401                   ADD         #1,R4
    000005DE 4B0B                   JSR         @R11
    000005E0 E503                   MOV         #3,R5
          WiFi.c   382    
          WiFi.c   383                    GetKey(&key);
    000005E2 D325                   MOV.L       L923+36,R3 ; _GetKey
    000005E4 430B                   JSR         @R3
    000005E6 64F3                   MOV         R15,R4
          WiFi.c   384    
          WiFi.c   385                    if (key == KEY_CTRL_DEL && strlen(passwordBuf) >= 1) {
    000005E8 9234                   MOV.W       L923,R2    ; H'7549
    000005EA 63F2                   MOV.L       @R15,R3
    000005EC 3320                   CMP/EQ      R2,R3




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 06-Jan-2019 21:51:53  PAGE   21


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000005EE 8B09                   BF          L806
    000005F0 4D0B                   JSR         @R13
    000005F2 64E3                   MOV         R14,R4
    000005F4 E301                   MOV         #1,R3
    000005F6 3033                   CMP/GE      R3,R0
    000005F8 8B04                   BF          L806
          WiFi.c   386                            passwordBuf[strlen(passwordBuf) - 1] = 0;
    000005FA 4D0B                   JSR         @R13
    000005FC 64E3                   MOV         R14,R4
    000005FE 70FF                   ADD         #-1,R0
    00000600 AFD0                   BRA         L804
    00000602 0EC4                   MOV.B       R12,@(R0,R14)
    00000604              L806:                             
          WiFi.c   387                    }
          WiFi.c   388                    else if (key == KEY_CTRL_EXIT) {
    00000604 62F2                   MOV.L       @R15,R2
    00000606 3280                   CMP/EQ      R8,R2
    00000608 89CC                   BT          L804
          WiFi.c   389                            //return 0; DEBUG- wieder auskommentieren -> als Abbruch werten
          WiFi.c   390                    }
          WiFi.c   391                    else if (key == KEY_CTRL_EXE) {
    0000060A 63F2                   MOV.L       @R15,R3
    0000060C 3390                   CMP/EQ      R9,R3
    0000060E 890F                   BT          L811
          WiFi.c   392                            break;
          WiFi.c   393                    }
          WiFi.c   394                    else if (key < 128 && strlen(passwordBuf) < 64) {
    00000610 9121                   MOV.W       L923+2,R1  ; H'0080
    00000612 62F2                   MOV.L       @R15,R2
    00000614 3212                   CMP/HS      R1,R2
    00000616 89C5                   BT          L804
    00000618 D214                   MOV.L       L923+24,R2 ; _strlen
    0000061A 64F3                   MOV         R15,R4
    0000061C 420B                   JSR         @R2
    0000061E 7408                   ADD         #8,R4
    00000620 E340                   MOV         #64,R3
    00000622 3033                   CMP/GE      R3,R0
    00000624 89BE                   BT          L804
          WiFi.c   395                            passwordBuf[strlen(passwordBuf)] = (unsigned char)key;
    00000626 4D0B                   JSR         @R13
    00000628 64E3                   MOV         R14,R4
    0000062A 63F2                   MOV.L       @R15,R3
    0000062C AFBA                   BRA         L804
    0000062E 0E34                   MOV.B       R3,@(R0,R14)
    00000630              L811:                             
          WiFi.c   396                    }
          WiFi.c   397            }
          WiFi.c   398    
          WiFi.c   399            connect(nsui.selection, passwordBuf);
    00000630 D312                   MOV.L       L923+40,R3 ; _connect
    00000632 65E3                   MOV         R14,R5
    00000634 E05C                   MOV         #92,R0
    00000636 430B                   JSR         @R3
    00000638 04FE                   MOV.L       @(R0,R15),R4
          WiFi.c   400    
          WiFi.c   401        shouldRequestNetInfo=false;
    0000063A D211                   MOV.L       L923+44,R2 ; _shouldRequestNetInfo




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 06-Jan-2019 21:51:53  PAGE   22


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          WiFi.c   402    }
    0000063C 910C                   MOV.W       L923+4,R1  ; H'0084
    0000063E 22C2                   MOV.L       R12,@R2
    00000640 3F1C                   ADD         R1,R15
    00000642 4F26                   LDS.L       @R15+,PR
    00000644 68F6                   MOV.L       @R15+,R8
    00000646 69F6                   MOV.L       @R15+,R9
    00000648 6AF6                   MOV.L       @R15+,R10
    0000064A 6BF6                   MOV.L       @R15+,R11
    0000064C 6CF6                   MOV.L       @R15+,R12
    0000064E 6DF6                   MOV.L       @R15+,R13
    00000650 000B                   RTS
    00000652 6EF6                   MOV.L       @R15+,R14
    00000654              L923:                             
    00000654 7549                   .DATA.W     H'7549
    00000656 0080                   .DATA.W     H'0080
    00000658 0084                   .DATA.W     H'0084
    0000065A 0000                   .DATA.W     0
    0000065C <00000000>             .DATA.L     _freeNetList
    00000660 <00000000>             .DATA.L     _Bdisp_AllClr_DDVRAM
    00000664 <00000000>             .DATA.L     _memset
    00000668 <00000000>             .DATA.L     _Cursor_SetFlashOn
    0000066C <00000000>             .DATA.L     _strlen
    00000670 <00000000>             .DATA.L     _Bdisp_AllClr_VRAM
    00000674 <00000000>             .DATA.L     L503
    00000678 <00000000>             .DATA.L     _GetKey
    0000067C <00000000>             .DATA.L     _connect
    00000680 <00000000>             .DATA.L     _shouldRequestNetInfo
          WiFi.c   403    
          WiFi.c   404    void browseFiles() {
    00000684              _browseFiles:                    ; function: browseFiles
                                                           ; frame size=48
    00000684 2FE6                   MOV.L       R14,@-R15
    00000686 2FD6                   MOV.L       R13,@-R15
    00000688 2FC6                   MOV.L       R12,@-R15
    0000068A 2FB6                   MOV.L       R11,@-R15
    0000068C 4F22                   STS.L       PR,@-R15
    0000068E 7FE4                   ADD         #-28,R15
          WiFi.c   405        unsigned int key;
          WiFi.c   406        int counter = 0, lines = 0, lineBegin = 0, selection = 0, scroll = 0, i;
          WiFi.c   407        unsigned char text[22];
          WiFi.c   408    
          WiFi.c   409            unsigned char* result;
          WiFi.c   410            
          WiFi.c   411            Bdisp_AllClr_DDVRAM();
    00000690 D337                   MOV.L       L924+2,R3  ; _Bdisp_AllClr_DDVRAM
    00000692 430B                   JSR         @R3
    00000694 0009                   NOP
          WiFi.c   412            locate(21,1);
    00000696 E501                   MOV         #1,R5
    00000698 DB36                   MOV.L       L924+6,R11 ; _locate
    0000069A 4B0B                   JSR         @R11
    0000069C E415                   MOV         #21,R4
          WiFi.c   413            Print(loupe);
    0000069E D436                   MOV.L       L924+10,R4 ; _loupe
    000006A0 D236                   MOV.L       L924+14,R2 ; _Print
    000006A2 420B                   JSR         @R2




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 06-Jan-2019 21:51:53  PAGE   23


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000006A4 0009                   NOP
          WiFi.c   414            locate(1,1);
    000006A6 E501                   MOV         #1,R5
    000006A8 4B0B                   JSR         @R11
    000006AA 6453                   MOV         R5,R4
          WiFi.c   415            Bdisp_DrawLineVRAM(0,7,127,7);
    000006AC D334                   MOV.L       L924+18,R3 ; _Bdisp_DrawLineVRAM
    000006AE E707                   MOV         #7,R7
    000006B0 E67F                   MOV         #127,R6
    000006B2 6573                   MOV         R7,R5
    000006B4 430B                   JSR         @R3
    000006B6 E400                   MOV         #0,R4
          WiFi.c   416            Bdisp_PutDisp_DD;
          WiFi.c   417            readString(1,1,true);
    000006B8 E601                   MOV         #1,R6
    000006BA 6563                   MOV         R6,R5
    000006BC B2E0                   BSR         _readString
    000006BE 6463                   MOV         R6,R4
          WiFi.c   418            
          WiFi.c   419            memcpy(text,buf,strlen(buf)+1);
    000006C0 DD30                   MOV.L       L924+22,R13; _strlen
    000006C2 6CF3                   MOV         R15,R12
    000006C4 DE30                   MOV.L       L924+26,R14; _buf
    000006C6 7C04                   ADD         #4,R12
    000006C8 4D0B                   JSR         @R13
    000006CA 64E3                   MOV         R14,R4
    000006CC D32F                   MOV.L       L924+30,R3 ; _memcpy
    000006CE 6603                   MOV         R0,R6
    000006D0 7601                   ADD         #1,R6
    000006D2 65E3                   MOV         R14,R5
    000006D4 430B                   JSR         @R3
    000006D6 64C3                   MOV         R12,R4
          WiFi.c   420            
          WiFi.c   421            Serial_ClearReceiveBuffer();
    000006D8 D22D                   MOV.L       L924+34,R2 ; _Serial_ClearReceiveBuffer
    000006DA 420B                   JSR         @R2
    000006DC 0009                   NOP
          WiFi.c   422        Serial_ClearTransmitBuffer();
    000006DE D32D                   MOV.L       L924+38,R3 ; _Serial_ClearTransmitBuffer
    000006E0 430B                   JSR         @R3
    000006E2 0009                   NOP
          WiFi.c   423            
          WiFi.c   424            sendCommand("SEARCH");
    000006E4 D42C                   MOV.L       L924+42,R4 ; L519
    000006E6 B27E                   BSR         _sendCommand
    000006E8 0009                   NOP
          WiFi.c   425            receiveStatus();                                        
    000006EA D32C                   MOV.L       L924+46,R3 ; _receiveStatus
    000006EC 430B                   JSR         @R3
    000006EE 0009                   NOP
          WiFi.c   426            if (memcmp(status,"OK",2)!=0){
    000006F0 D52B                   MOV.L       L924+50,R5 ; L455
    000006F2 D42C                   MOV.L       L924+54,R4 ; _status
    000006F4 D22C                   MOV.L       L924+58,R2 ; _memcmp
    000006F6 420B                   JSR         @R2
    000006F8 E602                   MOV         #2,R6
    000006FA 2008                   TST         R0,R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 06-Jan-2019 21:51:53  PAGE   24


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000006FC 8B30                   BF          L815
          WiFi.c   427                    return;
          WiFi.c   428            }           
          WiFi.c   429            Serial_BufferedTransmitNBytes(text,strlen(text)+1);
    000006FE 4D0B                   JSR         @R13
    00000700 64C3                   MOV         R12,R4
    00000702 6503                   MOV         R0,R5
    00000704 D229                   MOV.L       L924+62,R2 ; _Serial_BufferedTransmitNBytes
    00000706 7501                   ADD         #1,R5
    00000708 420B                   JSR         @R2
    0000070A 64C3                   MOV         R12,R4
          WiFi.c   430            
          WiFi.c   431        //Bdisp_AllClr_DDVRAM();
          WiFi.c   432    
          WiFi.c   433        serialReadStringTimeout(30000,buf);
    0000070C 942F                   MOV.W       L924,R4    ; H'7530
    0000070E B357                   BSR         _serialReadStringTimeout
    00000710 65E3                   MOV         R14,R5
          WiFi.c   434            result=(unsigned char*)malloc(strlen(buf)+1);
    00000712 4D0B                   JSR         @R13
    00000714 64E3                   MOV         R14,R4
    00000716 6403                   MOV         R0,R4
    00000718 D225                   MOV.L       L924+66,R2 ; _malloc
    0000071A 420B                   JSR         @R2
    0000071C 7401                   ADD         #1,R4
    0000071E 6C03                   MOV         R0,R12
          WiFi.c   435            memcpy(result,buf,strlen(buf)+1);
    00000720 4D0B                   JSR         @R13
    00000722 64E3                   MOV         R14,R4
    00000724 D319                   MOV.L       L924+30,R3 ; _memcpy
    00000726 6603                   MOV         R0,R6
    00000728 7601                   ADD         #1,R6
    0000072A 65E3                   MOV         R14,R5
    0000072C 430B                   JSR         @R3
    0000072E 64C3                   MOV         R12,R4
          WiFi.c   436            
          WiFi.c   437            if(strlen(buf)==0){
    00000730 4D0B                   JSR         @R13
    00000732 64E3                   MOV         R14,R4
    00000734 2008                   TST         R0,R0
    00000736 8B11                   BF          L816
          WiFi.c   438                    Bdisp_AllClr_DDVRAM();
    00000738 D30D                   MOV.L       L924+2,R3  ; _Bdisp_AllClr_DDVRAM
    0000073A 430B                   JSR         @R3
    0000073C 0009                   NOP
          WiFi.c   439                    locate(0,3);
    0000073E E503                   MOV         #3,R5
    00000740 4B0B                   JSR         @R11
    00000742 E400                   MOV         #0,R4
          WiFi.c   440                    Print((unsigned char*)"KEIN ERGEBNIS GEFUNDEN");
    00000744 D41B                   MOV.L       L924+70,R4 ; L523
    00000746 D20D                   MOV.L       L924+14,R2 ; _Print
    00000748 420B                   JSR         @R2
    0000074A 0009                   NOP
          WiFi.c   441                    Bdisp_PutDisp_DD();
    0000074C D31A                   MOV.L       L924+74,R3 ; _Bdisp_PutDisp_DD
    0000074E 430B                   JSR         @R3




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 06-Jan-2019 21:51:53  PAGE   25


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000750 0009                   NOP
          WiFi.c   442                    GetKey(&key);
    00000752 D21A                   MOV.L       L924+78,R2 ; _GetKey
    00000754 420B                   JSR         @R2
    00000756 64F3                   MOV         R15,R4
          WiFi.c   443                    return;
    00000758 A002                   BRA         L815
    0000075A 0009                   NOP
    0000075C              L816:                             
          WiFi.c   444            }
          WiFi.c   445            drawBrowseResults(result);
    0000075C B030                   BSR         _drawBrowseResults
    0000075E 64C3                   MOV         R12,R4
          WiFi.c   446    }
    00000760              L815:                             
    00000760 7F1C                   ADD         #28,R15
    00000762 4F26                   LDS.L       @R15+,PR
    00000764 6BF6                   MOV.L       @R15+,R11
    00000766 6CF6                   MOV.L       @R15+,R12
    00000768 6DF6                   MOV.L       @R15+,R13
    0000076A 000B                   RTS
    0000076C 6EF6                   MOV.L       @R15+,R14
    0000076E              L924:                             
    0000076E 7530                   .DATA.W     H'7530
    00000770 <00000000>             .DATA.L     _Bdisp_AllClr_DDVRAM
    00000774 <00000000>             .DATA.L     _locate
    00000778 <00000000>             .DATA.L     _loupe
    0000077C <00000000>             .DATA.L     _Print
    00000780 <00000000>             .DATA.L     _Bdisp_DrawLineVRAM
    00000784 <00000000>             .DATA.L     _strlen
    00000788 <00000000>             .DATA.L     _buf
    0000078C <00000000>             .DATA.L     _memcpy
    00000790 <00000000>             .DATA.L     _Serial_ClearReceiveBuffer
    00000794 <00000000>             .DATA.L     _Serial_ClearTransmitBuffer
    00000798 <00000000>             .DATA.L     L519
    0000079C <00000000>             .DATA.L     _receiveStatus
    000007A0 <00000000>             .DATA.L     L455
    000007A4 <00000000>             .DATA.L     _status
    000007A8 <00000000>             .DATA.L     _memcmp
    000007AC <00000000>             .DATA.L     _Serial_BufferedTransmitNBytes
    000007B0 <00000000>             .DATA.L     _malloc
    000007B4 <00000000>             .DATA.L     L523
    000007B8 <00000000>             .DATA.L     _Bdisp_PutDisp_DD
    000007BC <00000000>             .DATA.L     _GetKey
          WiFi.c   447    
          WiFi.c   448    void drawBrowseResults(unsigned char* results) {
    000007C0              _drawBrowseResults:              ; function: drawBrowseResults
                                                           ; frame size=88
    000007C0 2FE6                   MOV.L       R14,@-R15
          WiFi.c   449            int counter = 0, lines = 0, lineBegin = 0, selection = 0, scroll = 0, i;
    000007C2 EE00                   MOV         #0,R14
          WiFi.c   450            unsigned char text[22];
          WiFi.c   451            unsigned int key;
          WiFi.c   452            
          WiFi.c   453            unsigned int dl=0;
          WiFi.c   454    
          WiFi.c   455            Bdisp_AllClr_DDVRAM();




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 06-Jan-2019 21:51:53  PAGE   26


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000007C4 D345                   MOV.L       L925+4,R3  ; _Bdisp_AllClr_DDVRAM
    000007C6 2FD6                   MOV.L       R13,@-R15
    000007C8 2FC6                   MOV.L       R12,@-R15
    000007CA 6DE3                   MOV         R14,R13
    000007CC 2FB6                   MOV.L       R11,@-R15
    000007CE 2FA6                   MOV.L       R10,@-R15
    000007D0 2F96                   MOV.L       R9,@-R15
    000007D2 2F86                   MOV.L       R8,@-R15
    000007D4 4F22                   STS.L       PR,@-R15
    000007D6 7FC8                   ADD         #-56,R15
    000007D8 1F41                   MOV.L       R4,@(4,R15)
    000007DA 430B                   JSR         @R3
    000007DC 6CE3                   MOV         R14,R12
          WiFi.c   456            locate(21, 1);
    000007DE E501                   MOV         #1,R5
    000007E0 D23F                   MOV.L       L925+8,R2  ; _locate
    000007E2 420B                   JSR         @R2
    000007E4 E415                   MOV         #21,R4
          WiFi.c   457            Print(loupe);
    000007E6 D43F                   MOV.L       L925+12,R4 ; _loupe
    000007E8 D33F                   MOV.L       L925+16,R3 ; _Print
    000007EA 430B                   JSR         @R3
    000007EC 0009                   NOP
          WiFi.c   458            locate(1, 1);
    000007EE E501                   MOV         #1,R5
    000007F0 D23B                   MOV.L       L925+8,R2  ; _locate
    000007F2 420B                   JSR         @R2
    000007F4 6453                   MOV         R5,R4
          WiFi.c   459            Bdisp_DrawLineVRAM(0, 7, 127, 7);
    000007F6 E707                   MOV         #7,R7
    000007F8 D33C                   MOV.L       L925+20,R3 ; _Bdisp_DrawLineVRAM
    000007FA E67F                   MOV         #127,R6
    000007FC 6573                   MOV         R7,R5
    000007FE 430B                   JSR         @R3
    00000800 64C3                   MOV         R12,R4
    00000802 6AF3                   MOV         R15,R10
    00000804 7A20                   ADD         #32,R10
    00000806 62A3                   MOV         R10,R2
    00000808 1F22                   MOV.L       R2,@(8,R15)
          WiFi.c   460            Bdisp_PutDisp_DD;
          WiFi.c   461            
          WiFi.c   462            do {
    0000080A              L817:                             
          WiFi.c   463                    DISPBOX listArea;
          WiFi.c   464                    listArea.left = 0;
          WiFi.c   465                    listArea.top = 8;
    0000080A E308                   MOV         #8,R3
    0000080C 1FE4                   MOV.L       R14,@(16,R15)
          WiFi.c   466                    listArea.right = 127;
    0000080E E27F                   MOV         #127,R2
    00000810 1F35                   MOV.L       R3,@(20,R15)
          WiFi.c   467                    listArea.bottom = 63;
          WiFi.c   468    
          WiFi.c   469                    Bdisp_AreaClr_VRAM(&listArea);
    00000812 64F3                   MOV         R15,R4
    00000814 1F26                   MOV.L       R2,@(24,R15)
    00000816 E33F                   MOV         #63,R3




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 06-Jan-2019 21:51:53  PAGE   27


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000818 1F37                   MOV.L       R3,@(28,R15)
    0000081A D335                   MOV.L       L925+24,R3 ; _Bdisp_AreaClr_VRAM
    0000081C 430B                   JSR         @R3
    0000081E 7410                   ADD         #16,R4
          WiFi.c   470    
          WiFi.c   471                    for (counter = 0, lines = 0, lineBegin = 0; results[counter] != 0; counter = counter + 1) 
                         +{
    00000820 6BE3                   MOV         R14,R11
    00000822 69E3                   MOV         R14,R9
    00000824 68E3                   MOV         R14,R8
    00000826 62C3                   MOV         R12,R2
    00000828 7207                   ADD         #7,R2
    0000082A A035                   BRA         L818
    0000082C 1F23                   MOV.L       R2,@(12,R15)
    0000082E              L819:                             
          WiFi.c   472                            if (results[counter] == '\n') {
    0000082E 50F1                   MOV.L       @(4,R15),R0
    00000830 03BC                   MOV.B       @(R0,R11),R3
    00000832 603C                   EXTU.B      R3,R0
    00000834 880A                   CMP/EQ      #10,R0
    00000836 8B2E                   BF          L820
          WiFi.c   473                                    lines = lines + 1;
    00000838 7901                   ADD         #1,R9
          WiFi.c   474    
          WiFi.c   475                                    if (lines > scroll && lines <= scroll + 7) {
    0000083A 39C7                   CMP/GT      R12,R9
    0000083C 8B29                   BF          L821
    0000083E 53F3                   MOV.L       @(12,R15),R3
    00000840 3937                   CMP/GT      R3,R9
    00000842 8926                   BT          L821
          WiFi.c   476                                            memset(text, 0, sizeof text);
    00000844 D32B                   MOV.L       L925+28,R3 ; _memset
    00000846 E616                   MOV         #22,R6
    00000848 E500                   MOV         #0,R5
    0000084A 430B                   JSR         @R3
    0000084C 64A3                   MOV         R10,R4
          WiFi.c   477                                            memcpy(text, &results[lineBegin], counter - lineBegin);
    0000084E 66B3                   MOV         R11,R6
    00000850 55F1                   MOV.L       @(4,R15),R5
    00000852 3688                   SUB         R8,R6
    00000854 D328                   MOV.L       L925+32,R3 ; _memcpy
    00000856 358C                   ADD         R8,R5
    00000858 430B                   JSR         @R3
    0000085A 64A3                   MOV         R10,R4
    0000085C 54F2                   MOV.L       @(8,R15),R4
    0000085E 67B3                   MOV         R11,R7
          WiFi.c   478    
          WiFi.c   479                                            for (i = 0; i < counter - lineBegin; i = i + 1) {
    00000860 65E3                   MOV         R14,R5
    00000862 3788                   SUB         R8,R7
    00000864 4715                   CMP/PL      R7
    00000866 8F0B                   BF/S        L822
    00000868 6643                   MOV         R4,R6
    0000086A              L823:                             
          WiFi.c   480                                                    if (text[i] == '\t') {
    0000086A 6060                   MOV.B       @R6,R0
    0000086C 600C                   EXTU.B      R0,R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 06-Jan-2019 21:51:53  PAGE   28


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000086E 8809                   CMP/EQ      #9,R0
    00000870 8F02                   BF/S        L824
    00000872 7501                   ADD         #1,R5
          WiFi.c   481                                                            text[i] = ' ';
    00000874 E220                   MOV         #32,R2
    00000876 2420                   MOV.B       R2,@R4
    00000878              L824:                             
    00000878 7401                   ADD         #1,R4
    0000087A 3573                   CMP/GE      R7,R5
    0000087C 8FF5                   BF/S        L823
    0000087E 7601                   ADD         #1,R6
    00000880              L822:                             
          WiFi.c   482                                                    }
          WiFi.c   483                                            }
          WiFi.c   484    
          WiFi.c   485                                            locate(1, 1 + lines - scroll);
    00000880 D317                   MOV.L       L925+8,R3  ; _locate
    00000882 6593                   MOV         R9,R5
    00000884 35C8                   SUB         R12,R5
    00000886 7501                   ADD         #1,R5
    00000888 430B                   JSR         @R3
    0000088A E401                   MOV         #1,R4
          WiFi.c   486                                            Print(text);
    0000088C D216                   MOV.L       L925+16,R2 ; _Print
    0000088E 420B                   JSR         @R2
    00000890 64A3                   MOV         R10,R4
    00000892              L821:                             
          WiFi.c   487                                    }
          WiFi.c   488    
          WiFi.c   489                                    lineBegin = counter + 1;
    00000892 68B3                   MOV         R11,R8
    00000894 7801                   ADD         #1,R8
    00000896              L820:                             
    00000896 7B01                   ADD         #1,R11
    00000898              L818:                             
    00000898 50F1                   MOV.L       @(4,R15),R0
    0000089A 03BC                   MOV.B       @(R0,R11),R3
    0000089C 633C                   EXTU.B      R3,R3
    0000089E 2338                   TST         R3,R3
    000008A0 8BC5                   BF          L819
          WiFi.c   490                            }
          WiFi.c   491                    }
          WiFi.c   492    
          WiFi.c   493                    Bdisp_AreaReverseVRAM(0, 8 * (selection - scroll + 1), 127, 8 * (selection - scroll + 1) +
                         + 7);
    000008A2 6BD3                   MOV         R13,R11
    000008A4 D315                   MOV.L       L925+36,R3 ; _Bdisp_AreaReverseVRAM
    000008A6 E67F                   MOV         #127,R6
    000008A8 3BC8                   SUB         R12,R11
    000008AA 7B01                   ADD         #1,R11
    000008AC 4B08                   SHLL2       R11
    000008AE 4B00                   SHLL        R11
    000008B0 67B3                   MOV         R11,R7
    000008B2 7707                   ADD         #7,R7
    000008B4 65B3                   MOV         R11,R5
    000008B6 430B                   JSR         @R3
    000008B8 E400                   MOV         #0,R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 06-Jan-2019 21:51:53  PAGE   29


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          WiFi.c   494    
          WiFi.c   495                    GetKey(&key);
    000008BA D211                   MOV.L       L925+40,R2 ; _GetKey
    000008BC 420B                   JSR         @R2
    000008BE 64F3                   MOV         R15,R4
          WiFi.c   496    
          WiFi.c   497                    if (key == 30018) {
    000008C0 930A                   MOV.W       L925,R3    ; H'7542
    000008C2 62F2                   MOV.L       @R15,R2
    000008C4 3230                   CMP/EQ      R3,R2
    000008C6 8B01                   BF          L825
          WiFi.c   498                            selection = selection - 1;
    000008C8 A028                   BRA         L826
    000008CA 7DFF                   ADD         #-1,R13
    000008CC              L825:                             
          WiFi.c   499                    }
          WiFi.c   500                    else if (key == 30023) {
    000008CC 9105                   MOV.W       L925+2,R1  ; H'7547
    000008CE 62F2                   MOV.L       @R15,R2
    000008D0 3210                   CMP/EQ      R1,R2
    000008D2 8B17                   BF          L827
          WiFi.c   501                            selection = selection + 1;
    000008D4 A022                   BRA         L826
    000008D6 7D01                   ADD         #1,R13
    000008D8              L925:                             
    000008D8 7542                   .DATA.W     H'7542
    000008DA 7547                   .DATA.W     H'7547
    000008DC <00000000>             .DATA.L     _Bdisp_AllClr_DDVRAM
    000008E0 <00000000>             .DATA.L     _locate
    000008E4 <00000000>             .DATA.L     _loupe
    000008E8 <00000000>             .DATA.L     _Print
    000008EC <00000000>             .DATA.L     _Bdisp_DrawLineVRAM
    000008F0 <00000000>             .DATA.L     _Bdisp_AreaClr_VRAM
    000008F4 <00000000>             .DATA.L     _memset
    000008F8 <00000000>             .DATA.L     _memcpy
    000008FC <00000000>             .DATA.L     _Bdisp_AreaReverseVRAM
    00000900 <00000000>             .DATA.L     _GetKey
    00000904              L827:                             
          WiFi.c   502                    }
          WiFi.c   503                    else if (key == 30009) {
    00000904 9267                   MOV.W       L926,R2    ; H'7539
    00000906 60F2                   MOV.L       @R15,R0
    00000908 3020                   CMP/EQ      R2,R0
    0000090A 8B03                   BF          L829
          WiFi.c   504                            browseFiles();
    0000090C BEBA                   BSR         _browseFiles
    0000090E 0009                   NOP
          WiFi.c   505                            return;
    00000910 A057                   BRA         L830
    00000912 0009                   NOP
    00000914              L829:                             
          WiFi.c   506                    }
          WiFi.c   507                    else if (key == 30002) {
    00000914 9360                   MOV.W       L926+2,R3  ; H'7532
    00000916 60F2                   MOV.L       @R15,R0
    00000918 3030                   CMP/EQ      R3,R0
    0000091A 8952                   BT          L830




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 06-Jan-2019 21:51:53  PAGE   30


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000091C              L826:                             
          WiFi.c   508                            return;
          WiFi.c   509                    }
          WiFi.c   510    
          WiFi.c   511                    if (selection < 0) {
    0000091C 4D11                   CMP/PZ      R13
    0000091E 8901                   BT          L833
          WiFi.c   512                            selection = 0;
    00000920 A00E                   BRA         L834
    00000922 6DE3                   MOV         R14,R13
    00000924              L833:                             
          WiFi.c   513                    }
          WiFi.c   514                    else if (selection >= lines) {
    00000924 3D93                   CMP/GE      R9,R13
    00000926 8B02                   BF          L835
          WiFi.c   515                            selection = lines - 1;
    00000928 6D93                   MOV         R9,R13
    0000092A A009                   BRA         L834
    0000092C 7DFF                   ADD         #-1,R13
    0000092E              L835:                             
          WiFi.c   516                    }
          WiFi.c   517                    else {
          WiFi.c   518                            if (selection < scroll) {
    0000092E 3DC3                   CMP/GE      R12,R13
    00000930 8901                   BT          L837
          WiFi.c   519                                    scroll = scroll - 1;
    00000932 A005                   BRA         L834
    00000934 7CFF                   ADD         #-1,R12
    00000936              L837:                             
          WiFi.c   520                            }
          WiFi.c   521                            else if (selection >= 8 + scroll) {
    00000936 63C3                   MOV         R12,R3
    00000938 7308                   ADD         #8,R3
    0000093A 3D33                   CMP/GE      R3,R13
    0000093C 8B00                   BF          L834
          WiFi.c   522                                    scroll = scroll + 1;
    0000093E 7C01                   ADD         #1,R12
    00000940              L834:                             
          WiFi.c   523                            }
          WiFi.c   524                    }
          WiFi.c   525            } while (key != 30004);
    00000940 934B                   MOV.W       L926+4,R3  ; H'7534
    00000942 62F2                   MOV.L       @R15,R2
    00000944 3230                   CMP/EQ      R3,R2
    00000946 8901                   BT          L927
    00000948 AF5F                   BRA         L817
    0000094A 0009                   NOP
    0000094C              L927:                             
          WiFi.c   526    
          WiFi.c   527            for (counter = 0, lines = 0, lineBegin = 0; buf[counter] != 0; counter = counter + 1) {
    0000094C 9846                   MOV.W       L926+6,R8  ; H'01F4
    0000094E 6BE3                   MOV         R14,R11
    00000950 DC23                   MOV.L       L926+10,R12; _buf
    00000952 66E3                   MOV         R14,R6
    00000954 A029                   BRA         L840
    00000956 69E3                   MOV         R14,R9
    00000958              L841:                             




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 06-Jan-2019 21:51:53  PAGE   31


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000958 65B3                   MOV         R11,R5
    0000095A 35CC                   ADD         R12,R5
    0000095C 6050                   MOV.B       @R5,R0
    0000095E 64B3                   MOV         R11,R4
    00000960 600C                   EXTU.B      R0,R0
    00000962 880A                   CMP/EQ      #10,R0
    00000964 8F02                   BF/S        L842
    00000966 7401                   ADD         #1,R4
          WiFi.c   528                    if (buf[counter] == '\n') {
          WiFi.c   529                            lines = lines + 1;
    00000968 7601                   ADD         #1,R6
          WiFi.c   530                            lineBegin = counter + 1;
    0000096A 6943                   MOV         R4,R9
    0000096C              L842:                             
          WiFi.c   531                    }
          WiFi.c   532    
          WiFi.c   533                    if (lines >= selection && buf[counter] == '\t') {
    0000096C 36D3                   CMP/GE      R13,R6
    0000096E 8B1B                   BF          L843
    00000970 6050                   MOV.B       @R5,R0
    00000972 600C                   EXTU.B      R0,R0
    00000974 8809                   CMP/EQ      #9,R0
    00000976 8B17                   BF          L843
          WiFi.c   534                            memset(text, 0, sizeof text);
    00000978 D21A                   MOV.L       L926+14,R2 ; _memset
    0000097A E616                   MOV         #22,R6
    0000097C E500                   MOV         #0,R5
    0000097E 420B                   JSR         @R2
    00000980 64A3                   MOV         R10,R4
          WiFi.c   535                            memcpy(text, &buf[lineBegin], counter - lineBegin);
    00000982 66B3                   MOV         R11,R6
    00000984 D318                   MOV.L       L926+18,R3 ; _memcpy
    00000986 6593                   MOV         R9,R5
    00000988 3698                   SUB         R9,R6
    0000098A 35CC                   ADD         R12,R5
    0000098C 430B                   JSR         @R3
    0000098E 64A3                   MOV         R10,R4
          WiFi.c   536    
          WiFi.c   537                            memset(buf, 0, sizeof buf);
    00000990 D214                   MOV.L       L926+14,R2 ; _memset
    00000992 6683                   MOV         R8,R6
    00000994 E500                   MOV         #0,R5
    00000996 420B                   JSR         @R2
    00000998 64C3                   MOV         R12,R4
          WiFi.c   538                            memcpy(buf, text, sizeof text);
    0000099A E616                   MOV         #22,R6
    0000099C D312                   MOV.L       L926+18,R3 ; _memcpy
    0000099E 65A3                   MOV         R10,R5
    000009A0 430B                   JSR         @R3
    000009A2 64C3                   MOV         R12,R4
          WiFi.c   539    
          WiFi.c   540                            break;
    000009A4 A006                   BRA         L844
    000009A6 0009                   NOP
    000009A8              L843:                             
    000009A8 6B43                   MOV         R4,R11
    000009AA              L840:                             




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 06-Jan-2019 21:51:53  PAGE   32


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000009AA 60B3                   MOV         R11,R0
    000009AC 03CC                   MOV.B       @(R0,R12),R3
    000009AE 633C                   EXTU.B      R3,R3
    000009B0 2338                   TST         R3,R3
    000009B2 8BD1                   BF          L841
    000009B4              L844:                             
          WiFi.c   541                    }
          WiFi.c   542            }
          WiFi.c   543            
          WiFi.c   544            dl=showAppInfo();
    000009B4 B01A                   BSR         _showAppInfo
    000009B6 0009                   NOP
    000009B8 6403                   MOV         R0,R4
          WiFi.c   545            if(dl==0){
    000009BA 2448                   TST         R4,R4
    000009BC 8B01                   BF          L830
          WiFi.c   546                    drawBrowseResults(results);
    000009BE BEFF                   BSR         _drawBrowseResults
    000009C0 54F1                   MOV.L       @(4,R15),R4
          WiFi.c   547            }
          WiFi.c   548            return;
          WiFi.c   549            //downloadFile();
          WiFi.c   550    }
    000009C2              L830:                             
    000009C2 7F38                   ADD         #56,R15
    000009C4 4F26                   LDS.L       @R15+,PR
    000009C6 68F6                   MOV.L       @R15+,R8
    000009C8 69F6                   MOV.L       @R15+,R9
    000009CA 6AF6                   MOV.L       @R15+,R10
    000009CC 6BF6                   MOV.L       @R15+,R11
    000009CE 6CF6                   MOV.L       @R15+,R12
    000009D0 6DF6                   MOV.L       @R15+,R13
    000009D2 000B                   RTS
    000009D4 6EF6                   MOV.L       @R15+,R14
    000009D6              L926:                             
    000009D6 7539                   .DATA.W     H'7539
    000009D8 7532                   .DATA.W     H'7532
    000009DA 7534                   .DATA.W     H'7534
    000009DC 01F4                   .DATA.W     H'01F4
    000009DE 0000                   .DATA.W     0
    000009E0 <00000000>             .DATA.L     _buf
    000009E4 <00000000>             .DATA.L     _memset
    000009E8 <00000000>             .DATA.L     _memcpy
          WiFi.c   551    
          WiFi.c   552    int showAppInfo(){
    000009EC              _showAppInfo:                    ; function: showAppInfo
                                                           ; frame size=8
    000009EC 4F22                   STS.L       PR,@-R15
          WiFi.c   553            unsigned int key=0;
    000009EE E300                   MOV         #0,R3
          WiFi.c   554            
          WiFi.c   555            unsigned char* picture;
          WiFi.c   556            unsigned short transmitted;
          WiFi.c   557            unsigned char* infoText;
          WiFi.c   558            unsigned char* appName;
          WiFi.c   559            unsigned char* author;
          WiFi.c   560            unsigned char* downloadCount;




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 06-Jan-2019 21:51:53  PAGE   33


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          WiFi.c   561            
          WiFi.c   562            sendCommand("GETAPPINFO");
    000009F0 D433                   MOV.L       L928+8,R4  ; L563
    000009F2 7FFC                   ADD         #-4,R15
    000009F4 2F32                   MOV.L       R3,@R15
    000009F6 B0F6                   BSR         _sendCommand
    000009F8 0009                   NOP
          WiFi.c   563            receiveStatus();
    000009FA D232                   MOV.L       L928+12,R2 ; _receiveStatus
    000009FC 420B                   JSR         @R2
    000009FE 0009                   NOP
          WiFi.c   564            
          WiFi.c   565            receiveStatusTimeout(20);
    00000A00 D331                   MOV.L       L928+16,R3 ; _receiveStatusTimeout
    00000A02 430B                   JSR         @R3
    00000A04 E414                   MOV         #20,R4
          WiFi.c   566            if(memcmp(status,"OK",2)!=0){
    00000A06 D531                   MOV.L       L928+20,R5 ; L455
    00000A08 D431                   MOV.L       L928+24,R4 ; _status
    00000A0A D232                   MOV.L       L928+28,R2 ; _memcmp
    00000A0C 420B                   JSR         @R2
    00000A0E E602                   MOV         #2,R6
    00000A10 2008                   TST         R0,R0
    00000A12 8B0D                   BF          L705
          WiFi.c   567                    return 0;
          WiFi.c   568            }
          WiFi.c   569            
          WiFi.c   570            Bdisp_AllClr_DDVRAM();
    00000A14 D330                   MOV.L       L928+32,R3 ; _Bdisp_AllClr_DDVRAM
    00000A16 430B                   JSR         @R3
    00000A18 0009                   NOP
          WiFi.c   571            
          WiFi.c   572            //picture=receiveData(5000,&transmitted); DEBUG- wieder auskommentieren
          WiFi.c   573            serialReadString(infoText);
    00000A1A B1CD                   BSR         _serialReadString
    00000A1C 64F3                   MOV         R15,R4
          WiFi.c   574            
          WiFi.c   575            drawImage(picture);
    00000A1E B424                   BSR         _drawImage
    00000A20 64F3                   MOV         R15,R4
          WiFi.c   576            
          WiFi.c   577            
          WiFi.c   578            GetKey(&key);
    00000A22 D22E                   MOV.L       L928+36,R2 ; _GetKey
    00000A24 420B                   JSR         @R2
    00000A26 64F3                   MOV         R15,R4
          WiFi.c   579    
          WiFi.c   580            if (key == 30002) {
    00000A28 9346                   MOV.W       L928,R3    ; H'7532
    00000A2A 62F2                   MOV.L       @R15,R2
    00000A2C 3230                   CMP/EQ      R3,R2
    00000A2E 8B03                   BF          L848
    00000A30              L705:
          WiFi.c   581                    return 0;
    00000A30 7F04                   ADD         #4,R15
    00000A32 4F26                   LDS.L       @R15+,PR
    00000A34 000B                   RTS




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 06-Jan-2019 21:51:53  PAGE   34


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000A36 E000                   MOV         #0,R0
    00000A38              L848:                             
          WiFi.c   582            }
          WiFi.c   583            else if (key == 30004) {
    00000A38 923F                   MOV.W       L928+2,R2  ; H'7534
    00000A3A 61F2                   MOV.L       @R15,R1
    00000A3C 3120                   CMP/EQ      R2,R1
    00000A3E 8B02                   BF          L847
          WiFi.c   584                    downloadFile();
    00000A40 B005                   BSR         _downloadFile
    00000A42 0009                   NOP
          WiFi.c   585                    return 1;
    00000A44 E001                   MOV         #1,R0
          WiFi.c   586            }
          WiFi.c   587    }
    00000A46              L847:                             
    00000A46 7F04                   ADD         #4,R15
    00000A48 4F26                   LDS.L       @R15+,PR
    00000A4A 000B                   RTS
    00000A4C 0009                   NOP
          WiFi.c   588    
          WiFi.c   589    void downloadFile() {
    00000A4E              _downloadFile:                   ; function: downloadFile
                                                           ; frame size=332
                                                           ; used runtime library name:
                                                           ; __muld, __divdr, __dtos, __utod
    00000A4E 2FE6                   MOV.L       R14,@-R15
    00000A50 2FD6                   MOV.L       R13,@-R15
    00000A52 2FC6                   MOV.L       R12,@-R15
    00000A54 2FB6                   MOV.L       R11,@-R15
          WiFi.c   590        int fileHandle;
          WiFi.c   591        unsigned int counter = 0, contentLength = 0;
    00000A56 EB00                   MOV         #0,R11
          WiFi.c   592        unsigned char data[256];
          WiFi.c   593        short dataSize;
          WiFi.c   594    
          WiFi.c   595            sendCommand("DOWNLOAD");
    00000A58 D421                   MOV.L       L928+40,R4 ; L573
    00000A5A 2FA6                   MOV.L       R10,@-R15
    00000A5C 2F96                   MOV.L       R9,@-R15
    00000A5E 2F86                   MOV.L       R8,@-R15
    00000A60 4F22                   STS.L       PR,@-R15
    00000A62 902B                   MOV.W       L928+4,R0  ; H'FEF8
    00000A64 3F0C                   ADD         R0,R15
    00000A66 B0BE                   BSR         _sendCommand
    00000A68 6DB3                   MOV         R11,R13
          WiFi.c   596                   
          WiFi.c   597        receiveStatus();
    00000A6A D216                   MOV.L       L928+12,R2 ; _receiveStatus
    00000A6C 420B                   JSR         @R2
    00000A6E 0009                   NOP
          WiFi.c   598                                                    
          WiFi.c   599        if (memcmp(status,"OK",2)!=0){
    00000A70 D516                   MOV.L       L928+20,R5 ; L455
    00000A72 D417                   MOV.L       L928+24,R4 ; _status
    00000A74 D317                   MOV.L       L928+28,R3 ; _memcmp
    00000A76 430B                   JSR         @R3




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 06-Jan-2019 21:51:53  PAGE   35


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000A78 E602                   MOV         #2,R6
    00000A7A 2008                   TST         R0,R0
    00000A7C 8901                   BT          L929
    00000A7E A0A5                   BRA         L852
    00000A80 0009                   NOP
    00000A82              L929:                             
          WiFi.c   600                    return;
          WiFi.c   601        }
          WiFi.c   602        serialSendString(buf);
    00000A82 DE18                   MOV.L       L928+44,R14; _buf
    00000A84 B174                   BSR         _serialSendString
    00000A86 64E3                   MOV         R14,R4
          WiFi.c   603    
          WiFi.c   604        Bdisp_AllClr_DDVRAM();
    00000A88 D213                   MOV.L       L928+32,R2 ; _Bdisp_AllClr_DDVRAM
    00000A8A 420B                   JSR         @R2
    00000A8C 0009                   NOP
          WiFi.c   605    
          WiFi.c   606        memset(buf, 0, sizeof buf);
    00000A8E E500                   MOV         #0,R5
    00000A90 D315                   MOV.L       L928+48,R3 ; _memset
    00000A92 9614                   MOV.W       L928+6,R6  ; H'01F4
    00000A94 430B                   JSR         @R3
    00000A96 64E3                   MOV         R14,R4
    00000A98 DA14                   MOV.L       L928+52,R10; _Serial_GetReceivedBytesAvailable
    00000A9A DC15                   MOV.L       L928+56,R12; _Serial_ReadOneByte
          WiFi.c   607    
          WiFi.c   608        while(1) {
    00000A9C              L854:                             
          WiFi.c   609            if (Serial_GetReceivedBytesAvailable() > 0) {
    00000A9C 4A0B                   JSR         @R10
    00000A9E 0009                   NOP
    00000AA0 4015                   CMP/PL      R0
    00000AA2 8BFB                   BF          L854
          WiFi.c   610                unsigned char c;
          WiFi.c   611                Serial_ReadOneByte(&c);
    00000AA4 4C0B                   JSR         @R12
    00000AA6 64F3                   MOV         R15,R4
          WiFi.c   612    
          WiFi.c   613                if (c == 0) {
    00000AA8 62F0                   MOV.B       @R15,R2
    00000AAA 2228                   TST         R2,R2
    00000AAC 8922                   BT          L857
          WiFi.c   614                    break;
          WiFi.c   615                } else {
          WiFi.c   616                    buf[counter] = c;
    00000AAE 60E3                   MOV         R14,R0
    00000AB0 63F0                   MOV.B       @R15,R3
    00000AB2 0D34                   MOV.B       R3,@(R0,R13)
    00000AB4 AFF2                   BRA         L854
          WiFi.c   617                    counter = counter + 1;
    00000AB6 7D01                   ADD         #1,R13
    00000AB8              L928:                             
    00000AB8 7532                   .DATA.W     H'7532
    00000ABA 7534                   .DATA.W     H'7534
    00000ABC FEF8                   .DATA.W     H'FEF8
    00000ABE 01F4                   .DATA.W     H'01F4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 06-Jan-2019 21:51:53  PAGE   36


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000AC0 <00000000>             .DATA.L     L563
    00000AC4 <00000000>             .DATA.L     _receiveStatus
    00000AC8 <00000000>             .DATA.L     _receiveStatusTimeout
    00000ACC <00000000>             .DATA.L     L455
    00000AD0 <00000000>             .DATA.L     _status
    00000AD4 <00000000>             .DATA.L     _memcmp
    00000AD8 <00000000>             .DATA.L     _Bdisp_AllClr_DDVRAM
    00000ADC <00000000>             .DATA.L     _GetKey
    00000AE0 <00000000>             .DATA.L     L573
    00000AE4 <00000000>             .DATA.L     _buf
    00000AE8 <00000000>             .DATA.L     _memset
    00000AEC <00000000>             .DATA.L     _Serial_GetReceivedBytesAvailable
    00000AF0 <00000000>             .DATA.L     _Serial_ReadOneByte
    00000AF4              L857:                             
          WiFi.c   618                }
          WiFi.c   619            }
          WiFi.c   620        }
          WiFi.c   621    
          WiFi.c   622        contentLength = atoi(buf);
    00000AF4 D34A                   MOV.L       L930+6,R3  ; _atoi
    00000AF6 430B                   JSR         @R3
    00000AF8 64E3                   MOV         R14,R4
    00000AFA 6C03                   MOV         R0,R12
          WiFi.c   623    
          WiFi.c   624        counter = 0;
          WiFi.c   625    
          WiFi.c   626        Bfile_CreateFile(filename, contentLength);
    00000AFC D449                   MOV.L       L930+10,R4 ; _filename
    00000AFE 6DB3                   MOV         R11,R13
    00000B00 D249                   MOV.L       L930+14,R2 ; _Bfile_CreateFile
    00000B02 420B                   JSR         @R2
    00000B04 6503                   MOV         R0,R5
          WiFi.c   627        fileHandle = Bfile_OpenFile(filename, _OPENMODE_READWRITE);
    00000B06 D447                   MOV.L       L930+10,R4 ; _filename
    00000B08 D348                   MOV.L       L930+18,R3 ; _Bfile_OpenFile
    00000B0A 430B                   JSR         @R3
    00000B0C E503                   MOV         #3,R5
          WiFi.c   628    
          WiFi.c   629        while(counter < contentLength) {
    00000B0E E200                   MOV         #0,R2
    00000B10 D847                   MOV.L       L930+22,R8 ; _Print
    00000B12 32C2                   CMP/HS      R12,R2
    00000B14 D947                   MOV.L       L930+26,R9 ; _locate
    00000B16 8D53                   BT/S        L859
    00000B18 6A03                   MOV         R0,R10
    00000B1A              L860:                             
          WiFi.c   630                    unsigned char* d;
          WiFi.c   631                    short received;
          WiFi.c   632                    int writeResult;
          WiFi.c   633                    
          WiFi.c   634                    unsigned int key=0;
          WiFi.c   635                    
          WiFi.c   636            //d=receiveData(5000,&received); DEBUG- wieder auskommentieren
          WiFi.c   637                    if(d==0){
    00000B1A 2FF8                   TST         R15,R15
    00000B1C 8F09                   BF/S        L861
    00000B1E 1FB1                   MOV.L       R11,@(4,R15)




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 06-Jan-2019 21:51:53  PAGE   37


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          WiFi.c   638                            Bfile_CloseFile(fileHandle);
    00000B20 D245                   MOV.L       L930+30,R2 ; _Bfile_CloseFile
    00000B22 420B                   JSR         @R2
    00000B24 64A3                   MOV         R10,R4
          WiFi.c   639                            //File löschen
          WiFi.c   640                            
          WiFi.c   641                            /*Bdisp_AllClr_DDVRAM();
          WiFi.c   642                            locate(1,8);
          WiFi.c   643                            memset(buf,0,100);
          WiFi.c   644                            memcpy(buf,counter,4);
          WiFi.c   645                            Print(buf);
          WiFi.c   646                            locate(1,6);
          WiFi.c   647                            memset(buf,0,100);
          WiFi.c   648                            memcpy(buf,checksumRec,4);
          WiFi.c   649                            Print(buf);*/
          WiFi.c   650                            GetKey(&key);
    00000B26 64F3                   MOV         R15,R4
    00000B28 D344                   MOV.L       L930+34,R3 ; _GetKey
    00000B2A 430B                   JSR         @R3
    00000B2C 7404                   ADD         #4,R4
          WiFi.c   651                            
          WiFi.c   652                            return;
    00000B2E A04D                   BRA         L852
    00000B30 0009                   NOP
    00000B32              L861:                             
          WiFi.c   653                    }
          WiFi.c   654                    counter = counter + received;
    00000B32 62FF                   EXTS.W      R15,R2
          WiFi.c   655    
          WiFi.c   656                    Bdisp_AllClr_DDVRAM();
    00000B34 D342                   MOV.L       L930+38,R3 ; _Bdisp_AllClr_DDVRAM
    00000B36 430B                   JSR         @R3
    00000B38 3D2C                   ADD         R2,R13
          WiFi.c   657    
          WiFi.c   658                    locate(4, 2);
    00000B3A E502                   MOV         #2,R5
    00000B3C 490B                   JSR         @R9
    00000B3E E404                   MOV         #4,R4
          WiFi.c   659                    Print((unsigned char*) "Downloading...");
    00000B40 D440                   MOV.L       L930+42,R4 ; L587
    00000B42 480B                   JSR         @R8
    00000B44 0009                   NOP
          WiFi.c   660    
          WiFi.c   661                    drawProgressBar(30, counter * 1.0 / contentLength);
    00000B46 60D3                   MOV         R13,R0
    00000B48 D23F                   MOV.L       L930+46,R2 ; __utod
    00000B4A 7FE8                   ADD         #-24,R15
    00000B4C 420B                   JSR         @R2
    00000B4E 2FF6                   MOV.L       R15,@-R15
    00000B50 D13F                   MOV.L       L930+54,R1 ; __muld
    00000B52 E300                   MOV         #0,R3
    00000B54 2F36                   MOV.L       R3,@-R15
    00000B56 D33D                   MOV.L       L930+50,R3 ; H'3FF00000
    00000B58 2F36                   MOV.L       R3,@-R15
    00000B5A 62F3                   MOV         R15,R2
    00000B5C 7210                   ADD         #16,R2
    00000B5E 410B                   JSR         @R1




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 06-Jan-2019 21:51:53  PAGE   38


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000B60 2F26                   MOV.L       R2,@-R15
    00000B62 60C3                   MOV         R12,R0
    00000B64 D338                   MOV.L       L930+46,R3 ; __utod
    00000B66 7FF8                   ADD         #-8,R15
    00000B68 430B                   JSR         @R3
    00000B6A 2FF6                   MOV.L       R15,@-R15
    00000B6C D139                   MOV.L       L930+58,R1 ; __divdr
    00000B6E 62F3                   MOV         R15,R2
    00000B70 7210                   ADD         #16,R2
    00000B72 410B                   JSR         @R1
    00000B74 2F26                   MOV.L       R2,@-R15
    00000B76 D338                   MOV.L       L930+62,R3 ; __dtos
    00000B78 430B                   JSR         @R3
    00000B7A 0009                   NOP
    00000B7C 6503                   MOV         R0,R5
    00000B7E B257                   BSR         _drawProgressBar
    00000B80 E41E                   MOV         #30,R4
          WiFi.c   662    
          WiFi.c   663                    sprintf(buf, "%d/%d", counter, contentLength);
    00000B82 2FC6                   MOV.L       R12,@-R15
    00000B84 2FD6                   MOV.L       R13,@-R15
    00000B86 D335                   MOV.L       L930+66,R3 ; L588
    00000B88 D235                   MOV.L       L930+70,R2 ; _sprintf
    00000B8A 2F36                   MOV.L       R3,@-R15
    00000B8C 420B                   JSR         @R2
    00000B8E 64E3                   MOV         R14,R4
          WiFi.c   664                    locate(22 - strlen(buf), 8);
    00000B90 D334                   MOV.L       L930+74,R3 ; _strlen
    00000B92 7F0C                   ADD         #12,R15
    00000B94 430B                   JSR         @R3
    00000B96 64E3                   MOV         R14,R4
    00000B98 600B                   NEG         R0,R0
    00000B9A 6403                   MOV         R0,R4
    00000B9C 7416                   ADD         #22,R4
    00000B9E 490B                   JSR         @R9
    00000BA0 E508                   MOV         #8,R5
          WiFi.c   665                    Print(buf);
    00000BA2 480B                   JSR         @R8
    00000BA4 64E3                   MOV         R14,R4
          WiFi.c   666    
          WiFi.c   667                    writeResult = Bfile_WriteFile(fileHandle, d, received);
    00000BA6 66FF                   EXTS.W      R15,R6
    00000BA8 D22F                   MOV.L       L930+78,R2 ; _Bfile_WriteFile
    00000BAA 65F3                   MOV         R15,R5
    00000BAC 420B                   JSR         @R2
    00000BAE 64A3                   MOV         R10,R4
          WiFi.c   668                    free(d);
    00000BB0 D32E                   MOV.L       L930+82,R3 ; _free
    00000BB2 430B                   JSR         @R3
    00000BB4 64F3                   MOV         R15,R4
          WiFi.c   669                    
          WiFi.c   670                    Bdisp_PutDisp_DD();
    00000BB6 D22E                   MOV.L       L930+86,R2 ; _Bdisp_PutDisp_DD
    00000BB8 420B                   JSR         @R2
    00000BBA 0009                   NOP
    00000BBC 3DC2                   CMP/HS      R12,R13
    00000BBE 8BAC                   BF          L860




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 06-Jan-2019 21:51:53  PAGE   39


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000BC0              L859:                             
          WiFi.c   671                    
          WiFi.c   672        }
          WiFi.c   673    
          WiFi.c   674        Bfile_CloseFile(fileHandle);
    00000BC0 D21D                   MOV.L       L930+30,R2 ; _Bfile_CloseFile
    00000BC2 420B                   JSR         @R2
    00000BC4 64A3                   MOV         R10,R4
          WiFi.c   675    
          WiFi.c   676        App_RegisterAddins();
    00000BC6 D32B                   MOV.L       L930+90,R3 ; _App_RegisterAddins
    00000BC8 430B                   JSR         @R3
    00000BCA 0009                   NOP
          WiFi.c   677    }
    00000BCC              L852:                             
    00000BCC 9125                   MOV.W       L930,R1    ; H'0108
    00000BCE 3F1C                   ADD         R1,R15
    00000BD0 4F26                   LDS.L       @R15+,PR
    00000BD2 68F6                   MOV.L       @R15+,R8
    00000BD4 69F6                   MOV.L       @R15+,R9
    00000BD6 6AF6                   MOV.L       @R15+,R10
    00000BD8 6BF6                   MOV.L       @R15+,R11
    00000BDA 6CF6                   MOV.L       @R15+,R12
    00000BDC 6DF6                   MOV.L       @R15+,R13
    00000BDE 000B                   RTS
    00000BE0 6EF6                   MOV.L       @R15+,R14
          WiFi.c   678    
          WiFi.c   679    void getAppByID(){
    00000BE2              _getAppByID:                     ; function: getAppByID
                                                           ; frame size=0
          WiFi.c   680    
          WiFi.c   681    }
    00000BE2 000B                   RTS
    00000BE4 0009                   NOP
          WiFi.c   682    
          WiFi.c   683    void sendCommand(unsigned char* command) {  //überarbeitet
    00000BE6              _sendCommand:                    ; function: sendCommand
                                                           ; frame size=8
    00000BE6 4F22                   STS.L       PR,@-R15
    00000BE8 2F46                   MOV.L       R4,@-R15
          WiFi.c   684        Serial_BufferedTransmitOneByte((unsigned char) 219);
    00000BEA 9417                   MOV.W       L930+2,R4  ; H'00DB
    00000BEC D322                   MOV.L       L930+94,R3 ; _Serial_BufferedTransmitOneByte
    00000BEE 430B                   JSR         @R3
    00000BF0 0009                   NOP
          WiFi.c   685        Serial_BufferedTransmitNBytes(command, strlen(command)+1);
    00000BF2 D31C                   MOV.L       L930+74,R3 ; _strlen
    00000BF4 430B                   JSR         @R3
    00000BF6 64F2                   MOV.L       @R15,R4
    00000BF8 64F2                   MOV.L       @R15,R4
    00000BFA 6503                   MOV         R0,R5
    00000BFC D31F                   MOV.L       L930+98,R3 ; _Serial_BufferedTransmitNBytes
    00000BFE 7F04                   ADD         #4,R15
    00000C00 7501                   ADD         #1,R5
    00000C02 432B                   JMP         @R3
    00000C04 4F26                   LDS.L       @R15+,PR
          WiFi.c   686    }




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 06-Jan-2019 21:51:53  PAGE   40


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          WiFi.c   687    
          WiFi.c   688    void sendAcknowledgement(unsigned char* state){ 
    00000C06              _sendAcknowledgement:            ; function: sendAcknowledgement
                                                           ; frame size=8
    00000C06 4F22                   STS.L       PR,@-R15
    00000C08 2F46                   MOV.L       R4,@-R15
          WiFi.c   689            Serial_BufferedTransmitOneByte((unsigned char)220);
    00000C0A 9408                   MOV.W       L930+4,R4  ; H'00DC
    00000C0C D31A                   MOV.L       L930+94,R3 ; _Serial_BufferedTransmitOneByte
    00000C0E 430B                   JSR         @R3
    00000C10 0009                   NOP
          WiFi.c   690            serialSendString(state);
    00000C12 64F2                   MOV.L       @R15,R4
    00000C14 7F04                   ADD         #4,R15
    00000C16 A0AB                   BRA         _serialSendString
    00000C18 4F26                   LDS.L       @R15+,PR
    00000C1A              L930:                             
    00000C1A 0108                   .DATA.W     H'0108
    00000C1C 00DB                   .DATA.W     H'00DB
    00000C1E 00DC                   .DATA.W     H'00DC
    00000C20 <00000000>             .DATA.L     _atoi
    00000C24 <00000000>             .DATA.L     _filename
    00000C28 <00000000>             .DATA.L     _Bfile_CreateFile
    00000C2C <00000000>             .DATA.L     _Bfile_OpenFile
    00000C30 <00000000>             .DATA.L     _Print
    00000C34 <00000000>             .DATA.L     _locate
    00000C38 <00000000>             .DATA.L     _Bfile_CloseFile
    00000C3C <00000000>             .DATA.L     _GetKey
    00000C40 <00000000>             .DATA.L     _Bdisp_AllClr_DDVRAM
    00000C44 <00000000>             .DATA.L     L587
    00000C48 <00000000>             .DATA.L     __utod
    00000C4C 3FF00000               .DATA.L     H'3FF00000
    00000C50 <00000000>             .DATA.L     __muld
    00000C54 <00000000>             .DATA.L     __divdr
    00000C58 <00000000>             .DATA.L     __dtos
    00000C5C <00000000>             .DATA.L     L588
    00000C60 <00000000>             .DATA.L     _sprintf
    00000C64 <00000000>             .DATA.L     _strlen
    00000C68 <00000000>             .DATA.L     _Bfile_WriteFile
    00000C6C <00000000>             .DATA.L     _free
    00000C70 <00000000>             .DATA.L     _Bdisp_PutDisp_DD
    00000C74 <00000000>             .DATA.L     _App_RegisterAddins
    00000C78 <00000000>             .DATA.L     _Serial_BufferedTransmitOneByte
    00000C7C <00000000>             .DATA.L     _Serial_BufferedTransmitNBytes
          WiFi.c   691    }
          WiFi.c   692    
          WiFi.c   693    void readString(int x, int y, bool search) {
    00000C80              _readString:                     ; function: readString
                                                           ; frame size=68
    00000C80 2FE6                   MOV.L       R14,@-R15
    00000C82 2FD6                   MOV.L       R13,@-R15
    00000C84 2FC6                   MOV.L       R12,@-R15
          WiFi.c   694        unsigned int key;
          WiFi.c   695        int numChars = 0;
    00000C86 EC00                   MOV         #0,R12
          WiFi.c   696        DISPBOX clearBox;
          WiFi.c   697        memset(buf, 0, sizeof buf);




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 06-Jan-2019 21:51:53  PAGE   41


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000C88 DD41                   MOV.L       L931+10,R13; _buf
    00000C8A 6EC3                   MOV         R12,R14
    00000C8C D341                   MOV.L       L931+14,R3 ; _memset
    00000C8E 2FB6                   MOV.L       R11,@-R15
    00000C90 2FA6                   MOV.L       R10,@-R15
    00000C92 6B43                   MOV         R4,R11
    00000C94 2F96                   MOV.L       R9,@-R15
    00000C96 6A53                   MOV         R5,R10
    00000C98 2F86                   MOV.L       R8,@-R15
    00000C9A 65C3                   MOV         R12,R5
    00000C9C 4F22                   STS.L       PR,@-R15
    00000C9E 7FDC                   ADD         #-36,R15
    00000CA0 1F61                   MOV.L       R6,@(4,R15)
    00000CA2 9670                   MOV.W       L931,R6    ; H'01F4
    00000CA4 430B                   JSR         @R3
    00000CA6 64D3                   MOV         R13,R4
          WiFi.c   698    
          WiFi.c   699        Keyboard_ClrBuffer();
    00000CA8 D23B                   MOV.L       L931+18,R2 ; _Keyboard_ClrBuffer
    00000CAA 420B                   JSR         @R2
    00000CAC 0009                   NOP
    00000CAE 63B3                   MOV         R11,R3
    00000CB0 986A                   MOV.W       L931+2,R8  ; H'7536
    00000CB2 61A3                   MOV         R10,R1
    00000CB4 73FF                   ADD         #-1,R3
    00000CB6 6233                   MOV         R3,R2
    00000CB8 4300                   SHLL        R3
    00000CBA 4208                   SHLL2       R2
    00000CBC 332C                   ADD         R2,R3
    00000CBE 62A3                   MOV         R10,R2
    00000CC0 1F33                   MOV.L       R3,@(12,R15)
    00000CC2 6983                   MOV         R8,R9
    00000CC4 72FF                   ADD         #-1,R2
    00000CC6 4208                   SHLL2       R2
    00000CC8 4200                   SHLL        R2
    00000CCA 7913                   ADD         #19,R9
    00000CCC 1F24                   MOV.L       R2,@(16,R15)
    00000CCE 4108                   SHLL2       R1
    00000CD0 4100                   SHLL        R1
    00000CD2 1F12                   MOV.L       R1,@(8,R15)
          WiFi.c   700    
          WiFi.c   701        while(1) {
    00000CD4              L863:                             
          WiFi.c   702            GetKey(&key);
    00000CD4 D231                   MOV.L       L931+22,R2 ; _GetKey
    00000CD6 420B                   JSR         @R2
    00000CD8 64F3                   MOV         R15,R4
          WiFi.c   703    
          WiFi.c   704            clearBox.left = (x - 1) * 6;
    00000CDA 53F3                   MOV.L       @(12,R15),R3
    00000CDC 1F35                   MOV.L       R3,@(20,R15)
          WiFi.c   705            clearBox.top = (y - 1) * 8;
          WiFi.c   706            clearBox.right = (x + numChars - 1) * 6;
    00000CDE 63B3                   MOV         R11,R3
    00000CE0 52F4                   MOV.L       @(16,R15),R2
    00000CE2 33EC                   ADD         R14,R3
    00000CE4 1F26                   MOV.L       R2,@(24,R15)




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 06-Jan-2019 21:51:53  PAGE   42


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000CE6 73FF                   ADD         #-1,R3
    00000CE8 6233                   MOV         R3,R2
    00000CEA 4300                   SHLL        R3
    00000CEC 4208                   SHLL2       R2
    00000CEE 332C                   ADD         R2,R3
    00000CF0 1F37                   MOV.L       R3,@(28,R15)
          WiFi.c   707            clearBox.bottom = y * 8;
    00000CF2 52F2                   MOV.L       @(8,R15),R2
          WiFi.c   708    
          WiFi.c   709            if (key == 30004 || key == 30002) { // EXE Key
    00000CF4 9349                   MOV.W       L931+4,R3  ; H'7534
    00000CF6 1F28                   MOV.L       R2,@(32,R15)
    00000CF8 61F2                   MOV.L       @R15,R1
    00000CFA 3130                   CMP/EQ      R3,R1
    00000CFC 892E                   BT          L866
    00000CFE 9245                   MOV.W       L931+6,R2  ; H'7532
    00000D00 61F2                   MOV.L       @R15,R1
    00000D02 3120                   CMP/EQ      R2,R1
    00000D04 892A                   BT          L866
          WiFi.c   710                break;
          WiFi.c   711            } else if (key == 30025) {
    00000D06 63F2                   MOV.L       @R15,R3
    00000D08 3390                   CMP/EQ      R9,R3
    00000D0A 8B06                   BF          L868
          WiFi.c   712                numChars = numChars - 1;
    00000D0C 7EFF                   ADD         #-1,R14
          WiFi.c   713                if (numChars < 0) {
    00000D0E 4E11                   CMP/PZ      R14
    00000D10 8900                   BT          L869
          WiFi.c   714                    numChars = 0;
    00000D12 6EC3                   MOV         R12,R14
    00000D14              L869:                             
          WiFi.c   715                }
          WiFi.c   716    
          WiFi.c   717                buf[numChars] = 0;
    00000D14 60E3                   MOV         R14,R0
    00000D16 A00B                   BRA         L867
    00000D18 0DC4                   MOV.B       R12,@(R0,R13)
    00000D1A              L868:                             
          WiFi.c   718            } else if (key == 30006 || key == 30007) { // shift alpha
    00000D1A 62F2                   MOV.L       @R15,R2
    00000D1C 3280                   CMP/EQ      R8,R2
    00000D1E 8907                   BT          L867
    00000D20 9135                   MOV.W       L931+8,R1  ; H'7537
    00000D22 63F2                   MOV.L       @R15,R3
    00000D24 3310                   CMP/EQ      R1,R3
    00000D26 8903                   BT          L867
          WiFi.c   719    
          WiFi.c   720            } else {
          WiFi.c   721                unsigned char c = (unsigned char) key;
    00000D28 64F2                   MOV.L       @R15,R4
          WiFi.c   722                buf[numChars] = c;
    00000D2A 60E3                   MOV         R14,R0
    00000D2C 0D44                   MOV.B       R4,@(R0,R13)
          WiFi.c   723                numChars = numChars + 1;
    00000D2E 7E01                   ADD         #1,R14
    00000D30              L867:                             




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 06-Jan-2019 21:51:53  PAGE   43


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          WiFi.c   724            }
          WiFi.c   725                    
          WiFi.c   726                    
          WiFi.c   727                    
          WiFi.c   728            Bdisp_AreaClr_DDVRAM(&clearBox);
    00000D30 D31B                   MOV.L       L931+26,R3 ; _Bdisp_AreaClr_DDVRAM
    00000D32 64F3                   MOV         R15,R4
    00000D34 430B                   JSR         @R3
    00000D36 7414                   ADD         #20,R4
          WiFi.c   729            locate(x, y);
    00000D38 D21A                   MOV.L       L931+30,R2 ; _locate
    00000D3A 65A3                   MOV         R10,R5
    00000D3C 420B                   JSR         @R2
    00000D3E 64B3                   MOV         R11,R4
          WiFi.c   730            Print(buf);
    00000D40 D319                   MOV.L       L931+34,R3 ; _Print
    00000D42 430B                   JSR         @R3
    00000D44 64D3                   MOV         R13,R4
          WiFi.c   731            if(search==true){
    00000D46 50F1                   MOV.L       @(4,R15),R0
    00000D48 8801                   CMP/EQ      #1,R0
    00000D4A 8BC3                   BF          L863
          WiFi.c   732                 Bdisp_DrawLineVRAM(0,7,127,7);
    00000D4C D217                   MOV.L       L931+38,R2 ; _Bdisp_DrawLineVRAM
    00000D4E E707                   MOV         #7,R7
    00000D50 E67F                   MOV         #127,R6
    00000D52 6573                   MOV         R7,R5
    00000D54 420B                   JSR         @R2
    00000D56 E400                   MOV         #0,R4
    00000D58 AFBC                   BRA         L863
    00000D5A 0009                   NOP
    00000D5C              L866:                             
          WiFi.c   733            }
          WiFi.c   734        }
          WiFi.c   735    }
    00000D5C 7F24                   ADD         #36,R15
    00000D5E 4F26                   LDS.L       @R15+,PR
    00000D60 68F6                   MOV.L       @R15+,R8
    00000D62 69F6                   MOV.L       @R15+,R9
    00000D64 6AF6                   MOV.L       @R15+,R10
    00000D66 6BF6                   MOV.L       @R15+,R11
    00000D68 6CF6                   MOV.L       @R15+,R12
    00000D6A 6DF6                   MOV.L       @R15+,R13
    00000D6C 000B                   RTS
    00000D6E 6EF6                   MOV.L       @R15+,R14
          WiFi.c   736    
          WiFi.c   737    void serialSendString(unsigned char* buffer) {
    00000D70              _serialSendString:               ; function: serialSendString
                                                           ; frame size=8
    00000D70 4F22                   STS.L       PR,@-R15
          WiFi.c   738        unsigned int counter = 0;
          WiFi.c   739            
          WiFi.c   740            Serial_BufferedTransmitNBytes(buffer,strlen(buffer)+1);
    00000D72 D30F                   MOV.L       L931+42,R3 ; _strlen
    00000D74 430B                   JSR         @R3
    00000D76 2F46                   MOV.L       R4,@-R15
    00000D78 64F2                   MOV.L       @R15,R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 06-Jan-2019 21:51:53  PAGE   44


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000D7A 6503                   MOV         R0,R5
    00000D7C D30D                   MOV.L       L931+46,R3 ; _Serial_BufferedTransmitNBytes
    00000D7E 7F04                   ADD         #4,R15
    00000D80 7501                   ADD         #1,R5
    00000D82 432B                   JMP         @R3
    00000D84 4F26                   LDS.L       @R15+,PR
    00000D86              L931:                             
    00000D86 01F4                   .DATA.W     H'01F4
    00000D88 7536                   .DATA.W     H'7536
    00000D8A 7534                   .DATA.W     H'7534
    00000D8C 7532                   .DATA.W     H'7532
    00000D8E 7537                   .DATA.W     H'7537
    00000D90 <00000000>             .DATA.L     _buf
    00000D94 <00000000>             .DATA.L     _memset
    00000D98 <00000000>             .DATA.L     _Keyboard_ClrBuffer
    00000D9C <00000000>             .DATA.L     _GetKey
    00000DA0 <00000000>             .DATA.L     _Bdisp_AreaClr_DDVRAM
    00000DA4 <00000000>             .DATA.L     _locate
    00000DA8 <00000000>             .DATA.L     _Print
    00000DAC <00000000>             .DATA.L     _Bdisp_DrawLineVRAM
    00000DB0 <00000000>             .DATA.L     _strlen
    00000DB4 <00000000>             .DATA.L     _Serial_BufferedTransmitNBytes
          WiFi.c   741    }
          WiFi.c   742    
          WiFi.c   743    void serialReadString(unsigned char* buffer){ //überarbeitet
    00000DB8              _serialReadString:               ; function: serialReadString
                                                           ; frame size=4
    00000DB8 2F46                   MOV.L       R4,@-R15
          WiFi.c   744            serialReadStringTimeout(100, buffer);
    00000DBA 6543                   MOV         R4,R5
    00000DBC E464                   MOV         #100,R4
    00000DBE 7F04                   ADD         #4,R15
          WiFi.c   745    }
          WiFi.c   746    
          WiFi.c   747    void serialReadStringTimeout(int timeout, unsigned char* buffer) { //überarbeitet
    00000DC0              _serialReadStringTimeout:        ; function: serialReadStringTimeout
                                                           ; frame size=40
    00000DC0 2FE6                   MOV.L       R14,@-R15
    00000DC2 2FD6                   MOV.L       R13,@-R15
    00000DC4 2FC6                   MOV.L       R12,@-R15
    00000DC6 6D53                   MOV         R5,R13
          WiFi.c   748        unsigned int counter = 0;
          WiFi.c   749        int lastTicks = RTC_GetTicks();
    00000DC8 D318                   MOV.L       L932,R3    ; _RTC_GetTicks
    00000DCA EC00                   MOV         #0,R12
    00000DCC 2FB6                   MOV.L       R11,@-R15
    00000DCE 2FA6                   MOV.L       R10,@-R15
    00000DD0 2F96                   MOV.L       R9,@-R15
    00000DD2 2F86                   MOV.L       R8,@-R15
    00000DD4 4F22                   STS.L       PR,@-R15
    00000DD6 7FF8                   ADD         #-8,R15
    00000DD8 1F41                   MOV.L       R4,@(4,R15)
    00000DDA 430B                   JSR         @R3
    00000DDC 6EC3                   MOV         R12,R14
    00000DDE 6A03                   MOV         R0,R10
          WiFi.c   750        memset(buffer, 0, sizeof buffer);
    00000DE0 D213                   MOV.L       L932+4,R2  ; _memset




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 06-Jan-2019 21:51:53  PAGE   45


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000DE2 E604                   MOV         #4,R6
    00000DE4 65E3                   MOV         R14,R5
    00000DE6 420B                   JSR         @R2
    00000DE8 64D3                   MOV         R13,R4
    00000DEA D812                   MOV.L       L932+8,R8  ; _Serial_ReadOneByte
    00000DEC D912                   MOV.L       L932+12,R9 ; _Serial_GetReceivedBytesAvailable
    00000DEE DB13                   MOV.L       L932+16,R11; _RTC_Elapsed_ms
          WiFi.c   751    
          WiFi.c   752        while(true) {
    00000DF0              L876:                             
          WiFi.c   753            
          WiFi.c   754            if (Serial_GetReceivedBytesAvailable() > 0) {
    00000DF0 490B                   JSR         @R9
    00000DF2 0009                   NOP
    00000DF4 4015                   CMP/PL      R0
    00000DF6 8B08                   BF          L877
          WiFi.c   755                unsigned char c;
          WiFi.c   756                Serial_ReadOneByte(&c);
    00000DF8 480B                   JSR         @R8
    00000DFA 64F3                   MOV         R15,R4
          WiFi.c   757    
          WiFi.c   758                buffer[counter] = c;
    00000DFC 63F0                   MOV.B       @R15,R3
    00000DFE 60D3                   MOV         R13,R0
    00000E00 0E34                   MOV.B       R3,@(R0,R14)
          WiFi.c   759                counter = counter + 1;
          WiFi.c   760    
          WiFi.c   761                if (c == 0) {
    00000E02 62F0                   MOV.B       @R15,R2
    00000E04 2228                   TST         R2,R2
    00000E06 8D07                   BT/S        L879
    00000E08 7E01                   ADD         #1,R14
    00000E0A              L877:                             
          WiFi.c   762                    return;
          WiFi.c   763                }
          WiFi.c   764            }
          WiFi.c   765    
          WiFi.c   766            if (RTC_Elapsed_ms(lastTicks, timeout)) { // 100 ms timeout Standard
    00000E0A 55F1                   MOV.L       @(4,R15),R5
    00000E0C 4B0B                   JSR         @R11
    00000E0E 64A3                   MOV         R10,R4
    00000E10 2008                   TST         R0,R0
    00000E12 89ED                   BT          L876
          WiFi.c   767                buffer[counter]=0;
    00000E14 60D3                   MOV         R13,R0
    00000E16 0EC4                   MOV.B       R12,@(R0,R14)
          WiFi.c   768                return;
    00000E18              L879:                             
          WiFi.c   769            }
          WiFi.c   770        }
          WiFi.c   771    }
    00000E18 7F08                   ADD         #8,R15
    00000E1A 4F26                   LDS.L       @R15+,PR
    00000E1C 68F6                   MOV.L       @R15+,R8
    00000E1E 69F6                   MOV.L       @R15+,R9
    00000E20 6AF6                   MOV.L       @R15+,R10
    00000E22 6BF6                   MOV.L       @R15+,R11




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 06-Jan-2019 21:51:53  PAGE   46


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000E24 6CF6                   MOV.L       @R15+,R12
    00000E26 6DF6                   MOV.L       @R15+,R13
    00000E28 000B                   RTS
    00000E2A 6EF6                   MOV.L       @R15+,R14
    00000E2C              L932:                             
    00000E2C <00000000>             .DATA.L     _RTC_GetTicks
    00000E30 <00000000>             .DATA.L     _memset
    00000E34 <00000000>             .DATA.L     _Serial_ReadOneByte
    00000E38 <00000000>             .DATA.L     _Serial_GetReceivedBytesAvailable
    00000E3C <00000000>             .DATA.L     _RTC_Elapsed_ms
          WiFi.c   772    
          WiFi.c   773    char keyToChar(int key, bool shift, bool alpha) {
    00000E40              _keyToChar:                      ; function: keyToChar
                                                           ; frame size=0
          WiFi.c   774        unsigned char c = 1;
          WiFi.c   775    
          WiFi.c   776        if (shift) {
    00000E40 2558                   TST         R5,R5
    00000E42 8D02                   BT/S        L933
    00000E44 E701                   MOV         #1,R7
    00000E46 A097                   BRA         L882
    00000E48 0009                   NOP
    00000E4A              L933:                             
          WiFi.c   777    
          WiFi.c   778        } else if (alpha) {
    00000E4A 2668                   TST         R6,R6
    00000E4C 8B01                   BF          L934
    00000E4E A092                   BRA         L883
    00000E50 0009                   NOP
    00000E52              L934:                             
          WiFi.c   779            switch (key) {
    00000E52 6043                   MOV         R4,R0
    00000E54 9141                   MOV.W       L935,R1    ; H'7531
    00000E56 3010                   CMP/EQ      R1,R0
    00000E58 8B01                   BF          L936
    00000E5A A054                   BRA         L730
    00000E5C 0009                   NOP
    00000E5E              L936:                             
    00000E5E 913D                   MOV.W       L935+2,R1  ; H'0095
    00000E60 3010                   CMP/EQ      R1,R0
    00000E62 8B01                   BF          L937
    00000E64 A051                   BRA         L731
    00000E66 0009                   NOP
    00000E68              L937:                             
    00000E68 9139                   MOV.W       L935+4,R1  ; H'0085
    00000E6A 3010                   CMP/EQ      R1,R0
    00000E6C 8B01                   BF          L938
    00000E6E A04E                   BRA         L732
    00000E70 0009                   NOP
    00000E72              L938:                             
    00000E72 9135                   MOV.W       L935+6,R1  ; H'0081
    00000E74 3010                   CMP/EQ      R1,R0
    00000E76 894C                   BT          L733
    00000E78 9133                   MOV.W       L935+8,R1  ; H'0082
    00000E7A 3010                   CMP/EQ      R1,R0
    00000E7C 894B                   BT          L734
    00000E7E 9131                   MOV.W       L935+10,R1 ; H'0083




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 06-Jan-2019 21:51:53  PAGE   47


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000E80 3010                   CMP/EQ      R1,R0
    00000E82 894A                   BT          L735
    00000E84 912F                   MOV.W       L935+12,R1 ; H'00BB
    00000E86 3010                   CMP/EQ      R1,R0
    00000E88 8949                   BT          L736
    00000E8A 912D                   MOV.W       L935+14,R1 ; H'755E
    00000E8C 3010                   CMP/EQ      R1,R0
    00000E8E 8948                   BT          L737
    00000E90 8828                   CMP/EQ      #40,R0
    00000E92 8948                   BT          L738
    00000E94 8829                   CMP/EQ      #41,R0
    00000E96 8948                   BT          L739
    00000E98 882C                   CMP/EQ      #44,R0
    00000E9A 8948                   BT          L740
    00000E9C 880E                   CMP/EQ      #14,R0
    00000E9E 8948                   BT          L741
    00000EA0 8837                   CMP/EQ      #55,R0
    00000EA2 8948                   BT          L742
    00000EA4 8838                   CMP/EQ      #56,R0
    00000EA6 8948                   BT          L743
    00000EA8 8839                   CMP/EQ      #57,R0
    00000EAA 8948                   BT          L744
    00000EAC 8834                   CMP/EQ      #52,R0
    00000EAE 8948                   BT          L745
    00000EB0 8835                   CMP/EQ      #53,R0
    00000EB2 8948                   BT          L746
    00000EB4 8836                   CMP/EQ      #54,R0
    00000EB6 8948                   BT          L747
    00000EB8 9117                   MOV.W       L935+16,R1 ; H'00A9
    00000EBA 3010                   CMP/EQ      R1,R0
    00000EBC 8947                   BT          L748
    00000EBE 9115                   MOV.W       L935+18,R1 ; H'00B9
    00000EC0 3010                   CMP/EQ      R1,R0
    00000EC2 8946                   BT          L749
    00000EC4 8831                   CMP/EQ      #49,R0
    00000EC6 8946                   BT          L750
    00000EC8 8832                   CMP/EQ      #50,R0
    00000ECA 8946                   BT          L751
    00000ECC 8833                   CMP/EQ      #51,R0
    00000ECE 8946                   BT          L752
    00000ED0 910D                   MOV.W       L935+20,R1 ; H'0089
    00000ED2 3010                   CMP/EQ      R1,R0
    00000ED4 8945                   BT          L753
    00000ED6 A00B                   BRA         L916
    00000ED8 0009                   NOP
    00000EDA              L935:                             
    00000EDA 7531                   .DATA.W     H'7531
    00000EDC 0095                   .DATA.W     H'0095
    00000EDE 0085                   .DATA.W     H'0085
    00000EE0 0081                   .DATA.W     H'0081
    00000EE2 0082                   .DATA.W     H'0082
    00000EE4 0083                   .DATA.W     H'0083
    00000EE6 00BB                   .DATA.W     H'00BB
    00000EE8 755E                   .DATA.W     H'755E
    00000EEA 00A9                   .DATA.W     H'00A9
    00000EEC 00B9                   .DATA.W     H'00B9
    00000EEE 0089                   .DATA.W     H'0089




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 06-Jan-2019 21:51:53  PAGE   48


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000EF0              L916:                             
    00000EF0 9144                   MOV.W       L939,R1    ; H'0099
    00000EF2 3010                   CMP/EQ      R1,R0
    00000EF4 8937                   BT          L754
    00000EF6 8830                   CMP/EQ      #48,R0
    00000EF8 8937                   BT          L755
    00000EFA 882E                   CMP/EQ      #46,R0
    00000EFC 8937                   BT          L756
    00000EFE 880F                   CMP/EQ      #15,R0
    00000F00 8937                   BT          L757
    00000F02 A039                   BRA         L882
    00000F04 0009                   NOP
    00000F06              L730:                            ; case label 
          WiFi.c   780                case 30001:
          WiFi.c   781                    c = 'A';
          WiFi.c   782                    break;
    00000F06 A037                   BRA         L882
    00000F08 E741                   MOV         #65,R7
    00000F0A              L731:                            ; case label 
          WiFi.c   783                case 149:
          WiFi.c   784                    c = 'B';
          WiFi.c   785                    break;
    00000F0A A035                   BRA         L882
    00000F0C E742                   MOV         #66,R7
    00000F0E              L732:                            ; case label 
          WiFi.c   786                case 133:
          WiFi.c   787                    c = 'C';
          WiFi.c   788                    break;
    00000F0E A033                   BRA         L882
    00000F10 E743                   MOV         #67,R7
    00000F12              L733:                            ; case label 
          WiFi.c   789                case 129:
          WiFi.c   790                    c = 'D';
          WiFi.c   791                    break;
    00000F12 A031                   BRA         L882
    00000F14 E744                   MOV         #68,R7
    00000F16              L734:                            ; case label 
          WiFi.c   792                case 130:
          WiFi.c   793                    c = 'E';
          WiFi.c   794                    break;
    00000F16 A02F                   BRA         L882
    00000F18 E745                   MOV         #69,R7
    00000F1A              L735:                            ; case label 
          WiFi.c   795                case 131:
          WiFi.c   796                    c = 'F';
          WiFi.c   797                    break;
    00000F1A A02D                   BRA         L882
    00000F1C E746                   MOV         #70,R7
    00000F1E              L736:                            ; case label 
          WiFi.c   798                case 187:
          WiFi.c   799                    c = 'G';
          WiFi.c   800                    break;
    00000F1E A02B                   BRA         L882
    00000F20 E747                   MOV         #71,R7
    00000F22              L737:                            ; case label 
          WiFi.c   801                case 30046:
          WiFi.c   802                    c = 'H';




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 06-Jan-2019 21:51:53  PAGE   49


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          WiFi.c   803                    break;
    00000F22 A029                   BRA         L882
    00000F24 E748                   MOV         #72,R7
    00000F26              L738:                            ; case label 
          WiFi.c   804                case 40:
          WiFi.c   805                    c = 'I';
          WiFi.c   806                    break;
    00000F26 A027                   BRA         L882
    00000F28 E749                   MOV         #73,R7
    00000F2A              L739:                            ; case label 
          WiFi.c   807                case 41:
          WiFi.c   808                    c = 'J';
          WiFi.c   809                    break;
    00000F2A A025                   BRA         L882
    00000F2C E74A                   MOV         #74,R7
    00000F2E              L740:                            ; case label 
          WiFi.c   810                case 44:
          WiFi.c   811                    c = 'K';
          WiFi.c   812                    break;
    00000F2E A023                   BRA         L882
    00000F30 E74B                   MOV         #75,R7
    00000F32              L741:                            ; case label 
          WiFi.c   813                case 14:
          WiFi.c   814                    c = 'L';
          WiFi.c   815                    break;
    00000F32 A021                   BRA         L882
    00000F34 E74C                   MOV         #76,R7
    00000F36              L742:                            ; case label 
          WiFi.c   816                case 55:
          WiFi.c   817                    c = 'M';
          WiFi.c   818                    break;
    00000F36 A01F                   BRA         L882
    00000F38 E74D                   MOV         #77,R7
    00000F3A              L743:                            ; case label 
          WiFi.c   819                case 56:
          WiFi.c   820                    c = 'N';
          WiFi.c   821                    break;
    00000F3A A01D                   BRA         L882
    00000F3C E74E                   MOV         #78,R7
    00000F3E              L744:                            ; case label 
          WiFi.c   822                case 57:
          WiFi.c   823                    c = 'O';
          WiFi.c   824                    break;
    00000F3E A01B                   BRA         L882
    00000F40 E74F                   MOV         #79,R7
    00000F42              L745:                            ; case label 
          WiFi.c   825                case 52:
          WiFi.c   826                    c = 'P';
          WiFi.c   827                    break;
    00000F42 A019                   BRA         L882
    00000F44 E750                   MOV         #80,R7
    00000F46              L746:                            ; case label 
          WiFi.c   828                case 53:
          WiFi.c   829                    c = 'Q';
          WiFi.c   830                    break;
    00000F46 A017                   BRA         L882
    00000F48 E751                   MOV         #81,R7




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 06-Jan-2019 21:51:53  PAGE   50


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000F4A              L747:                            ; case label 
          WiFi.c   831                case 54:
          WiFi.c   832                    c = 'R';
          WiFi.c   833                    break;
    00000F4A A015                   BRA         L882
    00000F4C E752                   MOV         #82,R7
    00000F4E              L748:                            ; case label 
          WiFi.c   834                case 169:
          WiFi.c   835                    c = 'S';
          WiFi.c   836                    break;
    00000F4E A013                   BRA         L882
    00000F50 E753                   MOV         #83,R7
    00000F52              L749:                            ; case label 
          WiFi.c   837                case 185:
          WiFi.c   838                    c = 'T';
          WiFi.c   839                    break;
    00000F52 A011                   BRA         L882
    00000F54 E754                   MOV         #84,R7
    00000F56              L750:                            ; case label 
          WiFi.c   840                case 49:
          WiFi.c   841                    c = 'U';
          WiFi.c   842                    break;
    00000F56 A00F                   BRA         L882
    00000F58 E755                   MOV         #85,R7
    00000F5A              L751:                            ; case label 
          WiFi.c   843                case 50:
          WiFi.c   844                    c = 'V';
          WiFi.c   845                    break;
    00000F5A A00D                   BRA         L882
    00000F5C E756                   MOV         #86,R7
    00000F5E              L752:                            ; case label 
          WiFi.c   846                case 51:
          WiFi.c   847                    c = 'W';
          WiFi.c   848                    break;
    00000F5E A00B                   BRA         L882
    00000F60 E757                   MOV         #87,R7
    00000F62              L753:                            ; case label 
          WiFi.c   849                case 137:
          WiFi.c   850                    c = 'X';
          WiFi.c   851                    break;
    00000F62 A009                   BRA         L882
    00000F64 E758                   MOV         #88,R7
    00000F66              L754:                            ; case label 
          WiFi.c   852                case 153:
          WiFi.c   853                    c = 'Y';
          WiFi.c   854                    break;
    00000F66 A007                   BRA         L882
    00000F68 E759                   MOV         #89,R7
    00000F6A              L755:                            ; case label 
          WiFi.c   855                case 48:
          WiFi.c   856                    c = 'Z';
          WiFi.c   857                    break;
    00000F6A A005                   BRA         L882
    00000F6C E75A                   MOV         #90,R7
    00000F6E              L756:                            ; case label 
          WiFi.c   858                case 46:
          WiFi.c   859                    c = ' ';




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 06-Jan-2019 21:51:53  PAGE   51


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          WiFi.c   860                    break;
    00000F6E A003                   BRA         L882
    00000F70 E720                   MOV         #32,R7
    00000F72              L757:                            ; case label 
          WiFi.c   861                case 15:
          WiFi.c   862                    c = '\"';
          WiFi.c   863                    break;
    00000F72 A001                   BRA         L882
    00000F74 E722                   MOV         #34,R7
    00000F76              L883:                             
          WiFi.c   864            }
          WiFi.c   865        } else {
          WiFi.c   866            c = (unsigned char) key;
    00000F76 6743                   MOV         R4,R7
    00000F78              L882:                             
          WiFi.c   867        }
          WiFi.c   868    
          WiFi.c   869        return c;
          WiFi.c   870    }
    00000F78 000B                   RTS
    00000F7A 6073                   MOV         R7,R0
    00000F7C              L939:                             
    00000F7C 0099                   .DATA.W     H'0099
          WiFi.c   871    
          WiFi.c   872    int getKey() {
    00000F7E              _getKey:                         ; function: getKey
                                                           ; frame size=52
    00000F7E 2FE6                   MOV.L       R14,@-R15
    00000F80 2FD6                   MOV.L       R13,@-R15
    00000F82 2FC6                   MOV.L       R12,@-R15
    00000F84 2FB6                   MOV.L       R11,@-R15
    00000F86 2FA6                   MOV.L       R10,@-R15
    00000F88 2F96                   MOV.L       R9,@-R15
    00000F8A 2F86                   MOV.L       R8,@-R15
    00000F8C 4F22                   STS.L       PR,@-R15
    00000F8E 7FF4                   ADD         #-12,R15
          WiFi.c   873        int col, row;
          WiFi.c   874        int lastKeyTicks, lastClrTicks;
          WiFi.c   875        unsigned short keycode;
          WiFi.c   876    
          WiFi.c   877        Bdisp_PutDisp_DD();
    00000F90 D377                   MOV.L       L940+2,R3  ; _Bdisp_PutDisp_DD
    00000F92 430B                   JSR         @R3
    00000F94 0009                   NOP
          WiFi.c   878    
          WiFi.c   879        Keyboard_ClrBuffer(); // clear the buffer to prevent strange behaviour when hitting the menu key
    00000F96 DB77                   MOV.L       L940+6,R11 ; _Keyboard_ClrBuffer
    00000F98 4B0B                   JSR         @R11
    00000F9A 0009                   NOP
    00000F9C D876                   MOV.L       L940+10,R8 ; _Serial_Close
    00000F9E EE00                   MOV         #0,R14
    00000FA0 D976                   MOV.L       L940+14,R9 ; _RTC_GetTicks
    00000FA2 DA77                   MOV.L       L940+18,R10; _RTC_Elapsed_ms
    00000FA4 DD77                   MOV.L       L940+22,R13; _Keyboard_GetKeyWait
          WiFi.c   880    
          WiFi.c   881        while(true) {
    00000FA6              L888:                             




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 06-Jan-2019 21:51:53  PAGE   52


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          WiFi.c   882            lastKeyTicks = RTC_GetTicks();
    00000FA6 490B                   JSR         @R9
    00000FA8 0009                   NOP
    00000FAA 6C03                   MOV         R0,R12
          WiFi.c   883            while(!RTC_Elapsed_ms(lastKeyTicks, 100)) {
    00000FAC              L889:                             
    00000FAC E564                   MOV         #100,R5
    00000FAE 4A0B                   JSR         @R10
    00000FB0 64C3                   MOV         R12,R4
    00000FB2 2008                   TST         R0,R0
    00000FB4 89FA                   BT          L889
          WiFi.c   884            }
          WiFi.c   885    
          WiFi.c   886            if (Keyboard_GetKeyWait(&col, &row, 1, 0, 0, &keycode)) {
    00000FB6 63F3                   MOV         R15,R3
    00000FB8 7308                   ADD         #8,R3
    00000FBA E700                   MOV         #0,R7
    00000FBC 2F36                   MOV.L       R3,@-R15
    00000FBE E601                   MOV         #1,R6
    00000FC0 2FE6                   MOV.L       R14,@-R15
    00000FC2 65F3                   MOV         R15,R5
    00000FC4 750C                   ADD         #12,R5
    00000FC6 64F3                   MOV         R15,R4
    00000FC8 4D0B                   JSR         @R13
    00000FCA 7408                   ADD         #8,R4
    00000FCC 2008                   TST         R0,R0
    00000FCE 8D16                   BT/S        L891
    00000FD0 7F08                   ADD         #8,R15
          WiFi.c   887                if (col == 4 && row == 9) { // MENU key was pressed
    00000FD2 60F2                   MOV.L       @R15,R0
    00000FD4 8804                   CMP/EQ      #4,R0
    00000FD6 8B16                   BF          L894
    00000FD8 50F1                   MOV.L       @(4,R15),R0
    00000FDA 8809                   CMP/EQ      #9,R0
    00000FDC 8B13                   BF          L894
          WiFi.c   888                    Serial_Close(1);
    00000FDE 480B                   JSR         @R8
    00000FE0 E401                   MOV         #1,R4
          WiFi.c   889                    Keyboard_GetKeyWait(&col, &row, 0, 0, 0, &keycode);
    00000FE2 62F3                   MOV         R15,R2
    00000FE4 7208                   ADD         #8,R2
    00000FE6 E700                   MOV         #0,R7
    00000FE8 2F26                   MOV.L       R2,@-R15
    00000FEA 6673                   MOV         R7,R6
    00000FEC 2FE6                   MOV.L       R14,@-R15
    00000FEE 65F3                   MOV         R15,R5
    00000FF0 750C                   ADD         #12,R5
    00000FF2 64F3                   MOV         R15,R4
    00000FF4 4D0B                   JSR         @R13
    00000FF6 7408                   ADD         #8,R4
          WiFi.c   890                    openSerial();
    00000FF8 D363                   MOV.L       L940+26,R3 ; _openSerial
    00000FFA 430B                   JSR         @R3
    00000FFC 7F08                   ADD         #8,R15
    00000FFE              L891:                             
          WiFi.c   891                } else {
          WiFi.c   892                    break;




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 06-Jan-2019 21:51:53  PAGE   53


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          WiFi.c   893                }
          WiFi.c   894            }
          WiFi.c   895    
          WiFi.c   896            Keyboard_ClrBuffer();
    00000FFE 4B0B                   JSR         @R11
    00001000 0009                   NOP
    00001002 AFD0                   BRA         L888
    00001004 0009                   NOP
    00001006              L894:                             
          WiFi.c   897        }
          WiFi.c   898    
          WiFi.c   899        Keyboard_ClrBuffer();
    00001006 4B0B                   JSR         @R11
    00001008 0009                   NOP
          WiFi.c   900    
          WiFi.c   901        return (row - 1) * 7 + col - 1;
    0000100A 50F1                   MOV.L       @(4,R15),R0
    0000100C 62F2                   MOV.L       @R15,R2
    0000100E 70FF                   ADD         #-1,R0
    00001010 6303                   MOV         R0,R3
    00001012 4008                   SHLL2       R0
    00001014 4000                   SHLL        R0
    00001016 3038                   SUB         R3,R0
    00001018 302C                   ADD         R2,R0
    0000101A 70FF                   ADD         #-1,R0
          WiFi.c   902    }
    0000101C 7F0C                   ADD         #12,R15
    0000101E 4F26                   LDS.L       @R15+,PR
    00001020 68F6                   MOV.L       @R15+,R8
    00001022 69F6                   MOV.L       @R15+,R9
    00001024 6AF6                   MOV.L       @R15+,R10
    00001026 6BF6                   MOV.L       @R15+,R11
    00001028 6CF6                   MOV.L       @R15+,R12
    0000102A 6DF6                   MOV.L       @R15+,R13
    0000102C 000B                   RTS
    0000102E 6EF6                   MOV.L       @R15+,R14
          WiFi.c   903    
          WiFi.c   904    void drawProgressBar(int y, float value) {
    00001030              _drawProgressBar:                ; function: drawProgressBar
                                                           ; frame size=72
                                                           ; used runtime library name:
                                                           ; __muld, __stod, __dtoi
    00001030 2FE6                   MOV.L       R14,@-R15
          WiFi.c   905        int length = (int) (121.0  * value);
    00001032 6053                   MOV         R5,R0
    00001034 D355                   MOV.L       L940+30,R3 ; __stod
    00001036 6E43                   MOV         R4,R14
    00001038 2FD6                   MOV.L       R13,@-R15
    0000103A 2FC6                   MOV.L       R12,@-R15
    0000103C 4F22                   STS.L       PR,@-R15
    0000103E 7FE4                   ADD         #-28,R15
    00001040 7FF0                   ADD         #-16,R15
    00001042 430B                   JSR         @R3
    00001044 2FF6                   MOV.L       R15,@-R15
    00001046 E200                   MOV         #0,R2
    00001048 D152                   MOV.L       L940+38,R1 ; __muld
    0000104A 2F26                   MOV.L       R2,@-R15




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 06-Jan-2019 21:51:53  PAGE   54


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000104C D250                   MOV.L       L940+34,R2 ; H'405E4000
    0000104E 2F26                   MOV.L       R2,@-R15
    00001050 63F3                   MOV         R15,R3
    00001052 7310                   ADD         #16,R3
    00001054 410B                   JSR         @R1
    00001056 2F36                   MOV.L       R3,@-R15
    00001058 D24F                   MOV.L       L940+42,R2 ; __dtoi
    0000105A 420B                   JSR         @R2
    0000105C 0009                   NOP
          WiFi.c   906        DISPBOX dispBox;
          WiFi.c   907    
          WiFi.c   908        dispBox.left = 1;
    0000105E E301                   MOV         #1,R3
    00001060 2F02                   MOV.L       R0,@R15
          WiFi.c   909        dispBox.top = y;
          WiFi.c   910        dispBox.right = 126;
          WiFi.c   911        dispBox.bottom = y + 5;
    00001062 6CE3                   MOV         R14,R12
    00001064 1F33                   MOV.L       R3,@(12,R15)
          WiFi.c   912    
          WiFi.c   913         Bdisp_AreaClr_DD(&dispBox);
    00001066 64F3                   MOV         R15,R4
    00001068 1FE4                   MOV.L       R14,@(16,R15)
    0000106A E37E                   MOV         #126,R3
    0000106C 1F35                   MOV.L       R3,@(20,R15)
    0000106E 7C05                   ADD         #5,R12
    00001070 D34A                   MOV.L       L940+46,R3 ; _Bdisp_AreaClr_DD
    00001072 1FC6                   MOV.L       R12,@(24,R15)
    00001074 430B                   JSR         @R3
    00001076 740C                   ADD         #12,R4
          WiFi.c   914    
          WiFi.c   915        Bdisp_DrawLineVRAM(1, y, 126, y);
    00001078 DD49                   MOV.L       L940+50,R13; _Bdisp_DrawLineVRAM
    0000107A 67E3                   MOV         R14,R7
    0000107C E67E                   MOV         #126,R6
    0000107E 65E3                   MOV         R14,R5
    00001080 4D0B                   JSR         @R13
    00001082 E401                   MOV         #1,R4
          WiFi.c   916        Bdisp_DrawLineVRAM(1, y + 5, 126, y + 5);
    00001084 67C3                   MOV         R12,R7
    00001086 E67E                   MOV         #126,R6
    00001088 65C3                   MOV         R12,R5
    0000108A 4D0B                   JSR         @R13
    0000108C E401                   MOV         #1,R4
          WiFi.c   917        Bdisp_DrawLineVRAM(1, y, 1, y + 5);
    0000108E 67C3                   MOV         R12,R7
    00001090 E601                   MOV         #1,R6
    00001092 65E3                   MOV         R14,R5
    00001094 4D0B                   JSR         @R13
    00001096 6463                   MOV         R6,R4
          WiFi.c   918        Bdisp_DrawLineVRAM(126, y, 126, y + 5);
    00001098 67C3                   MOV         R12,R7
    0000109A E67E                   MOV         #126,R6
    0000109C 65E3                   MOV         R14,R5
    0000109E 4D0B                   JSR         @R13
    000010A0 6463                   MOV         R6,R4
          WiFi.c   919    




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 06-Jan-2019 21:51:53  PAGE   55


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          WiFi.c   920        Bdisp_DrawLineVRAM(3, y + 2, 3 + length, y + 2);
    000010A2 67E3                   MOV         R14,R7
    000010A4 7702                   ADD         #2,R7
    000010A6 1F72                   MOV.L       R7,@(8,R15)
    000010A8 66F2                   MOV.L       @R15,R6
    000010AA 7603                   ADD         #3,R6
    000010AC 1F61                   MOV.L       R6,@(4,R15)
    000010AE 55F2                   MOV.L       @(8,R15),R5
    000010B0 4D0B                   JSR         @R13
    000010B2 E403                   MOV         #3,R4
          WiFi.c   921        Bdisp_DrawLineVRAM(3, y + 3, 3 + length, y + 3);
    000010B4 67E3                   MOV         R14,R7
    000010B6 7703                   ADD         #3,R7
    000010B8 2F72                   MOV.L       R7,@R15
    000010BA 6573                   MOV         R7,R5
    000010BC 56F1                   MOV.L       @(4,R15),R6
    000010BE 4D0B                   JSR         @R13
    000010C0 E403                   MOV         #3,R4
          WiFi.c   922    
          WiFi.c   923        Bdisp_PutDispArea_DD(&dispBox);
    000010C2 64F3                   MOV         R15,R4
    000010C4 D337                   MOV.L       L940+54,R3 ; _Bdisp_PutDispArea_DD
    000010C6 430B                   JSR         @R3
    000010C8 740C                   ADD         #12,R4
          WiFi.c   924    }
    000010CA 7F1C                   ADD         #28,R15
    000010CC 4F26                   LDS.L       @R15+,PR
    000010CE 6CF6                   MOV.L       @R15+,R12
    000010D0 6DF6                   MOV.L       @R15+,R13
    000010D2 000B                   RTS
    000010D4 6EF6                   MOV.L       @R15+,R14
          WiFi.c   925    
          WiFi.c   926    void sendData(unsigned char* buffer, int length){
    000010D6              _sendData:                       ; function: sendData
                                                           ; frame size=80
    000010D6 2FE6                   MOV.L       R14,@-R15
    000010D8 2FD6                   MOV.L       R13,@-R15
    000010DA 2FC6                   MOV.L       R12,@-R15
    000010DC 2FB6                   MOV.L       R11,@-R15
    000010DE 6B53                   MOV         R5,R11
    000010E0 DC31                   MOV.L       L940+58,R12; _Serial_BufferedTransmitNBytes
    000010E2 2FA6                   MOV.L       R10,@-R15
    000010E4 2F96                   MOV.L       R9,@-R15
    000010E6 2F86                   MOV.L       R8,@-R15
    000010E8 4F22                   STS.L       PR,@-R15
    000010EA E801                   MOV         #1,R8
    000010EC 7FD0                   ADD         #-48,R15
    000010EE 69F3                   MOV         R15,R9
    000010F0 2F42                   MOV.L       R4,@R15
    000010F2 7904                   ADD         #4,R9
          WiFi.c   927            do{
    000010F4              L896:                             
          WiFi.c   928                    unsigned char cs[4];
          WiFi.c   929                    unsigned char* len[10];
          WiFi.c   930                    int counter=0;
          WiFi.c   931                    int transmitCount;
          WiFi.c   932                    




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 06-Jan-2019 21:51:53  PAGE   56


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          WiFi.c   933                    sendCommand("DATA");
    000010F4 D42D                   MOV.L       L940+62,R4 ; L658
    000010F6 BD76                   BSR         _sendCommand
    000010F8 ED00                   MOV         #0,R13
          WiFi.c   934                    
          WiFi.c   935                    itoa(length,10,len);
    000010FA 6693                   MOV         R9,R6
    000010FC E50A                   MOV         #10,R5
    000010FE B084                   BSR         _itoa
    00001100 64B3                   MOV         R11,R4
          WiFi.c   936            
          WiFi.c   937                    Serial_BufferedTransmitNBytes(len,10);
    00001102 E50A                   MOV         #10,R5
    00001104 4C0B                   JSR         @R12
    00001106 6493                   MOV         R9,R4
          WiFi.c   938                    checksum(buffer,length,cs);
    00001108 66F3                   MOV         R15,R6
    0000110A 762C                   ADD         #44,R6
    0000110C 65B3                   MOV         R11,R5
    0000110E B057                   BSR         _checksum
    00001110 64F2                   MOV.L       @R15,R4
          WiFi.c   939                    Serial_BufferedTransmitNBytes(cs,4);
    00001112 E504                   MOV         #4,R5
    00001114 64F3                   MOV         R15,R4
    00001116 4C0B                   JSR         @R12
    00001118 742C                   ADD         #44,R4
          WiFi.c   940                    
          WiFi.c   941                    while(counter<length){
    0000111A A012                   BRA         L897
    0000111C 0009                   NOP
    0000111E              L898:                             
          WiFi.c   942                            transmitCount=length-counter;
    0000111E 6EB3                   MOV         R11,R14
    00001120 6AF2                   MOV.L       @R15,R10
    00001122 3ED8                   SUB         R13,R14
          WiFi.c   943                            while(Serial_BufferedTransmitNBytes(&buffer[counter],transmitCount)!=0){
    00001124 A007                   BRA         L899
    00001126 3ADC                   ADD         R13,R10
    00001128              L900:                             
          WiFi.c   944                                    transmitCount=(int)transmitCount/2;
    00001128 E300                   MOV         #0,R3
    0000112A 33E7                   CMP/GT      R14,R3
    0000112C 3E3E                   ADDC        R3,R14
    0000112E 4E21                   SHAR        R14
          WiFi.c   945                                    if(transmitCount==0){
    00001130 2EE8                   TST         R14,R14
    00001132 8B00                   BF          L899
          WiFi.c   946                                            transmitCount=1;
    00001134 6E83                   MOV         R8,R14
    00001136              L899:                             
    00001136 65E3                   MOV         R14,R5
    00001138 4C0B                   JSR         @R12
    0000113A 64A3                   MOV         R10,R4
    0000113C 2008                   TST         R0,R0
    0000113E 8BF3                   BF          L900
          WiFi.c   947                                    }
          WiFi.c   948                            }




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 06-Jan-2019 21:51:53  PAGE   57


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          WiFi.c   949                            counter+=transmitCount;
    00001140 3DEC                   ADD         R14,R13
    00001142              L897:                             
    00001142 3DB3                   CMP/GE      R11,R13
    00001144 8BEB                   BF          L898
          WiFi.c   950                    }
          WiFi.c   951                    
          WiFi.c   952                    receiveStatus();
    00001146 D31A                   MOV.L       L940+66,R3 ; _receiveStatus
    00001148 430B                   JSR         @R3
    0000114A 0009                   NOP
          WiFi.c   953            }while(memcmp(status,"OK",2)==0);
    0000114C D519                   MOV.L       L940+70,R5 ; L455
    0000114E D41A                   MOV.L       L940+74,R4 ; _status
    00001150 D21A                   MOV.L       L940+78,R2 ; _memcmp
    00001152 420B                   JSR         @R2
    00001154 E602                   MOV         #2,R6
    00001156 2008                   TST         R0,R0
    00001158 89CC                   BT          L896
          WiFi.c   954    }
    0000115A 7F30                   ADD         #48,R15
    0000115C 4F26                   LDS.L       @R15+,PR
    0000115E 68F6                   MOV.L       @R15+,R8
    00001160 69F6                   MOV.L       @R15+,R9
    00001162 6AF6                   MOV.L       @R15+,R10
    00001164 6BF6                   MOV.L       @R15+,R11
    00001166 6CF6                   MOV.L       @R15+,R12
    00001168 6DF6                   MOV.L       @R15+,R13
    0000116A 000B                   RTS
    0000116C 6EF6                   MOV.L       @R15+,R14
    0000116E              L940:                             
    0000116E 0000                   .DATA.W     0
    00001170 <00000000>             .DATA.L     _Bdisp_PutDisp_DD
    00001174 <00000000>             .DATA.L     _Keyboard_ClrBuffer
    00001178 <00000000>             .DATA.L     _Serial_Close
    0000117C <00000000>             .DATA.L     _RTC_GetTicks
    00001180 <00000000>             .DATA.L     _RTC_Elapsed_ms
    00001184 <00000000>             .DATA.L     _Keyboard_GetKeyWait
    00001188 <00000000>             .DATA.L     _openSerial
    0000118C <00000000>             .DATA.L     __stod
    00001190 405E4000               .DATA.L     H'405E4000
    00001194 <00000000>             .DATA.L     __muld
    00001198 <00000000>             .DATA.L     __dtoi
    0000119C <00000000>             .DATA.L     _Bdisp_AreaClr_DD
    000011A0 <00000000>             .DATA.L     _Bdisp_DrawLineVRAM
    000011A4 <00000000>             .DATA.L     _Bdisp_PutDispArea_DD
    000011A8 <00000000>             .DATA.L     _Serial_BufferedTransmitNBytes
    000011AC <00000000>             .DATA.L     L658
    000011B0 <00000000>             .DATA.L     _receiveStatus
    000011B4 <00000000>             .DATA.L     L455
    000011B8 <00000000>             .DATA.L     _status
    000011BC <00000000>             .DATA.L     _memcmp
          WiFi.c   955    
          WiFi.c   956    void checksum(unsigned char* data,int length, unsigned char* csbuffer){
    000011C0              _checksum:                       ; function: checksum
                                                           ; frame size=40
                                                           ; used runtime library name:




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 06-Jan-2019 21:51:53  PAGE   58


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

                                                           ; __modls
    000011C0 2FE6                   MOV.L       R14,@-R15
          WiFi.c   957            int i;
          WiFi.c   958            int checksum=0;
    000011C2 E700                   MOV         #0,R7
    000011C4 4F22                   STS.L       PR,@-R15
          WiFi.c   959            unsigned char* checksumBuf[5];
          WiFi.c   960            
          WiFi.c   961            for(i=0;i<length;i=i+1){
    000011C6 4515                   CMP/PL      R5
    000011C8 7FE8                   ADD         #-24,R15
    000011CA 6E73                   MOV         R7,R14
    000011CC 2F62                   MOV.L       R6,@R15
    000011CE 8F06                   BF/S        L902
    000011D0 6673                   MOV         R7,R6
    000011D2              L903:                             
    000011D2 7601                   ADD         #1,R6
          WiFi.c   962                    checksum+=(int)data[i];
    000011D4 6344                   MOV.B       @R4+,R3
    000011D6 3653                   CMP/GE      R5,R6
    000011D8 633C                   EXTU.B      R3,R3
    000011DA 8FFA                   BF/S        L903
    000011DC 3E3C                   ADD         R3,R14
    000011DE              L902:                             
          WiFi.c   963            }
          WiFi.c   964            
          WiFi.c   965            checksum=checksum%10000;
    000011DE 906E                   MOV.W       L941,R0    ; H'2710
    000011E0 D337                   MOV.L       L941+2,R3  ; __modls
    000011E2 430B                   JSR         @R3
    000011E4 61E3                   MOV         R14,R1
    000011E6 6E03                   MOV         R0,R14
          WiFi.c   966            
          WiFi.c   967            sprintf(checksumBuf,"%04d",checksum);
    000011E8 2F06                   MOV.L       R0,@-R15
    000011EA D236                   MOV.L       L941+6,R2  ; L670
    000011EC D336                   MOV.L       L941+10,R3 ; _sprintf
    000011EE 2F26                   MOV.L       R2,@-R15
    000011F0 64F3                   MOV         R15,R4
    000011F2 430B                   JSR         @R3
    000011F4 740C                   ADD         #12,R4
          WiFi.c   968            memcpy(csbuffer,checksumBuf,4);
    000011F6 E604                   MOV         #4,R6
    000011F8 D334                   MOV.L       L941+14,R3 ; _memcpy
    000011FA 65F3                   MOV         R15,R5
    000011FC 750C                   ADD         #12,R5
    000011FE 430B                   JSR         @R3
    00001200 54F2                   MOV.L       @(8,R15),R4
          WiFi.c   969            //itoa(checksum,4,csbuffer);
          WiFi.c   970    }
    00001202 7F20                   ADD         #32,R15
    00001204 4F26                   LDS.L       @R15+,PR
    00001206 000B                   RTS
    00001208 6EF6                   MOV.L       @R15+,R14
          WiFi.c   971    
          WiFi.c   972    void itoa(int integer,int len,unsigned char* data){
    0000120A              _itoa:                           ; function: itoa




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 06-Jan-2019 21:51:53  PAGE   59


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

                                                           ; frame size=32
                                                           ; used runtime library name:
                                                           ; __divls
    0000120A 2FE6                   MOV.L       R14,@-R15
    0000120C 2FD6                   MOV.L       R13,@-R15
    0000120E 2FC6                   MOV.L       R12,@-R15
    00001210 2FB6                   MOV.L       R11,@-R15
    00001212 6C43                   MOV         R4,R12
    00001214 2FA6                   MOV.L       R10,@-R15
    00001216 6A53                   MOV         R5,R10
          WiFi.c   973            int i=0;
          WiFi.c   974            int z=0;
          WiFi.c   975            
          WiFi.c   976            for(i=len-1;i>=0;i=i-1){
    00001218 DB2D                   MOV.L       L941+18,R11; _pow
    0000121A 6EA3                   MOV         R10,R14
    0000121C 4F22                   STS.L       PR,@-R15
    0000121E 7EFF                   ADD         #-1,R14
    00001220 4F12                   STS.L       MACL,@-R15
    00001222 4E11                   CMP/PZ      R14
    00001224 7FFC                   ADD         #-4,R15
    00001226 8F17                   BF/S        L904
    00001228 2F62                   MOV.L       R6,@R15
    0000122A              L905:                             
          WiFi.c   977                    z=(int)(integer/pow(10,i));
    0000122A 65E3                   MOV         R14,R5
    0000122C 4B0B                   JSR         @R11
    0000122E E40A                   MOV         #10,R4
    00001230 D228                   MOV.L       L941+22,R2 ; __divls
    00001232 420B                   JSR         @R2
    00001234 61C3                   MOV         R12,R1
    00001236 6D03                   MOV         R0,R13
          WiFi.c   978                    data[len-1-i]=z+48;
    00001238 60F2                   MOV.L       @R15,R0
    0000123A 62D3                   MOV         R13,R2
    0000123C 63A3                   MOV         R10,R3
    0000123E 33E8                   SUB         R14,R3
    00001240 73FF                   ADD         #-1,R3
    00001242 7230                   ADD         #48,R2
    00001244 0324                   MOV.B       R2,@(R0,R3)
          WiFi.c   979                    integer=integer-(z*pow(10,i));
    00001246 65E3                   MOV         R14,R5
    00001248 4B0B                   JSR         @R11
    0000124A E40A                   MOV         #10,R4
    0000124C 0D07                   MUL.L       R0,R13
    0000124E 7EFF                   ADD         #-1,R14
    00001250 0D1A                   STS         MACL,R13
    00001252 4E11                   CMP/PZ      R14
    00001254 8DE9                   BT/S        L905
    00001256 3CD8                   SUB         R13,R12
    00001258              L904:                             
          WiFi.c   980            }
          WiFi.c   981    }
    00001258 7F04                   ADD         #4,R15
    0000125A 4F16                   LDS.L       @R15+,MACL
    0000125C 4F26                   LDS.L       @R15+,PR
    0000125E 6AF6                   MOV.L       @R15+,R10




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 06-Jan-2019 21:51:53  PAGE   60


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001260 6BF6                   MOV.L       @R15+,R11
    00001262 6CF6                   MOV.L       @R15+,R12
    00001264 6DF6                   MOV.L       @R15+,R13
    00001266 000B                   RTS
    00001268 6EF6                   MOV.L       @R15+,R14
          WiFi.c   982    
          WiFi.c   983    void drawImage(unsigned char* d){
    0000126A              _drawImage:                      ; function: drawImage
                                                           ; frame size=52
    0000126A 2FE6                   MOV.L       R14,@-R15
    0000126C 2FD6                   MOV.L       R13,@-R15
    0000126E 2FC6                   MOV.L       R12,@-R15
    00001270 2FB6                   MOV.L       R11,@-R15
    00001272 2FA6                   MOV.L       R10,@-R15
    00001274 2F96                   MOV.L       R9,@-R15
    00001276 2F86                   MOV.L       R8,@-R15
    00001278 4F22                   STS.L       PR,@-R15
    0000127A 7FEC                   ADD         #-20,R15
          WiFi.c   984            unsigned int startTicks = RTC_GetTicks();
    0000127C D316                   MOV.L       L941+26,R3 ; _RTC_GetTicks
    0000127E 430B                   JSR         @R3
    00001280 2F42                   MOV.L       R4,@R15
          WiFi.c   985            unsigned int width;
          WiFi.c   986            unsigned int lineLengthBit;
          WiFi.c   987            unsigned int heigth;
          WiFi.c   988            unsigned int line;
          WiFi.c   989            unsigned int y;
          WiFi.c   990            unsigned int bitCounter;
          WiFi.c   991            
          WiFi.c   992            unsigned int xOffset=5;
          WiFi.c   993            unsigned int yOffset=5;
          WiFi.c   994            
          WiFi.c   995            unsigned int i;
          WiFi.c   996            unsigned int counter;
          WiFi.c   997            
          WiFi.c   998            unsigned int startOffset;
          WiFi.c   999            
          WiFi.c  1000            unsigned short  actuallyReceived;
          WiFi.c  1001            //unsigned char* d;
          WiFi.c  1002            unsigned char currentByteToRead;
          WiFi.c  1003            unsigned char modifiedByte;
          WiFi.c  1004            
          WiFi.c  1005            //d=receiveData(60000,&actuallyReceived);
          WiFi.c  1006            //d=testPicture;
          WiFi.c  1007            
          WiFi.c  1008            Bdisp_AllClr_DDVRAM;
          WiFi.c  1009            
          WiFi.c  1010            startOffset=(int)d[10];
          WiFi.c  1011            width=(int)d[18];
          WiFi.c  1012            heigth=(int)d[22];
          WiFi.c  1013            
          WiFi.c  1014            counter=startOffset;
          WiFi.c  1015            lineLengthBit=width+(32-(width%32));
    00001282 E31F                   MOV         #31,R3
    00001284 6EF2                   MOV.L       @R15,R14
    00001286 E800                   MOV         #0,R8
    00001288 84EA                   MOV.B       @(10,R14),R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 06-Jan-2019 21:51:53  PAGE   61


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000128A 690C                   EXTU.B      R0,R9
    0000128C E012                   MOV         #18,R0
    0000128E 04EC                   MOV.B       @(R0,R14),R4
    00001290 644C                   EXTU.B      R4,R4
    00001292 E016                   MOV         #22,R0
    00001294 06EC                   MOV.B       @(R0,R14),R6
    00001296 2349                   AND         R4,R3
    00001298 666C                   EXTU.B      R6,R6
    0000129A 6543                   MOV         R4,R5
    0000129C 3538                   SUB         R3,R5
    0000129E 7520                   ADD         #32,R5
          WiFi.c  1016            
          WiFi.c  1017            for(i=heigth;i>0;i=i-1){
    000012A0 6B63                   MOV         R6,R11
    000012A2 4509                   SHLR2       R5
    000012A4 4501                   SHLR        R5
    000012A6 A042                   BRA         L906
    000012A8 1F54                   MOV.L       R5,@(16,R15)
    000012AA              L907:                             
          WiFi.c  1018                    for(y=0;y<(lineLengthBit/8);y++){
    000012AA 6A83                   MOV         R8,R10
    000012AC 6CF2                   MOV.L       @R15,R12
    000012AE 63B3                   MOV         R11,R3
    000012B0 3C9C                   ADD         R9,R12
    000012B2 7305                   ADD         #5,R3
    000012B4 1F32                   MOV.L       R3,@(8,R15)
    000012B6 62B3                   MOV         R11,R2
    000012B8 7205                   ADD         #5,R2
    000012BA A034                   BRA         L908
    000012BC 1F21                   MOV.L       R2,@(4,R15)
    000012BE              L941:                             
    000012BE 2710                   .DATA.W     H'2710
    000012C0 <00000000>             .DATA.L     __modls
    000012C4 <00000000>             .DATA.L     L670
    000012C8 <00000000>             .DATA.L     _sprintf
    000012CC <00000000>             .DATA.L     _memcpy
    000012D0 <00000000>             .DATA.L     _pow
    000012D4 <00000000>             .DATA.L     __divls
    000012D8 <00000000>             .DATA.L     _RTC_GetTicks
    000012DC              L909:                             
          WiFi.c  1019                            currentByteToRead=d[counter];
    000012DC 60C0                   MOV.B       @R12,R0
          WiFi.c  1020                            for(bitCounter=0;bitCounter<8;bitCounter=bitCounter+1){
    000012DE 6E83                   MOV         R8,R14
    000012E0 80FC                   MOV.B       R0,@(12,R15)
    000012E2 6DA3                   MOV         R10,R13
    000012E4 4D08                   SHLL2       R13
    000012E6 4D00                   SHLL        R13
    000012E8              L910:                             
          WiFi.c  1021                                    modifiedByte=currentByteToRead<<bitCounter;
    000012E8 84FC                   MOV.B       @(12,R15),R0
          WiFi.c  1022                                    modifiedByte=modifiedByte>>7;
    000012EA E2F9                   MOV         #-7,R2
    000012EC 600C                   EXTU.B      R0,R0
    000012EE 40ED                   SHLD        R14,R0
    000012F0 6403                   MOV         R0,R4
    000012F2 634C                   EXTU.B      R4,R3




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 06-Jan-2019 21:51:53  PAGE   62


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000012F4 432D                   SHLD        R2,R3
    000012F6 6433                   MOV         R3,R4
          WiFi.c  1023                                    if(modifiedByte==1){
    000012F8 604C                   EXTU.B      R4,R0
    000012FA 8801                   CMP/EQ      #1,R0
    000012FC 8B0C                   BF          L911
          WiFi.c  1024                                            Bdisp_AreaReverseVRAM(y*8+bitCounter+yOffset,i+xOffset,y*8+bitCoun
                         +ter+yOffset,i+xOffset);
    000012FE 66D3                   MOV         R13,R6
    00001300 55F1                   MOV.L       @(4,R15),R5
    00001302 64D3                   MOV         R13,R4
    00001304 D311                   MOV.L       L942+2,R3  ; _Bdisp_AreaReverseVRAM
    00001306 36EC                   ADD         R14,R6
    00001308 57F2                   MOV.L       @(8,R15),R7
    0000130A 34EC                   ADD         R14,R4
    0000130C 7605                   ADD         #5,R6
    0000130E 430B                   JSR         @R3
    00001310 7405                   ADD         #5,R4
          WiFi.c  1025                                            Bdisp_PutDisp_DD();
    00001312 D20F                   MOV.L       L942+6,R2  ; _Bdisp_PutDisp_DD
    00001314 420B                   JSR         @R2
    00001316 0009                   NOP
    00001318              L911:                             
    00001318 7E01                   ADD         #1,R14
    0000131A E308                   MOV         #8,R3
    0000131C 3E32                   CMP/HS      R3,R14
    0000131E 8BE3                   BF          L910
          WiFi.c  1026                                    }
          WiFi.c  1027                            }
          WiFi.c  1028                            counter=counter+1;
    00001320 7901                   ADD         #1,R9
    00001322 7C01                   ADD         #1,R12
    00001324 7A01                   ADD         #1,R10
    00001326              L908:                             
    00001326 53F4                   MOV.L       @(16,R15),R3
    00001328 3A32                   CMP/HS      R3,R10
    0000132A 8BD7                   BF          L909
    0000132C 7BFF                   ADD         #-1,R11
    0000132E              L906:                             
    0000132E E300                   MOV         #0,R3
    00001330 3B36                   CMP/HI      R3,R11
    00001332 89BA                   BT          L907
          WiFi.c  1029                    }
          WiFi.c  1030            }
          WiFi.c  1031            Bdisp_PutDisp_DD();
    00001334 D106                   MOV.L       L942+6,R1  ; _Bdisp_PutDisp_DD
    00001336 7F14                   ADD         #20,R15
    00001338 4F26                   LDS.L       @R15+,PR
    0000133A 68F6                   MOV.L       @R15+,R8
    0000133C 69F6                   MOV.L       @R15+,R9
    0000133E 6AF6                   MOV.L       @R15+,R10
    00001340 6BF6                   MOV.L       @R15+,R11
    00001342 6CF6                   MOV.L       @R15+,R12
    00001344 6DF6                   MOV.L       @R15+,R13
    00001346 412B                   JMP         @R1
    00001348 6EF6                   MOV.L       @R15+,R14
    0000134A              L942:                             




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 06-Jan-2019 21:51:53  PAGE   63


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000134A 0000                   .DATA.W     0
    0000134C <00000000>             .DATA.L     _Bdisp_AreaReverseVRAM
    00001350 <00000000>             .DATA.L     _Bdisp_PutDisp_DD
          WiFi.c  1032    }
          WiFi.c  1033    
          WiFi.c  1034    
          WiFi.c  1035    //****************************************************************************
          WiFi.c  1036    //**************                                              ****************
          WiFi.c  1037    //**************                 Notice!                      ****************
          WiFi.c  1038    //**************                                              ****************
          WiFi.c  1039    //**************  Please do not change the following source.  ****************
          WiFi.c  1040    //**************                                              ****************
          WiFi.c  1041    //****************************************************************************
          WiFi.c  1042    
          WiFi.c  1043    
          WiFi.c  1044    #pragma section _BR_Size
          WiFi.c  1045    unsigned long BR_Size;
          WiFi.c  1046    #pragma section
          WiFi.c  1047    
          WiFi.c  1048    
          WiFi.c  1049    #pragma section _TOP
          WiFi.c  1050    
          WiFi.c  1051    //****************************************************************************
          WiFi.c  1052    //  InitializeSystem
          WiFi.c  1053    //
          WiFi.c  1054    //  param   :   isAppli   : 1 = Application / 0 = eActivity
          WiFi.c  1055    //              OptionNum : Option Number (only eActivity)
          WiFi.c  1056    //
          WiFi.c  1057    //  retval  :   1 = No error / 0 = Error
          WiFi.c  1058    //
          WiFi.c  1059    //****************************************************************************
          WiFi.c  1060    int InitializeSystem(int isAppli, unsigned short OptionNum)
P_T 00000000              _InitializeSystem:               ; function: InitializeSystem
                                                           ; frame size=0
          WiFi.c  1061    {
          WiFi.c  1062        return INIT_ADDIN_APPLICATION(isAppli, OptionNum);
    00000000 D301                   MOV.L       L943+2,R3  ; _INIT_ADDIN_APPLICATION
    00000002 432B                   JMP         @R3
    00000004 0009                   NOP
    00000006              L943:                             
    00000006 0000                   .DATA.W     0
    00000008 <00000000>             .DATA.L     _INIT_ADDIN_APPLICATION
          WiFi.c  1063    }
          WiFi.c  1064    
          WiFi.c  1065    #pragma section
          WiFi.c  1066    
D   00000000              _network:                        ; static: network
    00000000 00000000               .DATA.L     H'00000000
    00000004 00000000               .DATA.L     H'00000000
    00000008 00000000               .DATA.L     H'00000000
    0000000C              _arrowRight:                     ; static: arrowRight
    0000000C E69B00                 .DATA.B     H'E6,H'9B,H'00
    0000000F              _loupe:                          ; static: loupe
    0000000F E65000                 .DATA.B     H'E6,H'50,H'00
    00000012              _checkSumDebug:                  ; static: checkSumDebug
    00000012 41307A3632             .DATA.B     H'41,H'30,H'7A,H'36,H'32,H'70,H'65,H'6E,H'69,H'53
             70656E6953   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 06-Jan-2019 21:51:53  PAGE   64


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000001C              _testPicture:                    ; static: testPicture
    0000001C 424D8A0000             .DATA.B     H'42,H'4D,H'8A,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'3E,H'00,H'00,H'00,H'28,H'00,
             0000000000 +                       H'00,H'00,H'1E,H'00,H'00,H'00,H'13,H'00,H'00,H'00,H'01,H'00,H'01,H'00,H'00,H'00,
             3E00000028 +                       H'00,H'00,H'4C,H'00,H'00,H'00,H'C3,H'0E,H'00,H'00,H'C3,H'0E,H'00,H'00,H'00,H'00,
             0000001E00 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'FF,H'FF,H'FF,H'00,H'00,H'00,H'00,H'00,H'7F,H'FF,
             0000130000 +                       H'FF,H'FC,H'00,H'00,H'01,H'FC,H'3F,H'07,H'E1,H'FC,H'21,H'04,H'21,H'FC,H'21,H'04,
             0001000100 +                       H'21,H'FC,H'27,H'DF,H'21,H'FC,H'25,H'55,H'21,H'FC,H'3F,H'57,H'E0,H'04,H'04,H'51,
             000000004C +                       H'00,H'04,H'07,H'DF,H'01,H'84,H'00,H'00,H'02,H'44,H'70,H'EE,H'38,H'44,H'49,H'09,
             000000C30E +                       H'49,H'C4,H'45,H'E9,H'4A,H'44,H'45,H'2E,H'4A,H'44,H'44,H'C8,H'49,H'C4,H'48,H'08,
             0000C30E00 +                       H'00,H'04,H'70,H'08,H'00,H'04,H'00,H'00,H'00,H'00
             0000000000   
             00000000FF   
             FFFF000000   
             00007FFFFF   
             FC000001FC   
             3F07E1FC21   
             0421FC2104   
             21FC27DF21   
             FC255521FC   
             3F57E00404   
             51000407DF   
             0184000002   
             4470EE3844   
             490949C445   
             E94A44452E   
             4A4444C849   
             C448080004   
             7008000400   
             000000       
    000000A6 00000002               .RES.W      1
    000000A8              _shouldRequestNetInfo:           ; static: shouldRequestNetInfo
    000000A8 00000001               .DATA.L     H'00000001
C   00000000              _filename:                       ; static: filename
    00000000 005C005C00             .DATA.W     H'005C,H'005C,H'0066,H'006C,H'0073,H'0030,H'005C,H'0054,H'0045,H'0053,H'0054,H'002E,
             66006C0073 +                       H'0067,H'0031,H'0061,H'0000
             0030005C00   
             5400450053   
             0054002E00   
             6700310061   
             0000         
    00000020              L439:
    00000020 436F6E6E65             .SDATA      "Connect"
             6374         
    00000027 00                     .DATA.B     H'00
    00000028              L440:
    00000028 446973636F             .SDATA      "Disconnect"
             6E6E656374   
    00000032 00                     .DATA.B     H'00
    00000033 00000001               .RES.B      1
    00000034              L441:
    00000034 42726F7773             .SDATA      "Browse"
             65           
    0000003A 00                     .DATA.B     H'00
    0000003B 00000001               .RES.B      1
    0000003C              L442:
    0000003C 4765742062             .SDATA      "Get by ID"
             79204944     




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 06-Jan-2019 21:51:53  PAGE   65


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000045 00                     .DATA.B     H'00
    00000046 00000002               .RES.W      1
    00000048              L444:
    00000048 4F46                   .SDATA      "OF"
    0000004A 00                     .DATA.B     H'00
    0000004B 00000001               .RES.B      1
    0000004C              L453:
    0000004C 5363616E6E             .SDATA      "Scanning..."
             696E672E2E   
             2E           
    00000057 00                     .DATA.B     H'00
    00000058              L454:
    00000058 444953434F             .SDATA      "DISCONNECT"
             4E4E454354   
    00000062 00                     .DATA.B     H'00
    00000063 00000001               .RES.B      1
    00000064              L455:
    00000064 4F4B                   .SDATA      "OK"
    00000066 00                     .DATA.B     H'00
    00000067 00000001               .RES.B      1
    00000068              L494:
    00000068 53656C6563             .SDATA      "Select Network:"
             74204E6574   
             776F726B3A   
    00000077 00                     .DATA.B     H'00
    00000078              L503:
    00000078 5061737377             .SDATA      "Password:"
             6F72643A     
    00000081 00                     .DATA.B     H'00
    00000082 00000002               .RES.W      1
    00000084              L519:
    00000084 5345415243             .SDATA      "SEARCH"
             48           
    0000008A 00                     .DATA.B     H'00
    0000008B 00000001               .RES.B      1
    0000008C              L523:
    0000008C 4B45494E20             .SDATA      "KEIN ERGEBNIS GEFUNDEN"
             4552474542   
             4E49532047   
             4546554E44   
             454E         
    000000A2 00                     .DATA.B     H'00
    000000A3 00000001               .RES.B      1
    000000A4              L563:
    000000A4 4745544150             .SDATA      "GETAPPINFO"
             50494E464F   
    000000AE 00                     .DATA.B     H'00
    000000AF 00000001               .RES.B      1
    000000B0              L573:
    000000B0 444F574E4C             .SDATA      "DOWNLOAD"
             4F4144       
    000000B8 00                     .DATA.B     H'00
    000000B9 00000001               .RES.B      1
    000000BA 00000002               .RES.W      1
    000000BC              L587:
    000000BC 446F776E6C             .SDATA      "Downloading..."
             6F6164696E   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 06-Jan-2019 21:51:53  PAGE   66


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             672E2E2E     
    000000CA 00                     .DATA.B     H'00
    000000CB 00000001               .RES.B      1
    000000CC              L588:
    000000CC 25642F2564             .SDATA      "%d/%d"
    000000D1 00                     .DATA.B     H'00
    000000D2 00000002               .RES.W      1
    000000D4              L658:
    000000D4 44415441               .SDATA      "DATA"
    000000D8 00                     .DATA.B     H'00
    000000D9 00000001               .RES.B      1
    000000DA 00000002               .RES.W      1
    000000DC              L670:
    000000DC 25303464               .SDATA      "%04d"
    000000E0 00                     .DATA.B     H'00
B   00000000              _buf:                            ; static: buf
    00000000 000001F4               .RES.B      500
    000001F4              _status:                         ; static: status
    000001F4 00000004               .RES.B      4
    000001F8              _checkSumDebugBuffer:            ; static: checkSumDebugBuffer
    000001F8 0000000B               .RES.B      11
B_B 00000000              _BR_Size:                        ; static: BR_Size
    00000000 00000004               .RES.L      1






































SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 06-Jan-2019 21:51:53  PAGE    1


******** STATISTICS INFORMATION ********


********** ERROR INFORMATION ***********

NUMBER OF ERRORS:           0
NUMBER OF WARNINGS:        11




******* SOURCE LINE INFORMATION ********

COMPILED SOURCE LINE:     1066



******* SECTION SIZE INFORMATION *******

PROGRAM  SECTION (P):                               00001354 Byte(s)
PROGRAM  SECTION (P_BR_Size):                       00000000 Byte(s)
PROGRAM  SECTION (P_TOP):                           0000000C Byte(s)
CONSTANT SECTION (C):                               000000E1 Byte(s)
CONSTANT SECTION (C_BR_Size):                       00000000 Byte(s)
CONSTANT SECTION (C_TOP):                           00000000 Byte(s)
DATA     SECTION (D):                               000000AC Byte(s)
DATA     SECTION (D_BR_Size):                       00000000 Byte(s)
DATA     SECTION (D_TOP):                           00000000 Byte(s)
BSS      SECTION (B):                               00000203 Byte(s)
BSS      SECTION (B_BR_Size):                       00000004 Byte(s)
BSS      SECTION (B_TOP):                           00000000 Byte(s)

 TOTAL PROGRAM SIZE: 000016F4 Byte(s)



********** LABEL INFORMATION ***********

NUMBER OF EXTERNAL REFERENCE SYMBOLS:           62
NUMBER OF EXTERNAL DEFINITION SYMBOLS:          34
NUMBER OF INTERNAL/EXTERNAL SYMBOLS:           270






















*** COMMAND PARAMETER ***


  -subcommand=C:\Users\Niko\AppData\Local\Temp\hmkC186.tmp 

